{"version":3,"sources":["actions/UserActions.js","reducers/user.js","actions/DataActions.js","reducers/stores.js","reducers/requests.js","reducers/request.js","reducers/cars.js","reducers/carmodels.js","reducers/carbrands.js","reducers/response.js","reducers/sto.js","reducers/index.js","store/configureStore.js","axios/init.js","axios/getData.js","components/pages/RequestsPage.jsx","axios/setData.js","components/pages/StoresPage.jsx","components/pages/SettingsPage.jsx","components/pages/FavoritesPage.jsx","components/pages/HomePage.jsx","components/pages/DynamicRoutePage.jsx","components/pages/NewCarPage.jsx","components/pages/NewRequestPage.jsx","components/pages/ResponsesPage.jsx","components/pages/ResponsePage.jsx","components/pages/ChatPage.jsx","components/pages/CarsPage.jsx","components/pages/StoresList.jsx","axios/login.js","components/pages/LoginPage.jsx","routes.js","components/pages/PanelLeftPage.jsx","components/pages/PanelRightPage.jsx","components/pages/AboutPage.jsx","components/pages/FormPage.jsx","components/pages/NotFoundPage.jsx","index.js","components/App.jsx"],"names":["LOGIN_SUCCESS","handleLogin","callback","dispatch","type","payload","initialState","id","name","email","role_id","shop_id","SHOPS_REQUEST","SHOPS_FAVORITE","SHOPS_ADD_FAVORITE","SHOPS_DELETE_FAVORITE","CATEGORIES_REQUEST","REQUESTS","REQUEST","ADD_REQUEST","UPDATE_REQUEST","DELETE_REQUEST","RESPONSE","CARS","ADD_CAR","UPDATE_CAR","DELETE_CAR","CAR_BRANDS","CAR_MODELS","handleResponse","newState","shopIndex","shops","favorite_shops","categories","reqIndex","carIndex","description","address","phone","comment","updated_at","Date","rootReducer","combineReducers","user","state","arguments","length","undefined","action","set","then","Object","objectSpread","stores","toConsumableArray","push","findIndex","shop","splice","sto","requests","edited_req","req","req_id","request","response","cars","edited_car","car","car_id","carbrands","carmodels","store","createStore","applyMiddleware","thunk","logger","axios","require","defaults","baseURL","headers","post","get","AUTH_TOKEN","common","getData","classCallCheck","this","data","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","url","res","wrap","_context","prev","next","sent","status","abrupt","t0","console","log","stop","_x","apply","getRequest","props","reqId","detect","get_data","Detector","online","value","handleRequest","_x2","RequestsPage","_this","possibleConstructorReturn","getPrototypeOf","call","$f7","views","main","router","navigate","_this2","dialog","preloader","close","cat_id","cat","find","x","category","_this3","react_default","createElement","Fragment","framework7_react_esm","style","whiteSpace","mediaList","className","map","item","key","swipeout","onClick","open_request","after","created_at","toLocaleString","text","slot","material","answers","color","get_category","category_id","left","answer_to_request","React","Component","connect","setData","dataPut","_ref2","_callee2","_context2","put","_x3","_x4","dataDelete","_ref3","_callee3","_context3","delete","_x5","StoresPage","toFavorite","set_data","handleFavoriteShops","result","addFSSuccess","open","notification","create","icon","title","subtitle","closeTimeout","_this$props","accordionList","sort","b","index","accordionItem","filter","y","SettingsPage","button","link","FavoritesPage","removeFavorite","handleFavoriteShopDelete","right","initApplication","init","handleShops","handleCategories","handleRequests","handleCarBrands","handleCarModels","HomePage","chgTitle","setState","initApp","hideToolbarOnScroll","pageContent","textColor","bgColor","dist","iconMd","bottom","tabbar","labels","tabLink","tabLinkActive","animated","tabActive","pages_RequestsPage","pages_StoresPage","pages_FavoritesPage","pages_SettingsPage","brands","models","RequestPage","backLink","strong","keys","$f7route","params","$f7router","back","NewCarPage","handleBrand","brand_id","car_brand_id","Number","modelSelectComponent","f7SmartSelect","setValue","handleModel","model_id","car_model_id","handleYear","year","handleData","defineProperty","sendCar","req_data","years","handleUpdateCar","updCarSuccess","handleAddCar","addCarSuccess","vin","i","initData","carId","brandSelectComponent","yearSelectComponent","_this$state","self","smartSelect","ref","el","smartSelectParams","openIn","searchbar","searchbarPlaceholder","closeOnSelect","on","closed","getValue","brand","car_brand","model","car_model","label","floatingLabel","placeholder","onChange","event","target","fill","NewRequestPage","sendAnswer","addRequestSuccess","request_id","status_id","user_id","price","is_new","defaultChecked","outline","getResponse","resp_id","ResponsesPage","noHairlinesMd","open_response","get_shop","_","getMessages","answer_id","loading","sendingData","show","setTimeout","hide","sendMessage","notificationOffline","handleSendingData","forEach","_x9","_x6","_x7","_x8","respMessages","closeButton","progressbar","messageValue","attachments","sheetVisible","typingMessage","messages","messagesData","message","date","images","responseInProgress","messagebarComponent","attachmentsVisible","change","onInput","handleMessage","bind","iconIos","messagesComponent","image","avatar","footer","first","isFirstMessage","last","isLastMessage","tail","isTailMessage","dangerouslySetInnerHTML","__html","typing","header","concat","oldData","newData","isEqual","updateMessages","$f7ready","messagebar","f7Messagebar","f7Messages","intervalId","setInterval","clearInterval","previousMessage","isTitle","nextMessage","indexOf","e","$$","parents","checked","unshift","$textareaEl","val","replace","trim","messagesToSend","attachment","clear","focus","nextProps","prevState","_default","people","onAttachmentDelete","deleteAttachment","handleAttachment","answer","Math","floor","random","person","carsPage","deleteCar","handleDeleteCar","confirm","newCar","editHandle","deleteHandle","ShopsList","searchAll","query","items","found","toLowerCase","handleToggle","selectedShops","setShops","vlData","vl","selected_shops","inner","searchContainer","searchItem","searchIn","medialList","virtualList","virtualListParams","renderExternal","height","$theme","ios","mediaItem","radio","top","topPosition","authorisation","login","_args2","password","application","access_token","user_details","LoginPage","authError","authSuccess","handleOnChange","prop","inputLogin","inputPassword","auth","success","_this$state2","loginScreen","form","authentication","routes","path","component","view","panelClose","defaultValue","input","min","max","step","resizable","Array","from","n","checkbox","tag","raised","round","small","large","ChatPage","CarsPage","DynamicRoutePage","ResponsePage","StoresList","Framework7","use","Framework7React","ReactDOM","render","f7params","theme","es","themeDark","cover","reveal","popupClose","document","getElementById"],"mappings":"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","file":"static/js/main.987520ed.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport function handleLogin(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: callback,\n        })\n    }\n}","import {\n    LOGIN_SUCCESS,\n} from '../actions/UserActions'\n\nimport { set } from 'idb-keyval';\n\nconst initialState = {\n    id: 0,\n    name: '',\n    email: '',\n    role_id: 0,\n    shop_id: null,\n};\n\nexport function userReducer(state = initialState, action) {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n            set('user', action.payload).then();\n            return { ...action.payload };\n        default:\n            return state\n    }\n}","export const SHOPS_REQUEST = 'SHOPS_REQUEST';\nexport const SHOPS_FAVORITE = 'SHOPS_FAVORITE';\nexport const SHOPS_ADD_FAVORITE = 'SHOPS_ADD_FAVORITE';\nexport const SHOPS_DELETE_FAVORITE = 'SHOPS_DELETE_FAVORITE';\nexport const CATEGORIES_REQUEST = 'CATEGORIES_REQUEST';\nexport const REQUESTS = 'REQUESTS';\nexport const REQUEST = 'REQUEST';\nexport const ADD_REQUEST = 'ADD_REQUEST';\nexport const UPDATE_REQUEST = 'UPDATE_REQUEST';\nexport const DELETE_REQUEST = 'DELETE_REQUEST';\nexport const RESPONSE = 'RESPONSE';\nexport const CARS = 'CARS';\nexport const ADD_CAR = 'ADD_CAR';\nexport const UPDATE_CAR = 'UPDATE_CAR';\nexport const DELETE_CAR = 'DELETE_CAR';\nexport const CAR_BRANDS = 'CAR_BRANDS';\nexport const CAR_MODELS = 'CAR_MODELS';\n\nexport function handleShops(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: SHOPS_REQUEST,\n            payload: callback,\n        })\n    }\n}\nexport function handleFavoriteShops(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: SHOPS_FAVORITE,\n            payload: callback,\n        })\n    }\n}\nexport function handleFavoriteShopAdd(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: SHOPS_ADD_FAVORITE,\n            payload: callback,\n        })\n    }\n}\nexport function handleFavoriteShopDelete(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: SHOPS_DELETE_FAVORITE,\n            payload: callback,\n        })\n    }\n}\nexport function handleCategories(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CATEGORIES_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleRequests(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: REQUESTS,\n            payload: payload,\n        })\n    }\n}\nexport function handleRequest(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleResponse(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: RESPONSE,\n            payload: payload,\n        })\n    }\n}\nexport function handleAddRequests(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: ADD_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleUpdateRequest(payload) {\n    return function(dispatch) {\n        dispatch({\n            type:  UPDATE_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleDeleteRequest(payload) {\n    return function(dispatch) {\n        dispatch({\n            type:  DELETE_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleAddCar(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: ADD_CAR,\n            payload: payload,\n        })\n    }\n}\nexport function handleUpdateCar(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: UPDATE_CAR,\n            payload: payload,\n        })\n    }\n}\nexport function handleDeleteCar(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: DELETE_CAR,\n            payload: payload,\n        })\n    }\n}\nexport function handleCars(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CARS,\n            payload: payload,\n        })\n    }\n}\nexport function handleCarBrands(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CAR_BRANDS,\n            payload: payload,\n        })\n    }\n}\nexport function handleCarModels(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CAR_MODELS,\n            payload: payload,\n        })\n    }\n}","import {\n    SHOPS_REQUEST,\n    SHOPS_FAVORITE,\n    SHOPS_ADD_FAVORITE,\n    SHOPS_DELETE_FAVORITE,\n    CATEGORIES_REQUEST,\n} from '../actions/DataActions'\n\nconst initialState = {\n    shops: [],\n    favorite_shops: [],\n    categories: [],\n};\n\nlet newState;\nlet shopIndex;\n\nexport function storesReducer(state = initialState, action) {\n    switch (action.type) {\n        case SHOPS_REQUEST:\n            return {...state, shops: action.payload};\n        case SHOPS_FAVORITE:\n            return {...state, favorite_shops: action.payload};\n        case SHOPS_ADD_FAVORITE:\n            newState = [...state.favorite_shops];\n            newState.push(action.payload);\n            return {...state, favorite_shops: newState};\n        case SHOPS_DELETE_FAVORITE:\n            const shop_id = action.payload;\n            newState = [...state.favorite_shops];\n            shopIndex = newState.findIndex((shop => shop.id === shop_id));\n            newState.splice(shopIndex, 1);\n            return {...state, favorite_shops: newState};\n        case CATEGORIES_REQUEST:\n            return {...state, categories: action.payload};\n\n        default:\n            return state\n    }\n}","import {ADD_REQUEST, DELETE_REQUEST, REQUESTS, UPDATE_REQUEST} from \"../actions/DataActions\";\n\nconst initialState = [];\nlet newState = [];\nlet reqIndex;\n\nexport function requestsReducer(state = initialState, action) {\n    switch (action.type) {\n        case REQUESTS:\n            return action.payload;\n        case ADD_REQUEST:\n            newState = [...state];\n            newState.push(action.payload);\n            return newState;\n        case UPDATE_REQUEST:\n            const edited_req = action.payload;\n            newState = [...state];\n            reqIndex = newState.findIndex((req => req.id === edited_req.id));\n            newState[reqIndex] = edited_req;\n            return newState;\n        case DELETE_REQUEST:\n            const req_id = action.payload;\n            newState = [...state];\n            reqIndex = newState.findIndex((req => req.id === req_id));\n            newState.splice(reqIndex, 1);\n            return newState;\n        default:\n            return state\n    }\n}","import {REQUEST} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function requestReducer(state = initialState, action) {\n    switch (action.type) {\n        case REQUEST:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {ADD_CAR, CARS, UPDATE_CAR, DELETE_CAR} from \"../actions/DataActions\";\n\nconst initialState = [];\nlet newState = [];\nlet carIndex = 0;\n\nexport function carsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CARS:\n            return action.payload;\n        case ADD_CAR:\n            newState = [...state];\n            newState.push(action.payload);\n            return newState;\n        case UPDATE_CAR:\n            const edited_car = action.payload;\n            newState = [...state];\n            carIndex = newState.findIndex((car => car.id === edited_car.id));\n            newState[carIndex] = edited_car;\n            return newState;\n        case DELETE_CAR:\n            const car_id = action.payload;\n            newState = [...state];\n            carIndex = newState.findIndex((car => car.id === car_id));\n            newState.splice(carIndex, 1);\n            return newState;\n        default:\n            return state\n    }\n}","import {CAR_MODELS} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function carModelsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CAR_MODELS:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {CAR_BRANDS} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function carBrandsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CAR_BRANDS:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {RESPONSE} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function responseReducer(state = initialState, action) {\n    switch (action.type) {\n        case RESPONSE:\n            return action.payload;\n        default:\n            return state\n    }\n}","const initialState = [\n    {\n        id: 1,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n    {\n        id: 2,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n    {\n        id: 3,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n];\n\nexport function stoReducer(state = initialState, action) {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport { userReducer } from './user'\nimport { storesReducer } from './stores'\nimport { requestsReducer } from './requests'\nimport { requestReducer } from './request'\nimport { carsReducer } from './cars'\nimport { carModelsReducer } from './carmodels'\nimport { carBrandsReducer } from './carbrands'\nimport { responseReducer } from './response'\nimport { stoReducer } from './sto'\n\nexport const rootReducer = combineReducers({\n    user: userReducer,\n    stores: storesReducer,\n    sto: stoReducer,\n    requests: requestsReducer,\n    request: requestReducer,\n    response: responseReducer,\n    cars: carsReducer,\n    carbrands: carBrandsReducer,\n    carmodels: carModelsReducer,\n});","import { createStore, applyMiddleware } from 'redux'\nimport { rootReducer } from '../reducers'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));","import { get } from 'idb-keyval';\nexport const axios = require('axios');\n\naxios.defaults.baseURL = 'https://marshal.bh-app.ru/api';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nget('AUTH_TOKEN').then(AUTH_TOKEN => {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + AUTH_TOKEN;\n});\n\n\n","import { set } from 'idb-keyval';\nimport { axios } from './init'\n\n\nexport class getData {\n    data = async (type) => {\n        const url = '/' + type;\n        const payload = {};\n        try {\n            let res =  await axios.get(url, payload);\n            if (res.status === 200) {\n                set(type, res.data).then();\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {getData} from \"../../axios/getData\";\n// import {setData} from \"../../axios/setData\";\nimport {handleRequest,handleDeleteRequest} from \"../../actions/DataActions\";\n\nimport {Detector} from \"react-detect-offline\";\nimport {get} from \"idb-keyval\";\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n    Block,\n    BlockTitle\n} from 'framework7-react';\n\nconst getRequest = async (props, reqId) => {\n    let detect = new Detector();\n    if (await detect.state.online) {\n        let get_data = new getData();\n        await get_data.data('request/' + reqId).then(value => value !== undefined && props.handleRequest(value));\n    }else{\n        await get('request/' + reqId).then(value => value !== undefined && props.handleRequest(value));\n    }\n};\n\nclass RequestsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    answer_to_request(reqId) {\n        const app = this.$f7;\n        app.views.main.router.navigate('answer_to_request/' + reqId + '/');\n    }\n\n    open_request(reqId) {\n        this.$f7.dialog.preloader('Получаем предложения...');\n        getRequest(this.props, reqId).then(() => {\n            this.$f7.views.main.router.navigate('requests/' + reqId + '/');\n            this.$f7.dialog.close();\n        });\n    }\n\n    get_category(cat_id) {\n        const cat = this.props.categories.find(x => x.id === cat_id);\n        return cat !== undefined ? cat.category : \"Без категории\"\n    }\n\n    render() {\n        const {requests} = this.props;\n        return (\n            <React.Fragment>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >Здесь вы можете подать заявку на подбор необходимого вам автотовара или запчасти.</BlockTitle>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {\n                        requests.length === 0\n                            ?\n                            <Block>Запросы пока не создавались...</Block>\n                            :\n                            requests.map(item => {\n                                return <ListItem\n                                    key={item.id}\n                                    swipeout\n                                    onClick={() => this.open_request(item.id)}\n                                    after={item.created_at.toLocaleString()}\n                                    text={item.text}\n                                >\n                                <span slot=\"title\">\n                                    <Icon\n                                        className={\"status-icon\"}\n                                        material={item.answers > 0 ? 'check_circle_outline' : 'access_time'}\n                                        color=\"blue\"\n                                    />\n                                    {this.get_category(item.category_id)}\n                                </span>\n                                    <SwipeoutActions left>\n                                        <SwipeoutButton color=\"blue\" onClick={() => this.answer_to_request(item.id)}>\n                                            <Icon material=\"reply\"/> Ответить\n                                        </SwipeoutButton>\n                                    </SwipeoutActions>\n                                </ListItem>\n                            })\n                    }\n                </List>\n            </React.Fragment>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        requests: store.requests,\n        categories: store.stores.categories,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleRequest: request => dispatch(handleRequest(request)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestsPage)","import {axios} from './init'\n\n\nexport class setData {\n    data = async (type, payload) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.post(url, payload);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n    dataPut = async (type, payload) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.put(url, payload);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n    dataDelete = async (type) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.delete(url);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n    AccordionContent,\n    BlockTitle,\n} from 'framework7-react';\nimport {setData} from \"../../axios/setData\";\nimport {getData} from \"../../axios/getData\";\nimport {handleFavoriteShops} from \"../../actions/DataActions\";\n\nclass StoresPage extends React.Component {\n    toFavorite = (shop_id) => {\n        const set_data = new setData();\n        const get_data = new getData();\n        if (shop_id > 0) {\n            set_data.dataPut('favorite-shop-add/'+shop_id, {}).then(async () => {\n                await get_data.data('favorite-shops').then(value => value !== undefined && this.props.handleFavoriteShops(value.result));\n                // todo брать с сервера ответ с магазином, который был добавлен в избранное\n                //this.props.handleFavoriteShopAdd(shop_id);\n                this.addFSSuccess.open();\n            });\n        }\n    };\n\n    addFSSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Магазин добавлен в избранные',\n        closeTimeout: 3000,\n    });\n\n    render() {\n        const {shops, categories} = this.props;\n        return (\n            <React.Fragment>\n                <BlockTitle>Выберите интересующую вас категорию автотоваров:</BlockTitle>\n                <List accordionList>\n                    {\n                        categories.sort((a, b) => {\n                            return a.category < b.category ? -1 : 1\n                        })\n                            .map((cat, index) =>\n                            <ListItem\n                                key={index}\n                                accordionItem\n                                title={cat.category}>\n                                <AccordionContent>\n                                    <List\n                                        mediaList\n                                        className={\"no-margin\"}\n                                    >\n                                        { (shops.length) ?\n                                            shops.filter(x => x.categories.find(y => y.id === cat.id)).map(item =>\n                                                <ListItem\n                                                    key={item.id}\n                                                    swipeout\n                                                    after={item.phone}\n                                                    subtitle={item.description}\n                                                    text={item.address}\n                                                >\n                                                    <span slot=\"title\">\n                                                        <Icon className={\"status-icon\"} material=\"store\"\n                                                              color=\"green\"/> {item.name}\n                                                    </span>\n                                                    <SwipeoutActions left>\n                                                        <SwipeoutButton color=\"blue\" onClick={() => this.toFavorite(item.id)}>\n                                                            <Icon material=\"favorite\"/> В избранное\n                                                        </SwipeoutButton>\n                                                    </SwipeoutActions>\n                                                </ListItem>\n                                            )\n                                            : null\n                                        }\n                                    </List>\n                                </AccordionContent>\n                            </ListItem>\n                        )\n                    }\n                </List>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        shops: store.stores.shops,\n        categories: store.stores.categories,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleFavoriteShops: data => dispatch(handleFavoriteShops(data)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoresPage)\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    List,\n    ListItem,\n    Icon,\n} from 'framework7-react';\n\nclass SettingsPage extends React.Component {\n\n    render() {\n        const {user} = this.props;\n        return (\n            <div>\n                <h1>Личный кабинет</h1>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {(user.id > 0)\n                        ?\n                        <ListItem\n                            subtitle={user.email}\n                        >\n                        <span slot=\"title\">\n                            <Icon className={\"status-icon\"} material=\"account_circle\" color=\"main\"/> {user.name}\n                        </span>\n                        </ListItem>\n                        :\n                        <ListItem\n                            button\n                            link=\"login/\"\n                            subtitle=\"После регистрации станут доступны дополнительные возможности\"\n                        >\n                        <span slot=\"title\">\n                            <Icon className={\"status-icon\"} material=\"account_circle\" color=\"main\"/> Вход\n                        </span>\n                        </ListItem>\n                    }\n                </List>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nexport default connect(mapStateToProps)(SettingsPage)","import React from 'react';\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n} from 'framework7-react';\nimport {connect} from \"react-redux\";\nimport {setData} from \"../../axios/setData\";\nimport {handleFavoriteShopDelete} from \"../../actions/DataActions\";\n\nclass FavoritesPage extends React.Component {\n\n    removeFavorite = (shop_id) => {\n        const set_data = new setData();\n        if (shop_id > 0) {\n            set_data.dataPut('favorite-shop-remove/'+shop_id, {}).then(async () => {\n                this.props.handleFavoriteShopDelete(shop_id);\n                this.addFSSuccess.open();\n            });\n        }\n    };\n\n    addFSSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Магазин удален из избранного',\n        closeTimeout: 3000,\n    });\n\n    render() {\n        const {favorite_shops} = this.props;\n        return (\n            <div>\n                <h1>Избранное</h1>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {\n                        (favorite_shops.length) ?\n                        favorite_shops.map(item =>\n                            <ListItem\n                                key={item.id}\n                                swipeout\n                                after={item.phone}\n                                subtitle={item.description}\n                                text={item.address}\n                            >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"store\" color=\"purple\"/> {item.name}\n                                </span>\n                                <SwipeoutActions right>\n                                    <SwipeoutButton color=\"orange\" onClick={() => this.removeFavorite(item.id)}>\n                                        <Icon material=\"favorite\"/> Из избранного\n                                    </SwipeoutButton>\n                                </SwipeoutActions>\n                            </ListItem>\n                        ) : \"Вы можете добавить любимые магазины в избранное.\"\n                    }\n                </List>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        favorite_shops: store.stores.favorite_shops,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleFavoriteShopDelete: data => dispatch(handleFavoriteShopDelete(data)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesPage)","import React from 'react';\nimport { get } from 'idb-keyval';\nimport {connect} from \"react-redux\";\nimport { Offline, Detector } from \"react-detect-offline\";\n\nimport {\n    Page,\n    Navbar,\n    NavRight,\n    Link,\n    Toolbar,\n    Tabs,\n    Tab,\n    Icon,\n    Fab\n} from 'framework7-react';\n\nimport RequestsPage from './RequestsPage';\nimport StoresPage from './StoresPage';\nimport SettingsPage from './SettingsPage';\nimport FavoritesPage from \"./FavoritesPage\";\n\nimport {getData} from '../../axios/getData'\nimport {handleLogin} from \"../../actions/UserActions\";\nimport {\n    handleCategories,\n    handleShops,\n    handleRequests,\n    handleCarBrands,\n    handleCarModels,\n} from \"../../actions/DataActions\";\n\n// Load data from indexedDB to Store\nclass initApplication {\n    init = async (props) => {\n        await get('user').then(value => value !== undefined && props.handleLogin(value));\n\n        // from internet\n        let detect = new Detector();\n        if (detect.state.online) {\n            let get_data = new getData();\n            await get_data.data('shops').then(value => value !== undefined && props.handleShops(value));\n            await get_data.data('categories').then(value => value !== undefined && props.handleCategories(value));\n            await get_data.data('requests').then(value => value !== undefined && props.handleRequests(value));\n            await get_data.data('carbrands').then(value => value !== undefined && props.handleCarBrands(value));\n            await get_data.data('carmodels').then(value => value !== undefined && props.handleCarModels(value));\n        } else {\n            // from idb\n            await get('shops').then(value => value !== undefined && props.handleShops(value));\n            await get('categories').then(value => value !== undefined && props.handleCategories(value));\n            await get('requests').then(value => value !== undefined && props.handleRequests(value));\n            await get('carbrands').then(value => value !== undefined && props.handleCarBrands(value));\n            await get('carmodels').then(value => value !== undefined && props.handleCarModels(value));\n        }\n    }\n}\n\n\nclass HomePage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            title: \"Заявки\",\n        }\n    }\n\n    async componentDidMount() {\n        this.$f7.dialog.preloader('Загрузка...');\n        const initApp = new initApplication();\n        await initApp.init(this.props);\n        this.$f7.dialog.close();\n    }\n\n    chgTitle = (title) => {\n        this.setState({title: title});\n    };\n\n    render() {\n        const { title } = this.state;\n        return (\n            <Page hideToolbarOnScroll pageContent={false}>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={\"МС\" + (title !== '' ? (' / ' + title) : \"\")}\n                >\n                    <NavRight>\n                        <Offline>\n                            <Link iconMd=\"material:signal_wifi_off\" />\n                        </Offline>\n                    </NavRight>\n                </Navbar>\n                <Toolbar\n                    bottom\n                    tabbar\n                    labels\n                    color=\"main\"\n                >\n                    <Link tabLink=\"#requests\" onClick={() => this.chgTitle('Заявки')} tabLinkActive text=\"Заявки\" iconMd=\"material:important_devices\"/>\n                    <Link tabLink=\"#stores\" onClick={() => this.chgTitle('Заказы')} text=\"Заказы\" iconMd=\"material:list\"/>\n                    <Link tabLink=\"#person\" onClick={() => this.chgTitle('Личный Кабинет')} text=\"Кабинет\" iconMd=\"material:person\"/>\n                </Toolbar>\n\n                <Tabs animated>\n                    <Tab id=\"requests\" className=\"page-content\" tabActive>\n                        <RequestsPage/>\n                    </Tab>\n                    <Tab id=\"stores\" className=\"page-content\">\n                        <StoresPage/>\n                    </Tab>\n                    <Tab id=\"favorites\" className=\"page-content\">\n                        <FavoritesPage/>\n                    </Tab>\n                    <Tab id=\"person\" className=\"page-content\">\n                        <SettingsPage/>\n                    </Tab>\n                </Tabs>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n        handleShops: shops => dispatch(handleShops(shops)),\n        handleCategories: categories => dispatch(handleCategories(categories)),\n        handleRequests: requests => dispatch(handleRequests(requests)),\n        handleCarBrands: brands => dispatch(handleCarBrands(brands)),\n        handleCarModels: models => dispatch(handleCarModels(models)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","import React, {Component} from 'react';\nimport {Page, Navbar, Block, Link} from 'framework7-react';\n\nexport default class RequestPage extends Component {\n    render() {\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"red\"\n                    title=\"Заявка\"\n                    backLink=\"Back\"\n                />\n                <Block strong>\n                    <ul>\n                        {Object.keys(this.$f7route.params).map(key => (\n                            <li key={key}><b>{key}:</b> {this.$f7route.params[key]}</li>\n                        ))}\n                    </ul>\n                </Block>\n                <Block strong>\n                    <Link onClick={() => this.$f7router.back()}>Назад</Link>\n                </Block>\n            </Page>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n    ListItem,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\n\nimport {setData} from \"../../axios/setData\";\nimport {handleAddCar, handleUpdateCar} from \"../../actions/DataActions\";\n\nclass NewCarPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            car_brand_id: 1,\n            car_model_id: 1,\n            car_id: 0,\n            vin: '',\n            years: [],\n            year: 2019,\n        }\n    }\n\n    handleBrand = (brand_id) => {\n        // find and set first available model\n        const models = this.props.models.filter(x => x.car_brand_id === Number(brand_id));\n        this.setState({ car_brand_id: Number(brand_id) }, () => {\n            this.modelSelectComponent.f7SmartSelect.setValue(models[0].id);\n            this.handleModel(models[0].id);\n        });\n    };\n    handleModel = (model_id) => {\n        this.setState({ car_model_id: Number(model_id) });\n    };\n    handleYear = (year) => {\n        this.setState({ year: Number(year) });\n    };\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    sendCar = (car_id) => {\n        // prepare payload\n        let req_data = {...this.state};\n        delete req_data.years;\n        delete req_data.car_id;\n        req_data[\"user_id\"] = this.props.user.id;\n\n        const set_data = new setData();\n\n        if (car_id > 0) {\n            set_data.dataPut('car-update/'+car_id, req_data).then(() => {\n                req_data[\"id\"] = car_id;\n                this.props.handleUpdateCar(req_data);\n                this.updCarSuccess.open();\n            });\n        }else {\n            set_data.data('car-add', req_data).then(data => {\n                this.props.handleAddCar(data.result);\n                this.addCarSuccess.open();\n            });\n        }\n\n        this.$f7.views.main.router.navigate('/cars/');\n    };\n\n\n    addCarSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Автомобиль добавлен',\n        text: 'Теперь вы можете использовать его в запросах.',\n        closeTimeout: 3000,\n    });\n\n    updCarSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Автомобиль отредактирован',\n        text: 'Теперь вы можете использовать новые данные.',\n        closeTimeout: 3000,\n    });\n\n    componentDidMount() {\n        let years = [];\n        for (let i = 2019; i > 1900; i--) {\n            years.push(i)\n        }\n        let year = years[0];\n\n        const initData = {years: years};\n        const car_id = Number(this.$f7route.params.carId);\n\n        if (car_id > 0) {\n            const car = this.props.cars.find(car => car.id === car_id);\n\n            // Set data to local state\n            initData.car_id = car.id;\n            initData.car_brand_id = car.car_brand_id;\n            initData.car_model_id = car.car_model_id;\n            initData.vin = car.vin;\n            initData.year = car.year;\n\n            this.setState(initData, () => {\n                // Set data to fields\n                this.brandSelectComponent.f7SmartSelect.setValue(car.car_brand_id);\n                this.modelSelectComponent.f7SmartSelect.setValue(car.car_model_id);\n                this.yearSelectComponent.f7SmartSelect.setValue(car.year);\n            });\n\n        } else{\n            this.setState(initData, () => {\n                this.yearSelectComponent.f7SmartSelect.setValue(year);\n            });\n        }\n    }\n\n    render() {\n        const {brands, models} = this.props;\n        const {car_id, car_brand_id, years, vin} = this.state;\n        const self = this;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={car_id > 0 ? \"Редактировать машину\" : \"Добавление машины\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >Здесь вы можете добавить ваш автомобиль(и) для более быстрого подбора услуг.</BlockTitle>\n                <List>\n                    <ListItem\n                        title=\"Марка автомобиля\"\n                        smartSelect\n                        ref={(el) => {this.brandSelectComponent = el}}\n                        smartSelectParams={{\n                            openIn: 'popup',\n                            searchbar: true,\n                            searchbarPlaceholder: 'Найти марку',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleBrand(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {brands.map(brand => (\n                                <option\n                                    key={'brand_' + brand.id}\n                                    value={brand.id}\n                                >{brand.car_brand}</option>\n                            ))}\n                        </select>\n                    </ListItem>\n                    <ListItem\n                        title=\"Модель\"\n                        smartSelect\n                        ref={(el) => {this.modelSelectComponent = el}}\n                        smartSelectParams={{\n                            openIn: 'popup',\n                            searchbar: true,\n                            searchbarPlaceholder: 'Найти модель',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleModel(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {models.filter(x => x.car_brand_id === car_brand_id).map(model => (\n                                <option\n                                    key={'model_' + model.id}\n                                    value={model.id}\n                                >{model.car_model}</option>\n                            ))}\n                        </select>\n                    </ListItem>\n                    <ListItem\n                        title=\"Год выпуска\"\n                        ref={(el) => {this.yearSelectComponent = el}}\n                        smartSelect\n                        smartSelectParams={{\n                            openIn: 'sheet',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleYear(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {years.map(year => (<option key={'year_' + year} value={year}>{year}</option>))}\n                        </select>\n                    </ListItem>\n                    <ListInput\n                        label=\"VIN\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Введите VIN номер автомобиля\"\n                        value={vin}\n                        onChange={(event) => this.handleData('vin', event.target.value)}\n                    />\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.sendCar(car_id)}\n                    >{car_id > 0 ? 'Изменить' : 'Добавить'}</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n        cars: store.cars,\n        brands: store.carbrands,\n        models: store.carmodels,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleAddCar: data => dispatch(handleAddCar(data)),\n        handleUpdateCar: data => dispatch(handleUpdateCar(data)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCarPage)","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n    ListItem,\n    Toggle,\n    Icon,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\n\nimport {setData} from \"../../axios/setData\";\n\n/*import {\n    handleAddRequests,\n    handleUpdateRequest,\n   // handleDeleteRequest\n} from \"../../actions/DataActions\";*/\n\n/*\n        'request_id',\n        'status_id',\n        'shop_id',\n        'user_id',\n        'price',\n        'is_new',\n        'description'\n */\nclass NewRequestPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            request_id: null,\n            status_id: 1,\n            shop_id: 0,\n            user_id: 0,\n            price: '',\n            is_new: true,\n            description: '',\n            request: {created_at: new Date()},\n        }\n    }\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    sendAnswer = () => {\n        let req_data = {...this.state};\n        delete req_data.request;\n        const set_data = new setData();\n        set_data.data('answer-add', req_data).then(data => {\n            console.log(data.result);\n            //this.props.handleAddRequests(data.result);\n            this.addRequestSuccess.open();\n        });\n        this.$f7.views.main.router.navigate('/');\n    };\n\n    addRequestSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Заявка добавлена',\n        text: 'В ближайшее время вам ответят.',\n        closeTimeout: 3000,\n    });\n\n    get_category(cat_id) {\n        const cat = this.props.categories.find(x => x.id === cat_id);\n        return cat !== undefined ? cat.category : \"Без категории\"\n    }\n\n    componentDidMount() {\n        const initData = {};\n        const req_id = Number(this.$f7route.params.reqId);\n        if (req_id > 0) {\n            const request = this.props.requests.find(request => request.id === req_id);\n            // Set data to local state\n            initData.request_id = req_id;\n            initData.shop_id = this.props.user.shop_id;\n            initData.user_id = this.props.user.id;\n            initData.request = request;\n            this.setState(initData);\n        }\n    }\n\n    render() {\n        const {price, description, is_new, request} = this.state;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={\"Ответ на запрос\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <List\n                    mediaList\n                    className={\"no-margin list-title\"}\n                >\n                    <ListItem\n                        swipeout\n                        after={request.created_at.toLocaleString()}\n                        text={request.text}\n                    >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"access_time\" color=\"blue\"/>\n                                    {this.get_category(request.category_id)}\n                                </span>\n                    </ListItem>\n                </List>\n                <List\n                    className={\"list-with-header\"}>\n                    <ListItem>\n                        <BlockTitle\n                            style={{whiteSpace: 'initial'}}\n                        >Здесь вы можете ответить на заявку покупателя.</BlockTitle>\n                    </ListItem>\n                    <ListItem>\n                        <span>Товар новый</span>\n                        <Toggle defaultChecked={is_new}\n                                onChange={() => this.handleData('is_new', !is_new)}\n                        />\n                    </ListItem>\n                    <ListInput\n                        outline\n                        label=\"Цена\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Стоимость товара/услуги\"\n                        value={price}\n                        onChange={(event) => this.handleData('price', event.target.value)}\n                    />\n                    <ListInput\n                        outline\n                        label=\"Описание\"\n                        floatingLabel\n                        type=\"textarea\"\n                        placeholder=\"Дополнительная информация о товаре/предложении...\"\n                        value={description}\n                        onChange={(event) => this.handleData('description', event.target.value)}\n                    />\n\n\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.sendAnswer()}\n                    >Отправить ответ</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n        cars: store.cars,\n        models: store.carmodels,\n        brands: store.carbrands,\n        requests: store.requests,\n        shops: store.stores.shops,\n        categories: store.stores.categories,\n    }\n};\n/*\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleAddRequests: data => dispatch(handleAddRequests(data)),\n        handleUpdateRequest: data => dispatch(handleUpdateRequest(data)),\n    }\n};\n*/\n\nexport default connect(mapStateToProps/*, mapDispatchToProps*/)(NewRequestPage)","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\n\nimport {Detector} from \"react-detect-offline\";\nimport {getData} from \"../../axios/getData\";\nimport {handleResponse} from \"../../actions/DataActions\";\nimport {get} from \"idb-keyval\";\n\nimport {\n    Page,\n    Navbar,\n    List,\n    Icon,\n    ListItem,\n    Block,\n} from 'framework7-react';\n\nconst getResponse = async (props, resp_id) => {\n    let detect = new Detector();\n    if (await detect.state.online) {\n        let get_data = new getData();\n        await get_data.data('answer/' + resp_id).then(value => value !== undefined && props.handleResponse(value));\n    }else{\n        await get('answer/' + resp_id).then(value => value !== undefined && props.handleResponse(value));\n    }\n};\n\nclass ResponsesPage extends Component {\n\n    get_category(cat_id) {\n        const cat = this.props.categories.find(x => x.id === cat_id);\n        return cat !== undefined ? cat.category : \"Без категории\"\n    }\n\n    get_shop(shop_id) {\n        const shop = this.props.shops.find(x => x.id === shop_id);\n        return shop !== undefined ? shop.name : \"Без категории\"\n    }\n\n    open_response(resp_id) {\n        this.$f7.dialog.preloader('Загружаем предложение...');\n        getResponse(this.props, resp_id).then(() => {\n            this.$f7.views.main.router.navigate('/requests/response/' + resp_id + '/');\n            this.$f7.dialog.close();\n        });\n    }\n\n    render() {\n        const {request} = this.props;\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title=\"Предложения\"\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <List\n                    mediaList\n                    className={\"no-margin list-title\"}\n                >\n                    <ListItem\n                        swipeout\n                        after={request.created_at.toLocaleString()}\n                        subtitle={\"Предложений: \" + (request.answers.length || 0) + \"\"}\n                        text={request.text}\n                    >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"access_time\" color=\"blue\"/>\n                                    {this.get_category(request.category_id)}\n                                </span>\n                    </ListItem>\n                </List>\n\n                <List\n                    mediaList\n                    noHairlinesMd\n                    className={\"list-with-header\"}\n                >\n                    {/*\ncreated_at: \"2019-04-09 00:00:00\"\ndescription: \"We have something \"\nid: 1\nis_new: true\nprice: 200\nrequest_id: 1\nshop_id: 7\nstatus_id: 1\nupdated_at: \"2019-04-09 00:00:00\"\nupdated_by: 1\nuser_id: 1\n*/}\n                    {\n                        request.answers.length === 0\n                            ?\n                            <Block>На ваш запрос пока нет ответов...</Block>\n                            :\n                            request.answers.map(item => {\n                                return <ListItem\n                                    key={item.id}\n                                    onClick={() => this.open_response(item.id)}\n                                    after={item.created_at.toLocaleString()}\n                                    subtitle={this.get_shop(item.shop_id)}\n                                    text={item.description}\n                                >\n                                    <b slot=\"title\">\n                                        {\n                                            item.is_new ? <Icon className={\"status-icon\"} material=\"fiber_new\"\n                                                  color=\"green\"/> : null\n                                        }\n                                        {item.price}</b>\n                                </ListItem>\n                            })\n                    }\n                </List>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        request: store.request[0],\n        categories: store.stores.categories,\n        shops: store.stores.shops,\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleResponse: request => dispatch(handleResponse(request)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponsesPage)","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    Page,\n    Messages,\n    // MessagesTitle,\n    Messagebar,\n    Link,\n    Message,\n    /* MessagebarAttachment,\n     MessagebarAttachments,\n     MessagebarSheet,\n     MessagebarSheetImage,*/\n    Icon,\n    List,\n    ListItem,\n    Navbar,\n    // NavRight\n} from 'framework7-react';\nimport {Detector} from \"react-detect-offline\";\nimport {getData} from \"../../axios/getData\";\nimport {setData} from \"../../axios/setData\";\nimport {get} from \"idb-keyval\";\nimport {handleResponse} from \"../../actions/DataActions\";\n\nconst _ = require('lodash/core');\n\nconst getMessages = async (props, answer_id, loading, sendingData) => {\n    if (!sendingData) {\n        let detect = new Detector();\n        loading.show('yellow');\n        if (await detect.state.online) {\n            let get_data = new getData();\n            await get_data.data('answer/' + answer_id).then(value => value !== undefined && props.handleResponse(value));\n        } else {\n            await get('answer/' + answer_id).then(value => value !== undefined && props.handleResponse(value));\n        }\n        setTimeout(() => {\n            loading.hide();\n        }, 500);\n    }\n};\n\nconst sendMessage = async (props, payload, notificationOffline, handleSendingData) => {\n    handleSendingData(true);\n    let detect = new Detector();\n    if (await detect.state.online) {\n        let set_data = new setData();\n        await payload.forEach( async data => {\n            await set_data.data('message-add', data);\n        });\n    }else{\n        notificationOffline.open();\n    }\n    handleSendingData(false);\n};\n\nclass respMessages extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            messageValue: '',\n            attachments: [],\n            sheetVisible: false,\n            typingMessage: null,\n            messages: this.props.response.messages,\n            messagesData: [\n                {\n                    type: 'received',\n                    message: 'Здравствуйте! 👋<br/>Здесь вы можете уточнить детали заказа.',\n                    date: new Date(),\n                },\n            ],\n            images: [],\n            responseInProgress: false,\n            sendingData: false,\n        }\n    }\n\n    answer_id = this.props.response.id;\n    user = this.props.user;\n\n    notificationOffline = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Ошибка подключения',\n        text: 'Попробуйте повторить запрос позже.',\n        closeButton: true,\n    });\n\n    loading = this.$f7.progressbar;\n\n    render() {\n        const {response} = this.props;\n        return (\n            <Page className={\"messages-block\"}>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title=\"Предложение\"\n                    backLink=\"Back\"\n                />\n                <List\n                    mediaList\n                    className={\"no-margin list-title\"}\n                >\n                    <ListItem\n                        key={response.id}\n                        onClick={() => this.open_response(response.id)}\n                        after={response.created_at.toLocaleString()}\n                        subtitle={this.get_shop(response.shop_id)}\n                        text={response.description}\n                    >\n                        <b slot=\"title\">\n                            {\n                                response.is_new ? <Icon className={\"status-icon\"} material=\"fiber_new\"\n                                                        color=\"green\"/> : null\n                            }\n                            {response.price}</b>\n                    </ListItem>\n                </List>\n                <Messagebar\n                    placeholder={this.placeholder}\n                    ref={(el) => {this.messagebarComponent = el}}\n                    attachmentsVisible={this.attachmentsVisible}\n                    sheetVisible={this.state.sheetVisible}\n                    change={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                    value={this.state.messageValue}\n                    //onChange={this.handleMessage.bind(this)}\n                    onInput={this.handleMessage.bind(this)}\n                >\n                    {/* <Link\n                        iconIos=\"f7:camera_fill\"\n                        iconMd=\"material:camera_alt\"\n                        slot=\"inner-start\"\n                        onClick={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                    />*/}\n                    <Link\n                        iconIos=\"f7:arrow_up_fill\"\n                        iconMd=\"material:send\"\n                        slot=\"inner-end\"\n                        onClick={this.sendMessage.bind(this)}\n                    />\n                    {/* <MessagebarAttachments>\n                        {this.state.attachments.map((image, index) => (\n                            <MessagebarAttachment\n                                key={index}\n                                image={image}\n                                onAttachmentDelete={() => this.deleteAttachment(image)}\n                            />\n                        ))}\n                    </MessagebarAttachments>\n                    <MessagebarSheet>\n                        {this.state.images.map((image, index) => (\n                            <MessagebarSheetImage\n                                key={index}\n                                image={image}\n                                checked={this.state.attachments.indexOf(image) >= 0}\n                                onChange={this.handleAttachment.bind(this)}\n                            />\n                        ))}\n                    </MessagebarSheet>*/}\n                </Messagebar>\n\n                <Messages\n                    className={\"list-with-header\"}\n                    ref={(el) => {this.messagesComponent = el}}\n                >\n                    {/*<MessagesTitle><b>Sunday, Feb 9,</b> 12:58</MessagesTitle>*/}\n\n                    {this.state.messagesData.map((message, index) => (\n                        <Message\n                            key={index}\n                            type={message.type}\n                            image={message.image}\n                            name={message.name}\n                            avatar={message.avatar}\n                            footer={message.date.toLocaleString()}\n                            first={this.isFirstMessage(message, index)}\n                            last={this.isLastMessage(message, index)}\n                            tail={this.isTailMessage(message, index)}\n                        >\n                            {message.message && (\n                                <span slot=\"text\" dangerouslySetInnerHTML={{__html: message.message}} />\n                            )}\n                        </Message>\n                    ))}\n                    {this.state.typingMessage && (\n                        <Message\n                            type=\"received\"\n                            typing={true}\n                            first={true}\n                            last={true}\n                            tail={true}\n                            header={`${this.state.typingMessage.name} is typing`}\n                            avatar={this.state.typingMessage.avatar}\n                        />\n                    )}\n                </Messages>\n            </Page>\n        )\n    }\n\n    get attachmentsVisible() {\n        const self = this;\n        return self.state.attachments.length > 0;\n    }\n    get placeholder() {\n        const self = this;\n        return self.state.attachments.length > 0 ? 'Добавьте сообщение или отправьте' : 'Сообщение';\n    }\n    get_shop(shop_id) {\n        const shop = this.props.shops.find(x => x.id === shop_id);\n        return shop !== undefined ? shop.name : \"Без категории\"\n    }\n    updateMessages() {\n        const self = this;\n        const messages = self.props.response.messages;\n        console.log('update', messages);\n        if (self.props.response.messages.length) {\n            const messagesData = messages.map((item) => {\n                return {\n                    name: item.user.name,\n                    type: item.user_id === self.props.user.id ? 'sent' : 'received',\n                    message: item.message,\n                    date: item.updated_at,\n                }\n            });\n            self.setState({messages: messages, messagesData: messagesData});\n        }\n    }\n\n    // Обновляем сообщения, только если что-то изменилось\n    componentDidUpdate() {\n        const oldData = this.state.messages;\n        const newData = this.props.response.messages;\n        if (!(_.isEqual(newData, oldData))) {\n            this.updateMessages();\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if (!(_.isEqual(nextProps.response.messages, prevState.messages))) {\n            return {response : nextProps.response};\n        }\n        else return null;\n    }\n\n    componentDidMount() {\n        const self = this;\n        this.updateMessages();\n        self.$f7ready(() => {\n            self.messagebar = self.messagebarComponent.f7Messagebar;\n            self.messages = self.messagesComponent.f7Messages;\n        });\n\n        this.intervalId = setInterval(()  =>\n            getMessages(self.props, self.answer_id, self.loading, self.state.sendingData),\n            5000);\n    }\n    componentWillUnmount(){\n        clearInterval(this.intervalId);\n    }\n    isFirstMessage(message, index) {\n        const self = this;\n        const previousMessage = self.state.messagesData[index - 1];\n        if (message.isTitle) return false;\n        return !previousMessage || previousMessage.type !== message.type || previousMessage.name !== message.name;\n\n    }\n    isLastMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        return !nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name;\n\n    }\n    isTailMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        return !nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name;\n\n    }\n    deleteAttachment(image) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = attachments.indexOf(image);\n        attachments.splice(index, 1);\n        self.setState({ attachments });\n    }\n    handleAttachment(e) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = self.$$(e.target).parents('label.checkbox').index();\n        const image = self.state.images[index];\n        if (e.target.checked) {\n            // Add to attachments\n            attachments.unshift(image);\n        } else {\n            // Remove from attachments\n            attachments.splice(attachments.indexOf(image), 1);\n        }\n        self.setState({ attachments });\n    }\n\n    handleMessage() {\n        const self = this;\n        let text = self.messagebar.$textareaEl.val();\n        self.setState({messageValue: text});\n    }\n    sendMessage() {\n        const self = this;\n        const text = self.messagebar.getValue().replace(/\\n/g, '<br>').trim();\n        const messagesToSend = [];\n        self.state.attachments.forEach((attachment) => {\n            messagesToSend.push({\n                answer_id: self.answer_id,\n                user_id: self.user.id,\n                name: self.user.name,\n                message: \"\",\n                attachment: attachment,\n                date: new Date(),\n            });\n        });\n        if (text.trim().length) {\n            messagesToSend.push({\n                answer_id: self.answer_id,\n                user_id: self.user.id,\n                name: self.user.name,\n                message: text,\n                attachment: \"\",\n                date: new Date(),\n            });\n        }\n        if (messagesToSend.length === 0) {\n            return;\n        }\n\n        self.setState({\n            messageValue: '',\n            // Reset attachments\n            attachments: [],\n            // Hide sheet\n            sheetVisible: false,\n            // Send message\n            messagesData: [...self.state.messagesData, ...messagesToSend],\n        });\n\n        sendMessage(this.props, messagesToSend, this.notificationOffline, this.handleSendingData).then(() => {\n            self.messagebar.clear();\n        });\n\n        // Focus area\n        if (text.length) self.messagebar.focus();\n        /*\n                // Mock response\n                if (self.state.responseInProgress) return;\n                self.setState({\n                    responseInProgress: true,\n                });\n                */\n    }\n\n    handleSendingData = (value) => {\n        this.setState({sendingData: value});\n    }\n}\n\n\n\nconst mapStateToProps = store => {\n    return {\n        response: store.response[0],\n        shops: store.stores.shops,\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleResponse: request => dispatch(handleResponse(request)),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(respMessages)","import React from 'react';\nimport {\n    Page,\n    Navbar,\n    Messages,\n    MessagesTitle,\n    Messagebar,\n    Link,\n    Message,\n    MessagebarAttachment,\n    MessagebarAttachments,\n    MessagebarSheet,\n    MessagebarSheetImage,\n} from 'framework7-react';\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            attachments: [],\n            sheetVisible: false,\n            typingMessage: null,\n            messagesData: [\n                {\n                    type: 'sent',\n                    text: 'Hi, Kate',\n                },\n                {\n                    type: 'sent',\n                    text: 'How are you?',\n                },\n                {\n                    name: 'Kate',\n                    type: 'received',\n                    text: 'Hi, I am good!',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',\n                },\n                {\n                    name: 'Blue Ninja',\n                    type: 'received',\n                    text: 'Hi there, I am also fine, thanks! And how are you?',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',\n                },\n                {\n                    type: 'sent',\n                    text: 'Hey, Blue Ninja! Glad to see you ;)',\n                },\n                {\n                    type: 'sent',\n                    text: 'Hey, look, cutest kitten ever!',\n                },\n                {\n                    type: 'sent',\n                    image: 'https://cdn.framework7.io/placeholder/cats-200x260-4.jpg',\n\n                },\n                {\n                    name: 'Kate',\n                    type: 'received',\n                    text: 'Nice!',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',\n                },\n                {\n                    name: 'Kate',\n                    type: 'received',\n                    text: 'Like it very much!',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',\n                },\n                {\n                    name: 'Blue Ninja',\n                    type: 'received',\n                    text: 'Awesome!',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',\n                },\n            ],\n            images: [\n                'https://cdn.framework7.io/placeholder/cats-300x300-1.jpg',\n                'https://cdn.framework7.io/placeholder/cats-200x300-2.jpg',\n                'https://cdn.framework7.io/placeholder/cats-400x300-3.jpg',\n                'https://cdn.framework7.io/placeholder/cats-300x150-4.jpg',\n                'https://cdn.framework7.io/placeholder/cats-150x300-5.jpg',\n                'https://cdn.framework7.io/placeholder/cats-300x300-6.jpg',\n                'https://cdn.framework7.io/placeholder/cats-300x300-7.jpg',\n                'https://cdn.framework7.io/placeholder/cats-200x300-8.jpg',\n                'https://cdn.framework7.io/placeholder/cats-400x300-9.jpg',\n                'https://cdn.framework7.io/placeholder/cats-300x150-10.jpg',\n            ],\n            people: [\n                {\n                    name: 'Kate Johnson',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',\n                },\n                {\n                    name: 'Blue Ninja',\n                    avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',\n                },\n            ],\n            answers: [\n                'Yes!',\n                'No',\n                'Hm...',\n                'I am not sure',\n                'And what about you?',\n                'May be ;)',\n                'Lorem ipsum dolor sit amet, consectetur',\n                'What?',\n                'Are you sure?',\n                'Of course',\n                'Need to think about it',\n                'Amazing!!!',\n            ],\n            responseInProgress: false,\n        }\n    }\n    render() {\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    backLink=\"Back\"\n                    title=\"Переписка по заявке\"/>\n\n                <Messagebar\n                    placeholder={this.placeholder}\n                    ref={(el) => {this.messagebarComponent = el}}\n                    attachmentsVisible={this.attachmentsVisible}\n                    sheetVisible={this.state.sheetVisible}\n                    change={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                >\n                    <Link\n                        iconIos=\"f7:camera_fill\"\n                        iconMd=\"material:camera_alt\"\n                        slot=\"inner-start\"\n                        onClick={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                    />\n                    <Link\n                        iconIos=\"f7:arrow_up_fill\"\n                        iconMd=\"material:send\"\n                        slot=\"inner-end\"\n                        onClick={this.sendMessage.bind(this)}\n                    />\n                    <MessagebarAttachments>\n                        {this.state.attachments.map((image, index) => (\n                            <MessagebarAttachment\n                                key={index}\n                                image={image}\n                                onAttachmentDelete={() => this.deleteAttachment(image)}\n                            />\n                        ))}\n                    </MessagebarAttachments>\n                    <MessagebarSheet>\n                        {this.state.images.map((image, index) => (\n                            <MessagebarSheetImage\n                                key={index}\n                                image={image}\n                                checked={this.state.attachments.indexOf(image) >= 0}\n                                onChange={this.handleAttachment.bind(this)}\n                            />\n                        ))}\n                    </MessagebarSheet>\n                </Messagebar>\n\n                <Messages ref={(el) => {this.messagesComponent = el}}>\n                    <MessagesTitle><b>Sunday, Feb 9,</b> 12:58</MessagesTitle>\n\n                    {this.state.messagesData.map((message, index) => (\n                        <Message\n                            key={index}\n                            type={message.type}\n                            image={message.image}\n                            name={message.name}\n                            avatar={message.avatar}\n                            first={this.isFirstMessage(message, index)}\n                            last={this.isLastMessage(message, index)}\n                            tail={this.isTailMessage(message, index)}\n                        >\n                            {message.text && (\n                                <span slot=\"text\" dangerouslySetInnerHTML={{__html: message.text}} />\n                            )}\n                        </Message>\n                    ))}\n                    {this.state.typingMessage && (\n                        <Message\n                            type=\"received\"\n                            typing={true}\n                            first={true}\n                            last={true}\n                            tail={true}\n                            header={`${this.state.typingMessage.name} is typing`}\n                            avatar={this.state.typingMessage.avatar}\n                        />\n                    )}\n                </Messages>\n            </Page>\n        )\n    }\n\n    get attachmentsVisible() {\n        const self = this;\n        return self.state.attachments.length > 0;\n    }\n    get placeholder() {\n        const self = this;\n        return self.state.attachments.length > 0 ? 'Add comment or Send' : 'Message';\n    }\n    componentDidMount() {\n        const self = this;\n        self.$f7ready(() => {\n            self.messagebar = self.messagebarComponent.f7Messagebar;\n            self.messages = self.messagesComponent.f7Messages;\n        });\n    }\n    isFirstMessage(message, index) {\n        const self = this;\n        const previousMessage = self.state.messagesData[index - 1];\n        if (message.isTitle) return false;\n        if (!previousMessage || previousMessage.type !== message.type || previousMessage.name !== message.name) return true;\n        return false;\n    }\n    isLastMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        if (!nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name) return true;\n        return false;\n    }\n    isTailMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        if (!nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name) return true;\n        return false;\n    }\n    deleteAttachment(image) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = attachments.indexOf(image);\n        attachments.splice(index, 1);\n        self.setState({ attachments });\n    }\n    handleAttachment(e) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = self.$$(e.target).parents('label.checkbox').index();\n        const image = self.state.images[index];\n        if (e.target.checked) {\n            // Add to attachments\n            attachments.unshift(image);\n        } else {\n            // Remove from attachments\n            attachments.splice(attachments.indexOf(image), 1);\n        }\n        self.setState({ attachments });\n    }\n    sendMessage() {\n        const self = this;\n        const text = self.messagebar.getValue().replace(/\\n/g, '<br>').trim();\n        const messagesToSend = [];\n        self.state.attachments.forEach((attachment) => {\n            messagesToSend.push({\n                image: attachment,\n            });\n        });\n        if (text.trim().length) {\n            messagesToSend.push({\n                text,\n            });\n        }\n        if (messagesToSend.length === 0) {\n            return;\n        }\n\n        self.setState({\n            // Reset attachments\n            attachments: [],\n            // Hide sheet\n            sheetVisible: false,\n            // Send message\n            messagesData: [...self.state.messagesData, ...messagesToSend],\n        });\n        self.messagebar.clear();\n\n        // Focus area\n        if (text.length) self.messagebar.focus();\n\n        // Mock response\n        if (self.state.responseInProgress) return;\n        self.setState({\n            responseInProgress: true,\n        });\n        setTimeout(() => {\n            const answer = self.state.answers[Math.floor(Math.random() * self.state.answers.length)];\n            const person = self.state.people[Math.floor(Math.random() * self.state.people.length)];\n            self.setState({\n                typingMessage: {\n                    name: person.name,\n                    avatar: person.avatar,\n                },\n            });\n            setTimeout(() => {\n                self.setState({\n                    messagesData: [...self.state.messagesData, {\n                        text: answer,\n                        type: 'received',\n                        name: person.name,\n                        avatar: person.avatar,\n                    }],\n                    typingMessage: null,\n                    responseInProgress: false,\n                });\n            }, 4000);\n        }, 1000);\n    }\n};","import React from 'react';\nimport { connect } from \"react-redux\";\n\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n    Navbar,\n    NavRight,\n    Link,\n    Page\n} from 'framework7-react';\nimport {setData} from \"../../axios/setData\";\nimport {handleDeleteCar} from \"../../actions/DataActions\";\n\n\n\nclass carsPage extends React.Component {\n\n    deleteCar = (car_id) => {\n        const set_data = new setData();\n        if (car_id > 0) {\n            set_data.dataDelete('car-detele/'+car_id).then(() => {\n               this.props.handleDeleteCar(car_id);\n            });\n        }\n    };\n\n    deleteHandle(car_id) {\n        const app = this.$f7;\n        app.dialog.confirm('Эта операция необратима', 'Удалить автомобиль?', () => this.deleteCar(car_id), () => {});\n    }\n    newCar() {\n        const carId = 0;\n        this.$f7.views.main.router.navigate('/open_car/' + carId + '/');\n    }\n    editHandle(carId) {\n        this.$f7.views.main.router.navigate('/open_car/' + carId + '/');\n    }\n\n    render() {\n        const {cars, brands, models} = this.props;\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title=\"Мои автомобили\"\n                    backLink=\"Back\"\n                >\n                    <NavRight>\n                        <Link iconMd=\"material:add\" onClick={() => this.newCar()}/>\n                    </NavRight>\n                </Navbar>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {\n                        cars.map(car => (\n                            <ListItem\n                                key={'car_' + car.id}\n                                swipeout\n                                after={car.year}\n                                subtitle={\"VIN: \" + car.vin}\n                            >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"directions_car\" color=\"blue\"/>\n                                    {\n                                        ' ' + brands.find(brand => brand.id === car.car_brand_id).car_brand\n                                        + ' ' + models.find(model => model.id === car.car_model_id).car_model\n                                    }\n                                </span>\n                                <SwipeoutActions left>\n                                    <SwipeoutButton color=\"blue\" onClick={() => this.editHandle(car.id)}>\n                                        <Icon material=\"edit\"/> Изменить\n                                    </SwipeoutButton>\n                                </SwipeoutActions>\n                                <SwipeoutActions right>\n                                    <SwipeoutButton color=\"#cb2128\" onClick={() => this.deleteHandle(car.id)}>\n                                        <Icon material=\"delete\"/> Удалить\n                                    </SwipeoutButton>\n                            </SwipeoutActions>\n                            </ListItem>\n                        ))\n                    }\n\n                </List>\n            </Page>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = store => {\n    return {\n        cars: store.cars,\n        models: store.carmodels,\n        brands: store.carbrands,\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleDeleteCar: data => dispatch(handleDeleteCar(data)),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(carsPage)","import React from 'react';\nimport { connect } from \"react-redux\";\nimport {\n    Page,\n    Navbar,\n    List,\n    Subnavbar,\n    Searchbar,\n    Block,\n    ListItem,\n    Link,\n    NavRight\n} from 'framework7-react';\n\nclass ShopsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            vlData: {\n                items: [],\n            },\n            selectedShops: [],\n        };\n    }\n\n    searchAll = (query, items) => {\n        const found = [];\n        for (let i = 0; i < items.length; i += 1) {\n            if (items[i].name.toLowerCase().indexOf(query.toLowerCase()) >= 0 || query.trim() === '') found.push(i);\n        }\n        return found; // return array with mathced indexes\n    };\n\n    renderExternal(vl, vlData) {\n        this.setState({ vlData });\n    }\n\n    handleToggle = (item) => {\n        this.setState({selectedShops: [item.id]});\n        /*\n        let selectedShops = this.state.selectedShops;\n        item.checked = (item.hasOwnProperty('checked')) ? !item.checked : true;\n        if (item.checked) {\n            selectedShops.push(item.id);\n        } else {\n            selectedShops = selectedShops.filter(x => x !== item.id);\n        }\n        this.setState({selectedShops: selectedShops});\n        */\n    };\n\n    setShops = () => {\n        this.props.handleShops(this.state.selectedShops);\n        this.$f7router.back();\n    };\n\n    componentDidMount() {\n        const {shops, selected_shops} = this.props;\n        this.setState({selectedShops: [...selected_shops]});\n        shops.forEach((item) => {\n            item.checked = [...selected_shops].indexOf(item.id) !== -1;\n        })\n    }\n\n    render() {\n        const {shops} = this.props;\n        const {vlData, selectedShops} = this.state;\n        return (\n            <Page\n                className=\"stores-list\">\n                <Navbar title=\"Список магазинов\"\n                        backLink=\"Back\"\n                        bgColor=\"main\"\n                        textColor=\"white\"\n                        color=\"white\"\n                >\n                    <NavRight>\n                        <Link iconMd=\"material:done\" onClick={() => this.setShops()}/>\n                    </NavRight>\n                    <Subnavbar inner={false} className={\"search-bar\"}>\n                        <Searchbar\n                            searchContainer=\".virtual-list\"\n                            searchItem=\"li\"\n                            searchIn=\".item-title\"\n                            placeholder=\"Поиск\"\n                        />\n                    </Subnavbar>\n                </Navbar>\n                <Block>\n                    <p>Здесь вы можете выбрать в какой магазин хотите отправить запрос</p>\n                </Block>\n                <List className=\"searchbar-not-found\">\n                    <ListItem title=\"Магазины не найдены...\"/>\n                </List>\n                <List\n                    className=\"searchbar-found\"\n                    medialList\n                    virtualList\n                    virtualListParams={\n                        {\n                            items: shops,\n                            searchAll: this.searchAll,\n                            renderExternal: this.renderExternal.bind(this),\n                            height: this.$theme.ios ? 63 : 73\n                        }\n                    }\n                >\n                    <ul>\n                        {vlData.items.map((item, index) => (\n                            <ListItem\n                                key={index}\n                                mediaItem\n                                radio\n                                checked={selectedShops.indexOf(item.id) !== -1 /*item.checked*/}\n                                onClick={() => this.handleToggle(item)}\n                                title={item.name}\n                                subtitle={item.address}\n                                after={item.phone}\n                                style={{top: `${vlData.topPosition}px`}}\n                            />\n                        ))}\n                    </ul>\n                </List>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        shops: store.stores.shops,\n    }\n};\n\nexport default connect(mapStateToProps)(ShopsList)","import { set, get } from 'idb-keyval';\nimport { axios } from './init'\n\n\nexport class authorisation {\n\n    login = async (...args) => {\n        const url = '/login';\n        const payload = {\n            email: args[0],\n            password: args[1],\n            application: 'marshal'\n        };\n        let res = 'test';\n        await get('AUTH_TOKEN').then( async value => {\n            if (value === undefined) {\n                try {\n                    let response = await axios.post(url, payload);\n                    let AUTH_TOKEN = response.data.access_token;\n                    axios.defaults.headers.common['Authorization'] = 'Bearer ' + AUTH_TOKEN;\n                    set('AUTH_TOKEN', AUTH_TOKEN).then();\n                    res = await this.user_details();\n\n                } catch (error) {\n                    res = error.response;\n                }\n            }else{\n                res = await this.user_details();\n                console.log(res);\n            }\n        });\n        return res;\n    };\n\n    user_details = async () => {\n        const url = '/details';\n        const payload = {};\n        try {\n            return await axios.get(url, payload);\n        } catch (error) {\n            return error.response;\n        }\n    }\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    Page,\n    List,\n    ListInput,\n    Button,\n    BlockFooter,\n    Link,\n    LoginScreenTitle\n} from 'framework7-react';\n\nimport { authorisation } from '../../axios/login'\nimport { handleLogin } from '../../actions/UserActions'\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputLogin: '',\n            inputPassword: '',\n        };\n    }\n\n    authError = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Ошибка авторизации',\n        text: 'Проверьте имя пользователя и пароль.',\n        closeButton: true,\n    });\n\n    authSuccess = (name) => this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Добро пожаловать ' + name + '!',\n        closeTimeout: 3000,\n    });\n\n    handleOnChange = prop => event => {\n      this.setState({[prop]: event.target.value});\n    };\n\n    async authentication() {\n        const self = this;\n        self.$f7.dialog.preloader();\n\n        const auth = new authorisation();\n        const { inputLogin, inputPassword} = this.state;\n        const response = await auth.login(inputLogin, inputPassword);\n        if (response.status === 401) {\n            this.authError.open();\n        } else if (response.status === 200) {\n            this.authSuccess(response.data.success.name).open();\n            this.$f7.views.main.router.navigate('/');\n        }\n        self.$f7.dialog.close();\n        this.props.handleLogin(response.data.success);\n    }\n    render() {\n\n        const { inputLogin, inputPassword} = this.state;\n\n        return (\n            <Page loginScreen>\n                <LoginScreenTitle>Войти</LoginScreenTitle>\n                <List form>\n                    <ListInput\n                        label=\"Email\"\n                        name=\"username\"\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        value={inputLogin}\n                        onChange={this.handleOnChange('inputLogin')}\n                    />\n                    <ListInput\n                        label=\"Password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        value={inputPassword}\n                        onChange={this.handleOnChange('inputPassword')}\n                    />\n\n                    <BlockFooter>\n                        <Button fill onClick={()=>this.authentication()}>Войти</Button>\n                    </BlockFooter>\n                </List>\n\n                <List>\n                    <BlockFooter>\n                        <p><Link>Зарегистрироваться</Link></p>\n                        <p>Для восстановления пароля нажмите <Link>ссылку</Link></p>\n                    </BlockFooter>\n                </List>\n            </Page>\n        )\n    }\n}\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import HomePage from './components/pages/HomePage';\nimport AboutPage from './components/pages/AboutPage';\nimport FormPage from './components/pages/FormPage';\nimport DynamicRoutePage from './components/pages/DynamicRoutePage';\nimport NotFoundPage from './components/pages/NotFoundPage';\nimport PanelLeftPage from './components/pages/PanelLeftPage';\nimport PanelRightPage from './components/pages/PanelRightPage';\nimport NewCarPage from \"./components/pages/NewCarPage\";\nimport NewRequestPage from \"./components/pages/NewRequestPage\";\nimport ResponsesPage from \"./components/pages/ResponsesPage\";\nimport ResponsePage from \"./components/pages/ResponsePage\";\nimport ChatPage from \"./components/pages/ChatPage\";\nimport CarsPage from \"./components/pages/CarsPage\";\nimport StoresList from \"./components/pages/StoresList\";\nimport LoginPage from \"./components/pages/LoginPage\";\n\nexport default [\n    {\n        path: '/',\n        component: HomePage,\n    },\n    {\n        path: '/panel-left/',\n        component: PanelLeftPage,\n    },\n    {\n        path: '/panel-right/',\n        component: PanelRightPage,\n    },\n    {\n        path: '/about/',\n        component: AboutPage,\n    },\n    {\n        path: '/form/',\n        component: FormPage,\n    },\n    {\n        path: '/login/',\n        component: LoginPage,\n    },\n    {\n        path: '/messages/',\n        component: ChatPage,\n    },\n    {\n        path: '/cars/',\n        component: CarsPage,\n    },\n    {\n        path: '/dynamic-route/blog/:blogId/post/:postId/',\n        component: DynamicRoutePage,\n    },\n    {\n        path: '/answer_to_request/:reqId/',\n        component: NewRequestPage,\n    },\n    {\n        path: '/open_car/:carId/',\n        component: NewCarPage,\n    },\n    {\n        path: '/requests/:reqId/',\n        component: ResponsesPage,\n    },\n    {\n        path: '/requests/response/:reqId/',\n        component: ResponsePage,\n    },\n    {\n        path: '/stores_list/',\n        component: StoresList,\n    },\n    {\n        path: '(.*)',\n        component: NotFoundPage,\n    },\n];\n","import React from 'react';\nimport { Page, Navbar, Block, BlockTitle, List, ListItem } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Left Panel\" />\n    <Block strong>\n      <p>Left panel content goes here</p>\n    </Block>\n    <BlockTitle>Load page in panel</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\"></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\"></ListItem>\n    </List>\n    <BlockTitle>Load page in main view</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\" view=\"#main-view\" panelClose></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\" view=\"#main-view\" panelClose></ListItem>\n    </List>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block, BlockTitle, List, ListItem } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Right Panel\" />\n    <Block strong>\n      <p>Right panel content goes here</p>\n    </Block>\n    <BlockTitle>Load page in panel</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\"></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\"></ListItem>\n    </List>\n    <BlockTitle>Load page in main view</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\" view=\"#main-view\" panelClose></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\" view=\"#main-view\" panelClose></ListItem>\n    </List>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Link, Block, BlockTitle } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"About\" backLink=\"Back\"></Navbar>\n    <BlockTitle>About My App</BlockTitle>\n    <Block strong>\n      <p>Here is About page!</p>\n      <p>You can go <Link back>back</Link>.</p>\n      <p>Mauris posuere sit amet metus id venenatis. Ut ante dolor, tempor nec commodo rutrum, varius at sem. Nullam ac nisi non neque ornare pretium. Nulla mauris mauris, consequat et elementum sit amet, egestas sed orci. In hac habitasse platea dictumst.</p>\n      <p>Fusce eros lectus, accumsan eget mi vel, iaculis tincidunt felis. Nulla tincidunt pharetra sagittis. Fusce in felis eros. Nulla sit amet aliquam lorem, et gravida ipsum. Mauris consectetur nisl non sollicitudin tristique. Praesent vitae metus ac quam rhoncus mattis vel et nisi. Aenean aliquet, felis quis dignissim iaculis, lectus quam tincidunt ligula, et venenatis turpis risus sed lorem. Morbi eu metus elit. Ut vel diam dolor.</p>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block\n} from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Form\" backLink=\"Back\" />\n    <BlockTitle>Form Example</BlockTitle>\n    <List form>\n      <ListInput\n        label=\"Name\"\n        type=\"text\"\n        placeholder=\"Name\"\n      />\n      <ListInput\n        label=\"E-mail\"\n        type=\"email\"\n        placeholder=\"E-mail\"\n      />\n      <ListInput\n        label=\"URL\"\n        type=\"url\"\n        placeholder=\"URL\"\n      />\n      <ListInput\n        label=\"Password\"\n        type=\"password\"\n        placeholder=\"Password\"\n      />\n      <ListInput\n        label=\"Phone\"\n        type=\"tel\"\n        placeholder=\"Phone\"\n      />\n      <ListInput\n        label=\"Gender\"\n        type=\"select\"\n        defaultValue=\"Male\"\n      >\n        <option>Male</option>\n        <option>Female</option>\n      </ListInput>\n      <ListInput\n        label=\"Birth date\"\n        type=\"date\"\n        placeholder=\"Birth date\" value=\"2014-04-30\"\n      />\n      <ListItem title=\"Toggle\">\n        <Toggle slot=\"after\" />\n      </ListItem>\n      <ListInput\n        label=\"Slider\"\n        input={false}\n      >\n        <Range label={true} slot=\"input\" min={0} max={100} value={50} step={1} />\n      </ListInput>\n      <ListInput\n        label=\"Textarea\"\n        type=\"textarea\"\n        placeholder=\"Bio\"\n      />\n      <ListInput\n        label=\"Resizable\"\n        type=\"textarea\"\n        placeholder=\"Bio\"\n        resizable\n      />\n    </List>\n\n    <BlockTitle>Checkbox group</BlockTitle>\n    <List form>\n        {Array.from(Array(3).keys()).map(n => (\n            <ListItem key={n} checkbox name=\"my-checkbox\" value={n + 1} title={`Checkbox ${n + 1}`} />\n        ))}\n    </List>\n\n    <BlockTitle>Radio buttons group</BlockTitle>\n    <List form>\n        {Array.from(Array(3).keys()).map(n => (\n            <ListItem key={n} radio name=\"my-radio\" defaultChecked={n === 0} value={n + 1} title={`Radio ${n + 1}`} />\n        ))}\n    </List>\n\n    <BlockTitle>Buttons</BlockTitle>\n    <Block strong>\n      <Row tag=\"p\">\n        <Button className=\"col\">Button</Button>\n        <Button className=\"col\" fill>Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" raised>Raised</Button>\n        <Button className=\"col\" raised fill>Raised Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" round>Round</Button>\n        <Button className=\"col\" round fill>Round Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" outline>Outline</Button>\n        <Button className=\"col\" round outline>Outline Round</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" small outline>Small</Button>\n        <Button className=\"col\" small round outline>Small Round</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" small fill>Small</Button>\n        <Button className=\"col\" small round fill>Small Round</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" large raised>Large</Button>\n        <Button className=\"col\" large fill raised>Large Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" large fill raised color=\"red\">Large Red</Button>\n        <Button className=\"col\" large fill raised color=\"green\">Large Green</Button>\n      </Row>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar\n        title=\"Ошибка\"\n        backLink=\"Back\"\n        color=\"white\"\n        textColor=\"white\"\n        bgColor=\"main\"\n    />\n    <Block strong>\n      <p>Как вы сюда попали?..</p>\n      <p>Страница не найдена.</p>\n    </Block>\n  </Page>\n);\n","// Import React and ReactDOM\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport './css/app.css';\nimport 'framework7/css/framework7.bundle.css';\nimport './css/icons.css';\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(\n  React.createElement(App),\n  document.getElementById('app'),\n);\n\n","import React from 'react';\n\nimport {Provider} from 'react-redux';\nimport {store} from '../store/configureStore';\n\nimport {\n    App,\n    Panel,\n    View,\n    Statusbar,\n    Popup,\n    Page,\n    Navbar,\n    NavRight,\n    Link,\n    Block,\n} from 'framework7-react';\n\n\nimport routes from '../routes';\n\nexport default function (props) {\n\n    const params = {\n        themeDark: false,\n        mainColor: 'red'\n    };\n\n    // Framework7 parameters here\n    const f7params = {\n        id: 'ru.bhapp.marshal', // App bundle ID\n        name: 'marshal', // App name\n        theme: 'md', // Automatic theme detection\n        // App routes\n        routes,\n    };\n\n    return (\n        <Provider store={store}>\n            <App params={f7params} themeDark={params.themeDark} color={params.mainColor}>\n                {/* Statusbar */}\n                <Statusbar/>\n\n                {/* Left Panel */}\n                <Panel left cover themeDark>\n                    <View url=\"/panel-left/\"/>\n                </Panel>\n\n                {/* Right Panel */}\n                <Panel right reveal themeDark>\n                    <View url=\"/panel-right/\"/>\n                </Panel>\n\n                {/* Main View */}\n                <View id=\"main-view\" url=\"/\" main className=\"safe-areas\"/>\n\n                {/* Popup */}\n                <Popup id=\"popup\">\n                    <View>\n                        <Page>\n                            <Navbar title=\"Popup\">\n                                <NavRight>\n                                    <Link popupClose>Close</Link>\n                                </NavRight>\n                            </Navbar>\n                            <Block>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neque, architecto.\n                                Cupiditate laudantium rem nesciunt numquam, ipsam. Voluptates omnis, a inventore atque\n                                ratione aliquam. Omnis iusto nemo quos ullam obcaecati, quod.</Block>\n                        </Page>\n                    </View>\n                </Popup>\n\n            </App>\n        </Provider>\n    );\n};\n"],"sourceRoot":""}