{"version":3,"sources":["actions/UserActions.js","reducers/user.js","actions/DataActions.js","reducers/stores.js","reducers/requests.js","reducers/request.js","reducers/cars.js","reducers/carmodels.js","reducers/carbrands.js","reducers/response.js","reducers/sto.js","reducers/index.js","store/configureStore.js","axios/init.js","axios/getData.js","components/initApp.js","components/pages/RequestsPage.jsx","components/pages/OrdersPage.jsx","components/pages/SettingsPage.jsx","components/pages/HomePage.jsx","components/pages/DynamicRoutePage.jsx","axios/setData.js","components/pages/NewCarPage.jsx","components/pages/NewResponsePage.jsx","components/pages/ResponsesPage.jsx","components/pages/ResponsePage.jsx","components/pages/StoresList.jsx","axios/login.js","components/pages/LoginPage.jsx","components/pages/EditUserPage.jsx","components/pages/RegisterUserPage.jsx","components/pages/EditStorePage.jsx","routes.js","components/pages/AboutPage.jsx","components/pages/NotFoundPage.jsx","index.js","components/App.jsx"],"names":["LOGIN_SUCCESS","handleLogin","callback","dispatch","type","payload","initialState","id","name","email","role_id","shop_id","SHOPS_REQUEST","SHOPS_FAVORITE","SHOPS_ADD_FAVORITE","SHOPS_DELETE_FAVORITE","CATEGORIES_REQUEST","REQUESTS","REQUEST","ADD_REQUEST","UPDATE_REQUEST","DELETE_REQUEST","RESPONSE","CARS","ADD_CAR","UPDATE_CAR","DELETE_CAR","CAR_BRANDS","CAR_MODELS","handleResponse","newState","shopIndex","shops","favorite_shops","categories","reqIndex","carIndex","description","address","phone","comment","updated_at","Date","rootReducer","combineReducers","user","state","arguments","length","undefined","action","set","then","Object","objectSpread","stores","toConsumableArray","push","findIndex","shop","splice","sto","requests","edited_req","req","req_id","request","response","cars","edited_car","car","car_id","carbrands","carmodels","store","createStore","applyMiddleware","thunk","logger","axios","require","defaults","baseURL","headers","post","get","AUTH_TOKEN","common","getData","classCallCheck","this","data","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","url","res","wrap","_context","prev","next","sent","status","abrupt","t0","console","log","stop","_x","apply","initApplication","_this","init","props","value","Detector","online","getDataFromDB","getDataFromLS","_ref2","_callee2","get_data","_context2","handleShops","handleCategories","handleRequests","handleCarBrands","handleCarModels","Promise","all","values","_x2","_ref3","_callee3","_context3","_x3","getRequest","reqId","detect","handleRequest","RequestsPage","possibleConstructorReturn","getPrototypeOf","call","$f7","views","main","router","navigate","_this2","dialog","preloader","close","cat_id","cat","find","x","category","_this3","react_default","createElement","Fragment","framework7_react_esm","style","whiteSpace","mediaList","className","map","item","key","swipeout","onClick","open_request","after","created_at","toLocaleString","text","subtitle","concat","answers_count","slot","get_category","category_id","left","color","answer_to_request","material","React","Component","connect","OrdersPage","SettingsPage","document","location","href","right","logout","edit_user","button","link","HomePage","chgTitle","title","setState","loaded","initApp","hideToolbarOnScroll","pageContent","textColor","bgColor","dist","iconMd","bottom","tabbar","labels","tabLink","tabLinkActive","animated","tabActive","pages_RequestsPage","pages_OrdersPage","pages_SettingsPage","brands","models","RequestPage","backLink","strong","keys","$f7route","params","$f7router","back","setData","dataPut","put","_x4","dataDelete","delete","_x5","NewCarPage","handleBrand","brand_id","filter","car_brand_id","Number","modelSelectComponent","f7SmartSelect","setValue","handleModel","model_id","car_model_id","handleYear","year","handleData","defineProperty","sendCar","req_data","years","set_data","handleUpdateCar","updCarSuccess","open","handleAddCar","result","addCarSuccess","notification","create","icon","closeTimeout","vin","i","initData","carId","brandSelectComponent","yearSelectComponent","_this$props","_this$state","self","smartSelect","ref","el","smartSelectParams","openIn","searchbar","searchbarPlaceholder","closeOnSelect","on","closed","getValue","brand","car_brand","model","car_model","label","floatingLabel","placeholder","onChange","event","target","fill","NewResponsePage","sendAnswer","addRequestSuccess","request_id","status_id","user_id","price","is_new","defaultChecked","outline","getResponse","resp_id","ResponsesPage","position","newResponse","answers","noHairlinesMd","open_response","get_shop","_","getMessages","answer_id","loading","sendingData","show","setTimeout","hide","sendMessage","notificationOffline","handleSendingData","forEach","_x9","_x6","_x7","_x8","respMessages","closeButton","progressbar","messageValue","attachments","sheetVisible","typingMessage","messages","messagesData","message","date","images","responseInProgress","pictureFiles","pictureDataURLs","inner","messagebarComponent","attachmentsVisible","change","onInput","handleMessage","bind","iconIos","image","index","onAttachmentDelete","deleteAttachment","checked","indexOf","handleAttachment","compiled_default","withIcon","onDrop","imgExtension","maxFileSize","buttonText","messagesComponent","scrollMessages","attachment","avatar","footer","first","isFirstMessage","last","isLastMessage","tail","isTailMessage","dangerouslySetInnerHTML","__html","typing","header","oldData","newData","isEqual","updateMessages","$f7ready","messagebar","f7Messagebar","f7Messages","intervalId","setInterval","clearInterval","previousMessage","isTitle","nextMessage","e","$$","parents","unshift","$textareaEl","val","replace","trim","messagesToSend","clear","focus","nextProps","prevState","ShopsList","searchAll","query","items","found","toLowerCase","handleToggle","selectedShops","setShops","vlData","vl","selected_shops","searchContainer","searchItem","searchIn","medialList","virtualList","virtualListParams","renderExternal","height","$theme","ios","mediaItem","radio","top","topPosition","authorisation","login","_args2","password","application","access_token","user_details","LoginPage","authError","authSuccess","handleOnChange","prop","inputLogin","inputPassword","auth","success","_this$state2","loginScreen","form","authentication","EditUserPage","updateUser","new_data","toast","initial","RegisterUserPage","registerUser","c_password","autocomplete","EditStorePage","addStore","store_id","updateStore","storeId","routes","path","component","DynamicRoutePage","ResponsePage","StoresList","Framework7","use","Framework7React","ReactDOM","render","f7params","theme","es","themeDark","cover","reveal","popupClose","getElementById"],"mappings":"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","file":"static/js/main.dec4119e.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport function handleLogin(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: callback,\n        })\n    }\n}","import {\n    LOGIN_SUCCESS,\n} from '../actions/UserActions'\n\nimport { set } from 'idb-keyval';\n\nconst initialState = {\n    id: 0,\n    name: '',\n    email: '',\n    role_id: 0,\n    shop_id: null,\n};\n\nexport function userReducer(state = initialState, action) {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n            set('user', action.payload).then();\n            return { ...action.payload };\n        default:\n            return state\n    }\n}","export const SHOPS_REQUEST = 'SHOPS_REQUEST';\nexport const SHOPS_FAVORITE = 'SHOPS_FAVORITE';\nexport const SHOPS_ADD_FAVORITE = 'SHOPS_ADD_FAVORITE';\nexport const SHOPS_DELETE_FAVORITE = 'SHOPS_DELETE_FAVORITE';\nexport const CATEGORIES_REQUEST = 'CATEGORIES_REQUEST';\nexport const REQUESTS = 'REQUESTS';\nexport const REQUEST = 'REQUEST';\nexport const ADD_REQUEST = 'ADD_REQUEST';\nexport const UPDATE_REQUEST = 'UPDATE_REQUEST';\nexport const DELETE_REQUEST = 'DELETE_REQUEST';\nexport const RESPONSE = 'RESPONSE';\nexport const CARS = 'CARS';\nexport const ADD_CAR = 'ADD_CAR';\nexport const UPDATE_CAR = 'UPDATE_CAR';\nexport const DELETE_CAR = 'DELETE_CAR';\nexport const CAR_BRANDS = 'CAR_BRANDS';\nexport const CAR_MODELS = 'CAR_MODELS';\n\nexport function handleShops(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: SHOPS_REQUEST,\n            payload: callback,\n        })\n    }\n}\nexport function handleFavoriteShops(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: SHOPS_FAVORITE,\n            payload: callback,\n        })\n    }\n}\nexport function handleFavoriteShopAdd(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: SHOPS_ADD_FAVORITE,\n            payload: callback,\n        })\n    }\n}\nexport function handleFavoriteShopDelete(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: SHOPS_DELETE_FAVORITE,\n            payload: callback,\n        })\n    }\n}\nexport function handleCategories(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CATEGORIES_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleRequests(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: REQUESTS,\n            payload: payload,\n        })\n    }\n}\nexport function handleRequest(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleResponse(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: RESPONSE,\n            payload: payload,\n        })\n    }\n}\nexport function handleAddRequests(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: ADD_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleUpdateRequest(payload) {\n    return function(dispatch) {\n        dispatch({\n            type:  UPDATE_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleDeleteRequest(payload) {\n    return function(dispatch) {\n        dispatch({\n            type:  DELETE_REQUEST,\n            payload: payload,\n        })\n    }\n}\nexport function handleAddCar(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: ADD_CAR,\n            payload: payload,\n        })\n    }\n}\nexport function handleUpdateCar(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: UPDATE_CAR,\n            payload: payload,\n        })\n    }\n}\nexport function handleDeleteCar(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: DELETE_CAR,\n            payload: payload,\n        })\n    }\n}\nexport function handleCars(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CARS,\n            payload: payload,\n        })\n    }\n}\nexport function handleCarBrands(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CAR_BRANDS,\n            payload: payload,\n        })\n    }\n}\nexport function handleCarModels(payload) {\n    return function(dispatch) {\n        dispatch({\n            type: CAR_MODELS,\n            payload: payload,\n        })\n    }\n}","import {\n    SHOPS_REQUEST,\n    SHOPS_FAVORITE,\n    SHOPS_ADD_FAVORITE,\n    SHOPS_DELETE_FAVORITE,\n    CATEGORIES_REQUEST,\n} from '../actions/DataActions'\n\nconst initialState = {\n    shops: [],\n    favorite_shops: [],\n    categories: [],\n};\n\nlet newState;\nlet shopIndex;\n\nexport function storesReducer(state = initialState, action) {\n    switch (action.type) {\n        case SHOPS_REQUEST:\n            return {...state, shops: action.payload};\n        case SHOPS_FAVORITE:\n            return {...state, favorite_shops: action.payload};\n        case SHOPS_ADD_FAVORITE:\n            newState = [...state.favorite_shops];\n            newState.push(action.payload);\n            return {...state, favorite_shops: newState};\n        case SHOPS_DELETE_FAVORITE:\n            const shop_id = action.payload;\n            newState = [...state.favorite_shops];\n            shopIndex = newState.findIndex((shop => shop.id === shop_id));\n            newState.splice(shopIndex, 1);\n            return {...state, favorite_shops: newState};\n        case CATEGORIES_REQUEST:\n            return {...state, categories: action.payload};\n\n        default:\n            return state\n    }\n}","import {ADD_REQUEST, DELETE_REQUEST, REQUESTS, UPDATE_REQUEST} from \"../actions/DataActions\";\n\nconst initialState = [];\nlet newState = [];\nlet reqIndex;\n\nexport function requestsReducer(state = initialState, action) {\n    switch (action.type) {\n        case REQUESTS:\n            return action.payload;\n        case ADD_REQUEST:\n            newState = [...state];\n            newState.push(action.payload);\n            return newState;\n        case UPDATE_REQUEST:\n            const edited_req = action.payload;\n            newState = [...state];\n            reqIndex = newState.findIndex((req => req.id === edited_req.id));\n            newState[reqIndex] = edited_req;\n            return newState;\n        case DELETE_REQUEST:\n            const req_id = action.payload;\n            newState = [...state];\n            reqIndex = newState.findIndex((req => req.id === req_id));\n            newState.splice(reqIndex, 1);\n            return newState;\n        default:\n            return state\n    }\n}","import {REQUEST} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function requestReducer(state = initialState, action) {\n    switch (action.type) {\n        case REQUEST:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {ADD_CAR, CARS, UPDATE_CAR, DELETE_CAR} from \"../actions/DataActions\";\n\nconst initialState = [];\nlet newState = [];\nlet carIndex = 0;\n\nexport function carsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CARS:\n            return action.payload;\n        case ADD_CAR:\n            newState = [...state];\n            newState.push(action.payload);\n            return newState;\n        case UPDATE_CAR:\n            const edited_car = action.payload;\n            newState = [...state];\n            carIndex = newState.findIndex((car => car.id === edited_car.id));\n            newState[carIndex] = edited_car;\n            return newState;\n        case DELETE_CAR:\n            const car_id = action.payload;\n            newState = [...state];\n            carIndex = newState.findIndex((car => car.id === car_id));\n            newState.splice(carIndex, 1);\n            return newState;\n        default:\n            return state\n    }\n}","import {CAR_MODELS} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function carModelsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CAR_MODELS:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {CAR_BRANDS} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function carBrandsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CAR_BRANDS:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {RESPONSE} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function responseReducer(state = initialState, action) {\n    switch (action.type) {\n        case RESPONSE:\n            return action.payload;\n        default:\n            return state\n    }\n}","const initialState = [\n    {\n        id: 1,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n    {\n        id: 2,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n    {\n        id: 3,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n];\n\nexport function stoReducer(state = initialState, action) {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport { userReducer } from './user'\nimport { storesReducer } from './stores'\nimport { requestsReducer } from './requests'\nimport { requestReducer } from './request'\nimport { carsReducer } from './cars'\nimport { carModelsReducer } from './carmodels'\nimport { carBrandsReducer } from './carbrands'\nimport { responseReducer } from './response'\nimport { stoReducer } from './sto'\n\nexport const rootReducer = combineReducers({\n    user: userReducer,\n    stores: storesReducer,\n    sto: stoReducer,\n    requests: requestsReducer,\n    request: requestReducer,\n    response: responseReducer,\n    cars: carsReducer,\n    carbrands: carBrandsReducer,\n    carmodels: carModelsReducer,\n});","import { createStore, applyMiddleware } from 'redux'\nimport { rootReducer } from '../reducers'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));","import { get } from 'idb-keyval';\nexport const axios = require('axios');\n\naxios.defaults.baseURL = 'https://marshal.bh-app.ru/api';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nget('AUTH_TOKEN').then(AUTH_TOKEN => {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + AUTH_TOKEN;\n});\n\n\n","import { set } from 'idb-keyval';\nimport { axios } from './init'\n\n\nexport class getData {\n    data = async (type) => {\n        const url = '/' + type;\n        const payload = {};\n        try {\n            let res =  await axios.get(url, payload);\n            if (res.status === 200) {\n                set(type, res.data).then();\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n}","import { get } from 'idb-keyval';\nimport { Detector } from \"react-detect-offline\";\nimport { getData } from '../axios/getData'\n\n// Load data from indexedDB to Store\nexport class initApplication {\n    init = async (props) => {\n        await get('user').then(value => value !== undefined && props.handleLogin(value));\n\n        // from internet\n        let detect = new Detector();\n        if (detect.state.online) {\n            await this.getDataFromDB(props);\n        } else {\n            await this.getDataFromLS();\n        }\n    };\n    getDataFromDB = async (props) => {\n        let get_data = new getData();\n        const shops = get_data.data('shops').then(value => value !== undefined && props.handleShops(value));\n        const categories = get_data.data('categories').then(value => value !== undefined && props.handleCategories(value));\n        const requests = get_data.data('requests').then(value => value !== undefined && props.handleRequests(value));\n        const carbrands = get_data.data('carbrands').then(value => value !== undefined && props.handleCarBrands(value));\n        const carmodels = get_data.data('carmodels').then(value => value !== undefined && props.handleCarModels(value));\n\n        // wait all requests\n        await Promise.all([shops, categories, requests, carbrands, carmodels]).then(function(values) {\n            console.log(values);\n        });\n    };\n    getDataFromLS = async (props) => {\n        const shops = get('shops').then(value => value !== undefined && props.handleShops(value));\n        const categories = get('categories').then(value => value !== undefined && props.handleCategories(value));\n        const requests = get('requests').then(value => value !== undefined && props.handleRequests(value));\n        const carbrands = get('carbrands').then(value => value !== undefined && props.handleCarBrands(value));\n        const carmodels = get('carmodels').then(value => value !== undefined && props.handleCarModels(value));\n\n        // wait all requests\n        await Promise.all([shops, categories, requests, carbrands, carmodels]).then(function(values) {\n            console.log(values);\n        });\n    }\n}\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {getData} from \"../../axios/getData\";\n// import {setData} from \"../../axios/setData\";\nimport {handleRequest} from \"../../actions/DataActions\";\n\nimport {Detector} from \"react-detect-offline\";\nimport {get} from \"idb-keyval\";\nimport {\n    List,\n    ListItem,\n    SwipeoutActions,\n    SwipeoutButton,\n    Icon,\n    Block,\n    BlockTitle\n} from 'framework7-react';\n\nconst getRequest = async (props, reqId) => {\n    let detect = new Detector();\n    if (await detect.state.online) {\n        let get_data = new getData();\n        await get_data.data('request/' + reqId).then(value => value !== undefined && props.handleRequest(value));\n    }else{\n        await get('request/' + reqId).then(value => value !== undefined && props.handleRequest(value));\n    }\n};\n\nclass RequestsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    answer_to_request(reqId) {\n        const app = this.$f7;\n        app.views.main.router.navigate('answer_to_request/' + reqId + '/');\n    }\n\n    open_request(reqId) {\n        this.$f7.dialog.preloader('Получаем предложения...');\n        getRequest(this.props, reqId).then(() => {\n            this.$f7.views.main.router.navigate('requests/' + reqId + '/');\n            this.$f7.dialog.close();\n        });\n    }\n\n    get_category(cat_id) {\n        const cat = this.props.categories.find(x => x.id === cat_id);\n        return cat !== undefined ? cat.category : \"Без категории\"\n    }\n\n    render() {\n        const {requests} = this.props;\n        return (\n            <React.Fragment>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >Здесь отображаются заявки от покупателей на подбор автотоваров или запчастей.</BlockTitle>\n                <List\n                    mediaList\n                    className={\"no-margin\"}\n                >\n                    {\n                        requests.length === 0\n                            ?\n                            <Block>Нет открытых заявок...</Block>\n                            :\n                            requests.map(item => {\n                                return <ListItem\n                                    key={item.id}\n                                    swipeout\n                                    onClick={() => this.open_request(item.id)}\n                                    after={item.created_at.toLocaleString()}\n                                    text={item.text}\n                                    subtitle={`Ответов: ${item.answers_count}`}\n                                >\n                                <span slot=\"title\">\n                                    {/*<Icon\n                                        className={\"status-icon\"}\n                                        material={item.answers > 0 ? 'check_circle_outline' : 'access_time'}\n                                        color=\"blue\"\n                                    />*/}\n                                    [{item.status.status}] {this.get_category(item.category_id)}\n                                </span>\n                                    <SwipeoutActions left>\n                                        <SwipeoutButton color=\"blue\" onClick={() => this.answer_to_request(item.id)}>\n                                            <Icon material=\"reply\"/> Ответить\n                                        </SwipeoutButton>\n                                    </SwipeoutActions>\n                                </ListItem>\n                            })\n                    }\n                </List>\n            </React.Fragment>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        requests: store.requests,\n        categories: store.stores.categories,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleRequest: request => dispatch(handleRequest(request)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestsPage)","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    BlockTitle,\n} from 'framework7-react';\n\nclass OrdersPage extends React.Component {\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <BlockTitle>Здесь будут запросы на которые вы ответили.</BlockTitle>\n\n            </React.Fragment>\n        );\n    }\n}\n\n\n\nexport default connect()(OrdersPage)\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport { set } from 'idb-keyval';\nimport {\n    List,\n    ListItem,\n    Icon,\n    SwipeoutActions,\n    SwipeoutButton,\n} from 'framework7-react';\n\nclass SettingsPage extends React.Component {\n\n    logout() {\n        set('user', undefined).then();\n        set('AUTH_TOKEN', undefined).then(() => {\n            // restart page\n            document.location.href='/';\n            //this.$f7.views.main.router.navigate('/');\n        });\n    }\n    //edit_user\n    edit_user() {\n        this.$f7.views.main.router.navigate('/edit_user/');\n    }\n\n    render() {\n        const {user} = this.props;\n        return (\n            <>\n                <h1>Личный кабинет</h1>\n                    {(user.id > 0)\n                        ?\n                        <List\n                            mediaList\n                            className={\"no-margin\"}\n                        >\n                            <ListItem\n                                subtitle={user.email}\n                                swipeout\n                            >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"account_circle\" color=\"main\"/> {user.name}\n                                </span>\n                                <SwipeoutActions right>\n                                    <SwipeoutButton color=\"orange\" onClick={() => this.logout()}>\n                                        <Icon material=\"exit_to_app\"/> Выйти\n                                    </SwipeoutButton>\n                                </SwipeoutActions>\n                                <SwipeoutActions left>\n                                    <SwipeoutButton color=\"blue\" onClick={() => this.edit_user()}>\n                                        <Icon material=\"edit\"/> Редактировать\n                                    </SwipeoutButton>\n                                </SwipeoutActions>\n                            </ListItem>\n                            <ListItem\n                                button\n                                link=\"edit_store/0/\"\n                                subtitle=\"Ваш магазин\"\n                            >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"store\" color=\"main\"/> Магазин\n                                </span>\n                            </ListItem>\n                        </List>\n                        :\n                        <List\n                            mediaList\n                            className={\"no-margin\"}\n                        >\n                            <ListItem\n                                button\n                                link=\"login/\"\n                                subtitle=\"После регистрации станут доступны дополнительные возможности\"\n                            >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"account_circle\" color=\"main\"/> Вход\n                                </span>\n                            </ListItem>\n                        </List>\n                    }\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nexport default connect(mapStateToProps)(SettingsPage)","import React from 'react';\nimport {connect} from \"react-redux\";\nimport { Offline } from \"react-detect-offline\";\nimport { initApplication } from \"../initApp\"\n\nimport {\n    Page,\n    Navbar,\n    NavRight,\n    Link,\n    Toolbar,\n    Tabs,\n    Tab,\n} from 'framework7-react';\n\nimport { handleLogin } from \"../../actions/UserActions\";\nimport {\n    handleCategories,\n    handleShops,\n    handleRequests,\n    handleCarBrands,\n    handleCarModels,\n} from \"../../actions/DataActions\";\n\nimport RequestsPage from './RequestsPage';\nimport OrdersPage from './OrdersPage';\nimport SettingsPage from './SettingsPage';\n\nclass HomePage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            title: \"Заявки\",\n            loaded: false,\n        }\n    }\n\n    async componentDidMount() {\n        if (!this.state.loaded) {\n            this.$f7.dialog.preloader('Загрузка...');\n            const initApp = new initApplication();\n            await initApp.init(this.props);\n            this.setState({loaded: true});\n            this.$f7.dialog.close();\n        }\n    }\n\n    chgTitle = (title) => {\n        this.setState({title: title});\n    };\n\n    render() {\n        const { title } = this.state;\n        return (\n            <Page hideToolbarOnScroll pageContent={false}>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={\"МС\" + (title !== '' ? (' / ' + title) : \"\")}\n                >\n                    <NavRight>\n                        <Offline>\n                            <Link iconMd=\"material:signal_wifi_off\" />\n                        </Offline>\n                    </NavRight>\n                </Navbar>\n                <Toolbar\n                    bottom\n                    tabbar\n                    labels\n                    color=\"main\"\n                >\n                    <Link tabLink=\"#requests\" onClick={() => this.chgTitle('Заявки')} tabLinkActive text=\"Заявки\" iconMd=\"material:important_devices\"/>\n                    <Link tabLink=\"#orders\" onClick={() => this.chgTitle('Заказы')} text=\"Заказы\" iconMd=\"material:list\"/>\n                    <Link tabLink=\"#person\" onClick={() => this.chgTitle('Личный Кабинет')} text=\"Кабинет\" iconMd=\"material:person\"/>\n                </Toolbar>\n\n                <Tabs animated>\n                    <Tab id=\"requests\" className=\"page-content\" tabActive>\n                        <RequestsPage/>\n                    </Tab>\n                    <Tab id=\"orders\" className=\"page-content\">\n                        <OrdersPage/>\n                    </Tab>\n                    <Tab id=\"person\" className=\"page-content\">\n                        <SettingsPage/>\n                    </Tab>\n                </Tabs>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n        handleShops: shops => dispatch(handleShops(shops)),\n        handleCategories: categories => dispatch(handleCategories(categories)),\n        handleRequests: requests => dispatch(handleRequests(requests)),\n        handleCarBrands: brands => dispatch(handleCarBrands(brands)),\n        handleCarModels: models => dispatch(handleCarModels(models)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","import React, {Component} from 'react';\nimport {Page, Navbar, Block, Link} from 'framework7-react';\n\nexport default class RequestPage extends Component {\n    render() {\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"red\"\n                    title=\"Заявка\"\n                    backLink=\"Back\"\n                />\n                <Block strong>\n                    <ul>\n                        {Object.keys(this.$f7route.params).map(key => (\n                            <li key={key}><b>{key}:</b> {this.$f7route.params[key]}</li>\n                        ))}\n                    </ul>\n                </Block>\n                <Block strong>\n                    <Link onClick={() => this.$f7router.back()}>Назад</Link>\n                </Block>\n            </Page>\n        );\n    }\n}","import {axios} from './init'\n\n\nexport class setData {\n    data = async (type, payload) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.post(url, payload);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n    dataPut = async (type, payload) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.put(url, payload);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n    dataDelete = async (type) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.delete(url);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n}","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n    ListItem,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\n\nimport {setData} from \"../../axios/setData\";\nimport {handleAddCar, handleUpdateCar} from \"../../actions/DataActions\";\n\nclass NewCarPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            car_brand_id: 1,\n            car_model_id: 1,\n            car_id: 0,\n            vin: '',\n            years: [],\n            year: 2019,\n        }\n    }\n\n    handleBrand = (brand_id) => {\n        // find and set first available model\n        const models = this.props.models.filter(x => x.car_brand_id === Number(brand_id));\n        this.setState({ car_brand_id: Number(brand_id) }, () => {\n            this.modelSelectComponent.f7SmartSelect.setValue(models[0].id);\n            this.handleModel(models[0].id);\n        });\n    };\n    handleModel = (model_id) => {\n        this.setState({ car_model_id: Number(model_id) });\n    };\n    handleYear = (year) => {\n        this.setState({ year: Number(year) });\n    };\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    sendCar = (car_id) => {\n        // prepare payload\n        let req_data = {...this.state};\n        delete req_data.years;\n        delete req_data.car_id;\n        req_data[\"user_id\"] = this.props.user.id;\n\n        const set_data = new setData();\n\n        if (car_id > 0) {\n            set_data.dataPut('car-update/'+car_id, req_data).then(() => {\n                req_data[\"id\"] = car_id;\n                this.props.handleUpdateCar(req_data);\n                this.updCarSuccess.open();\n            });\n        }else {\n            set_data.data('car-add', req_data).then(data => {\n                this.props.handleAddCar(data.result);\n                this.addCarSuccess.open();\n            });\n        }\n\n        this.$f7.views.main.router.navigate('/cars/');\n    };\n\n\n    addCarSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Автомобиль добавлен',\n        text: 'Теперь вы можете использовать его в запросах.',\n        closeTimeout: 3000,\n    });\n\n    updCarSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Автомобиль отредактирован',\n        text: 'Теперь вы можете использовать новые данные.',\n        closeTimeout: 3000,\n    });\n\n    componentDidMount() {\n        let years = [];\n        for (let i = 2019; i > 1900; i--) {\n            years.push(i)\n        }\n        let year = years[0];\n\n        const initData = {years: years};\n        const car_id = Number(this.$f7route.params.carId);\n\n        if (car_id > 0) {\n            const car = this.props.cars.find(car => car.id === car_id);\n\n            // Set data to local state\n            initData.car_id = car.id;\n            initData.car_brand_id = car.car_brand_id;\n            initData.car_model_id = car.car_model_id;\n            initData.vin = car.vin;\n            initData.year = car.year;\n\n            this.setState(initData, () => {\n                // Set data to fields\n                this.brandSelectComponent.f7SmartSelect.setValue(car.car_brand_id);\n                this.modelSelectComponent.f7SmartSelect.setValue(car.car_model_id);\n                this.yearSelectComponent.f7SmartSelect.setValue(car.year);\n            });\n\n        } else{\n            this.setState(initData, () => {\n                this.yearSelectComponent.f7SmartSelect.setValue(year);\n            });\n        }\n    }\n\n    render() {\n        const {brands, models} = this.props;\n        const {car_id, car_brand_id, years, vin} = this.state;\n        const self = this;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={car_id > 0 ? \"Редактировать машину\" : \"Добавление машины\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >Здесь вы можете добавить ваш автомобиль(и) для более быстрого подбора услуг.</BlockTitle>\n                <List>\n                    <ListItem\n                        title=\"Марка автомобиля\"\n                        smartSelect\n                        ref={(el) => {this.brandSelectComponent = el}}\n                        smartSelectParams={{\n                            openIn: 'popup',\n                            searchbar: true,\n                            searchbarPlaceholder: 'Найти марку',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleBrand(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {brands.map(brand => (\n                                <option\n                                    key={'brand_' + brand.id}\n                                    value={brand.id}\n                                >{brand.car_brand}</option>\n                            ))}\n                        </select>\n                    </ListItem>\n                    <ListItem\n                        title=\"Модель\"\n                        smartSelect\n                        ref={(el) => {this.modelSelectComponent = el}}\n                        smartSelectParams={{\n                            openIn: 'popup',\n                            searchbar: true,\n                            searchbarPlaceholder: 'Найти модель',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleModel(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {models.filter(x => x.car_brand_id === car_brand_id).map(model => (\n                                <option\n                                    key={'model_' + model.id}\n                                    value={model.id}\n                                >{model.car_model}</option>\n                            ))}\n                        </select>\n                    </ListItem>\n                    <ListItem\n                        title=\"Год выпуска\"\n                        ref={(el) => {this.yearSelectComponent = el}}\n                        smartSelect\n                        smartSelectParams={{\n                            openIn: 'sheet',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleYear(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {years.map(year => (<option key={'year_' + year} value={year}>{year}</option>))}\n                        </select>\n                    </ListItem>\n                    <ListInput\n                        label=\"VIN\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Введите VIN номер автомобиля\"\n                        value={vin}\n                        onChange={(event) => this.handleData('vin', event.target.value)}\n                    />\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.sendCar(car_id)}\n                    >{car_id > 0 ? 'Изменить' : 'Добавить'}</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n        cars: store.cars,\n        brands: store.carbrands,\n        models: store.carmodels,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleAddCar: data => dispatch(handleAddCar(data)),\n        handleUpdateCar: data => dispatch(handleUpdateCar(data)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCarPage)","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n    ListItem,\n    Toggle,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\n\nimport {setData} from \"../../axios/setData\";\n\n/*import {\n    handleAddRequests,\n    handleUpdateRequest,\n   // handleDeleteRequest\n} from \"../../actions/DataActions\";*/\n\n/*\n        'request_id',\n        'status_id',\n        'shop_id',\n        'user_id',\n        'price',\n        'is_new',\n        'description'\n */\nclass NewResponsePage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            request_id: 0,\n            status_id: 1,\n            shop_id: 0,\n            user_id: 0,\n            price: '',\n            is_new: true,\n            description: '',\n            request: {created_at: new Date(), answers_count: 0, status: ''},\n        }\n    }\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    sendAnswer = () => {\n        let req_data = {...this.state};\n        delete req_data.request;\n        const set_data = new setData();\n        set_data.data('answer-add', req_data).then(data => {\n            console.log(data.result);\n            //this.props.handleAddRequests(data.result);\n            this.addRequestSuccess.open();\n        });\n        this.$f7.views.main.router.navigate('/');\n    };\n\n    addRequestSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Заявка добавлена',\n        text: 'В ближайшее время вам ответят.',\n        closeTimeout: 3000,\n    });\n\n    get_category(cat_id) {\n        const cat = this.props.categories.find(x => x.id === cat_id);\n        return cat !== undefined ? cat.category : \"Без категории\"\n    }\n\n    componentDidMount() {\n        const initData = {};\n        const req_id = Number(this.$f7route.params.reqId);\n        if (req_id > 0) {\n            const request = this.props.requests.find(request => request.id === req_id);\n            // Set data to local state\n            initData.request_id = req_id;\n            initData.shop_id = this.props.user.shop_id;\n            initData.user_id = this.props.user.id;\n            initData.request = request;\n            this.setState(initData);\n        }\n    }\n\n    render() {\n        const {price, description, is_new, request} = this.state;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={\"Ответ на запрос\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <List\n                    mediaList\n                    className={\"no-margin list-title\"}\n                >\n                    <ListItem\n                        swipeout\n                        after={request.created_at.toLocaleString()}\n                        subtitle={`Ответов: ${request.answers_count || 0}`}\n                        text={request.text}\n                    >\n                        <span slot=\"title\">\n                            {/*<Icon className={\"status-icon\"} material=\"access_time\" color=\"blue\"/>*/}\n                            [{request.status.status}] {this.get_category(request.category_id)}\n                        </span>\n                    </ListItem>\n                </List>\n                <List\n                    className={\"list-with-header\"}>\n                    <ListItem>\n                        <BlockTitle\n                            style={{whiteSpace: 'initial'}}\n                        >Здесь вы можете ответить на заявку покупателя.</BlockTitle>\n                    </ListItem>\n                    <ListItem>\n                        <span>Товар новый</span>\n                        <Toggle defaultChecked={is_new}\n                                onChange={() => this.handleData('is_new', !is_new)}\n                        />\n                    </ListItem>\n                    <ListInput\n                        outline\n                        label=\"Цена\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Стоимость товара/услуги\"\n                        value={price}\n                        onChange={(event) => this.handleData('price', event.target.value)}\n                    />\n                    <ListInput\n                        outline\n                        label=\"Описание\"\n                        floatingLabel\n                        type=\"textarea\"\n                        placeholder=\"Дополнительная информация о товаре/предложении...\"\n                        value={description}\n                        onChange={(event) => this.handleData('description', event.target.value)}\n                    />\n\n\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.sendAnswer()}\n                    >Отправить ответ</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n        cars: store.cars,\n        models: store.carmodels,\n        brands: store.carbrands,\n        requests: store.requests,\n        shops: store.stores.shops,\n        categories: store.stores.categories,\n    }\n};\n/*\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleAddRequests: data => dispatch(handleAddRequests(data)),\n        handleUpdateRequest: data => dispatch(handleUpdateRequest(data)),\n    }\n};\n*/\n\nexport default connect(mapStateToProps/*, mapDispatchToProps*/)(NewResponsePage)","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\n\nimport {Detector} from \"react-detect-offline\";\nimport {getData} from \"../../axios/getData\";\nimport {handleResponse} from \"../../actions/DataActions\";\nimport {get} from \"idb-keyval\";\n\nimport {\n    Page,\n    Navbar,\n    List,\n    Icon,\n    ListItem,\n    Block,\n    Toolbar,\n    Button\n} from 'framework7-react';\n\nconst getResponse = async (props, resp_id) => {\n    let detect = new Detector();\n    if (await detect.state.online) {\n        let get_data = new getData();\n        await get_data.data('answer/' + resp_id).then(value => value !== undefined && props.handleResponse(value));\n    }else{\n        await get('answer/' + resp_id).then(value => value !== undefined && props.handleResponse(value));\n    }\n};\n\nclass ResponsesPage extends Component {\n\n    get_category(cat_id) {\n        const cat = this.props.categories.find(x => x.id === cat_id);\n        return cat !== undefined ? cat.category : \"Без категории\"\n    }\n\n    get_shop(shop_id) {\n        const shop = this.props.shops.find(x => x.id === shop_id);\n        return shop !== undefined ? shop.name : \"Без категории\"\n    }\n\n    open_response(resp_id) {\n        this.$f7.dialog.preloader('Загружаем предложение...');\n        getResponse(this.props, resp_id).then(() => {\n            this.$f7.views.main.router.navigate('/requests/response/' + resp_id + '/');\n            this.$f7.dialog.close();\n        });\n    }\n\n    newResponse() {\n        const reqId = this.props.request.id;\n        const app = this.$f7;\n        app.views.main.router.navigate(`/response_to_request/${reqId}/`);\n    }\n\n    render() {\n        const {request} = this.props;\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title=\"Предложения\"\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <Toolbar\n                    position={'bottom'}\n                >\n                    <Button\n                        fill\n                        onClick={()=>this.newResponse()}\n                        className={\"btn-new-response\"}\n                    >Ответить на заявку</Button>\n                </Toolbar>\n                <List\n                    mediaList\n                    className={\"no-margin list-title\"}\n                >\n                    <ListItem\n                        swipeout\n                        after={request.created_at.toLocaleString()}\n                        subtitle={`Ответов: ${request.answers.length || 0}`}\n                        text={request.text}\n                    >\n                        <span slot=\"title\">\n                            {/*<Icon className={\"status-icon\"} material=\"access_time\" color=\"blue\"/>*/}\n                            [{request.status.status}] {this.get_category(request.category_id)}\n                        </span>\n                    </ListItem>\n                </List>\n\n                <List\n                    mediaList\n                    noHairlinesMd\n                    className={\"list-with-header\"}\n                >\n                    {/*\ncreated_at: \"2019-04-09 00:00:00\"\ndescription: \"We have something \"\nid: 1\nis_new: true\nprice: 200\nrequest_id: 1\nshop_id: 7\nstatus_id: 1\nupdated_at: \"2019-04-09 00:00:00\"\nupdated_by: 1\nuser_id: 1\n*/}\n                    {\n                        request.answers.length === 0\n                            ?\n                            <Block>На запрос пока нет ответов...</Block>\n                            :\n                            request.answers.map(item => {\n                                return <ListItem\n                                    key={item.id}\n                                    onClick={() => this.open_response(item.id)}\n                                    after={item.created_at.toLocaleString()}\n                                    subtitle={this.get_shop(item.shop_id)}\n                                    text={item.description}\n                                >\n                                    <b slot=\"title\">\n                                        {\n                                            item.is_new ? <Icon className={\"status-icon\"} material=\"fiber_new\"\n                                                  color=\"green\"/> : null\n                                        }\n                                        {item.price}</b>\n                                </ListItem>\n                            })\n                    }\n                </List>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        request: store.request[0],\n        categories: store.stores.categories,\n        shops: store.stores.shops,\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleResponse: request => dispatch(handleResponse(request)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponsesPage)","import React from 'react';\nimport ImageUploader from 'react-images-upload';\nimport {connect} from \"react-redux\";\nimport {\n    Page,\n    Messages,\n    // MessagesTitle,\n    Messagebar,\n    Link,\n    Message,\n    MessagebarAttachment,\n    MessagebarAttachments,\n    MessagebarSheet,\n    MessagebarSheetImage,\n    Icon,\n    List,\n    ListItem,\n    Navbar,\n    Subnavbar,\n    // NavRight\n} from 'framework7-react';\nimport {Detector} from \"react-detect-offline\";\nimport {getData} from \"../../axios/getData\";\nimport {setData} from \"../../axios/setData\";\nimport {get} from \"idb-keyval\";\nimport {handleResponse} from \"../../actions/DataActions\";\n\nconst _ = require('lodash/core');\n\nconst getMessages = async (props, answer_id, loading, sendingData) => {\n    if (!sendingData) {\n        let detect = new Detector();\n        loading.show('yellow');\n        if (await detect.state.online) {\n            let get_data = new getData();\n            await get_data.data('answer/' + answer_id).then(value => value !== undefined && props.handleResponse(value));\n        } else {\n            await get('answer/' + answer_id).then(value => value !== undefined && props.handleResponse(value));\n        }\n        setTimeout(() => {\n            loading.hide();\n        }, 500);\n    }\n};\n\nconst sendMessage = async (props, payload, notificationOffline, handleSendingData) => {\n    handleSendingData(true);\n    let detect = new Detector();\n    if (await detect.state.online) {\n        let set_data = new setData();\n        await payload.forEach( async data => {\n            await set_data.data('message-add', data);\n        });\n    }else{\n        notificationOffline.open();\n    }\n    handleSendingData(false);\n};\n\nclass respMessages extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            messageValue: '',\n            attachments: [],\n            sheetVisible: false,\n            typingMessage: null,\n            messages: this.props.response.messages,\n            messagesData: [\n                {\n                    type: 'received',\n                    message: 'Здравствуйте! 👋<br/>Здесь вы можете уточнить детали заказа.',\n                    date: new Date(),\n                },\n            ],\n            images: [],\n            responseInProgress: false,\n            sendingData: false,\n        }\n    }\n\n    answer_id = this.props.response.id;\n    user = this.props.user;\n\n    notificationOffline = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Ошибка подключения',\n        text: 'Попробуйте повторить запрос позже.',\n        closeButton: true,\n    });\n\n    loading = this.$f7.progressbar;\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n            images: pictureDataURLs,\n            // images: this.state.images.concat(pictureDataURLs),\n        });\n    }\n\n    render() {\n        const {response} = this.props;\n        return (\n            <Page className={\"messages-block\"}>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title=\"Предложение\"\n                    backLink=\"Back\"\n                >\n                    <Subnavbar\n                        inner={false}\n                        className={\"no-margin\"}>\n                        <List\n                            mediaList\n                            className={\"no-margin list-title\"}\n                        >\n                            <ListItem\n                                key={response.id}\n                                onClick={() => this.open_response(response.id)}\n                                after={response.created_at.toLocaleString()}\n                                subtitle={this.get_shop(response.shop_id)}\n                                text={response.description}\n                            >\n                                <b slot=\"title\">\n                                    {\n                                        response.is_new ? <Icon className={\"status-icon\"} material=\"fiber_new\"\n                                                                color=\"green\"/> : null\n                                    }\n                                    {response.price}</b>\n                            </ListItem>\n                        </List>\n                    </Subnavbar>\n                </Navbar>\n                <Messagebar\n                    placeholder={this.placeholder}\n                    ref={(el) => {this.messagebarComponent = el}}\n                    attachmentsVisible={this.attachmentsVisible}\n                    sheetVisible={this.state.sheetVisible}\n                    change={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                    value={this.state.messageValue}\n                    onInput={this.handleMessage.bind(this)}\n                >\n                    <Link\n                        iconIos=\"f7:camera_fill\"\n                        iconMd=\"material:camera_alt\"\n                        slot=\"inner-start\"\n                        onClick={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}\n                    />\n                    <Link\n                        iconIos=\"f7:arrow_up_fill\"\n                        iconMd=\"material:send\"\n                        slot=\"inner-end\"\n                        onClick={this.sendMessage.bind(this)}\n                    />\n                    <MessagebarAttachments>\n                        {this.state.attachments.map((image, index) => (\n                            <MessagebarAttachment\n                                key={index}\n                                image={image}\n                                onAttachmentDelete={() => this.deleteAttachment(image)}\n                            />\n                        ))}\n                    </MessagebarAttachments>\n                    <MessagebarSheet>\n                        {this.state.images.map((image, index) => (\n                            <MessagebarSheetImage\n                                key={index}\n                                image={image}\n                                checked={this.state.attachments.indexOf(image) >= 0}\n                                onChange={this.handleAttachment.bind(this)}\n                            />\n                        ))}\n                        <>\n                            <ImageUploader\n                                slot=\"inner-start\"\n                                withIcon={false}\n                                onChange={this.onDrop.bind(this)}\n                                imgExtension={['.jpg', '.jpeg', '.gif', '.png', '.gif']}\n                                maxFileSize={5242880}\n                                buttonText={'Добавить фото'}\n                                onClick={() => {this.setState({sheetVisible: true})}}\n                            />\n                        </>\n                    </MessagebarSheet>\n                </Messagebar>\n\n                <Messages\n                    className={\"list-with-header\"}\n                    ref={(el) => {this.messagesComponent = el}}\n                    scrollMessages={false}\n                >\n                    {/*<MessagesTitle><b>Sunday, Feb 9,</b> 12:58</MessagesTitle>*/}\n\n                    {this.state.messagesData.map((message, index) => (\n                        <Message\n                            key={index}\n                            type={message.type}\n                            image={message.attachment}\n                            name={message.name}\n                            avatar={message.avatar}\n                            footer={message.date.toLocaleString()}\n                            first={this.isFirstMessage(message, index)}\n                            last={this.isLastMessage(message, index)}\n                            tail={this.isTailMessage(message, index)}\n                        >\n                            {message.message && (\n                                <span slot=\"text\" dangerouslySetInnerHTML={{__html: message.message}} />\n                            )}\n                            {/*{message.attachment && (\n                                <span slot=\"image\">\n                                    <img src={message.attachment} className={'lazy'}/>\n                                </span>\n                            )}*/}\n                        </Message>\n                    ))}\n                    {this.state.typingMessage && (\n                        <Message\n                            type=\"received\"\n                            typing={true}\n                            first={true}\n                            last={true}\n                            tail={true}\n                            header={`${this.state.typingMessage.name} is typing`}\n                            avatar={this.state.typingMessage.avatar}\n                        />\n                    )}\n                </Messages>\n            </Page>\n        )\n    }\n\n    get attachmentsVisible() {\n        const self = this;\n        return self.state.attachments.length > 0;\n    }\n    get placeholder() {\n        const self = this;\n        return self.state.attachments.length > 0 ? 'Добавьте сообщение или отправьте' : 'Сообщение';\n    }\n    get_shop(shop_id) {\n        const shop = this.props.shops.find(x => x.id === shop_id);\n        return shop !== undefined ? shop.name : \"Без категории\"\n    }\n    updateMessages() {\n        const self = this;\n        const messages = self.props.response.messages;\n        if (self.props.response.messages.length) {\n            const messagesData = messages.map((item) => {\n                return {\n                    name: item.user.name,\n                    type: item.user_id === self.props.user.id ? 'sent' : 'received',\n                    message: item.message,\n                    attachment: item.attachment,\n                    date: item.updated_at,\n                }\n            });\n            self.setState({messages: messages, messagesData: messagesData});\n        }\n    }\n\n    // Обновляем сообщения, только если что-то изменилось\n    componentDidUpdate() {\n        const oldData = this.state.messages;\n        const newData = this.props.response.messages;\n        if (!(_.isEqual(newData, oldData))) {\n            this.updateMessages();\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if (!(_.isEqual(nextProps.response.messages, prevState.messages))) {\n            return {response : nextProps.response};\n        }\n        else return null;\n    }\n\n    componentDidMount() {\n        const self = this;\n        this.updateMessages();\n        self.$f7ready(() => {\n            self.messagebar = self.messagebarComponent.f7Messagebar;\n            self.messages = self.messagesComponent.f7Messages;\n        });\n\n        this.intervalId = setInterval(()  =>\n                getMessages(self.props, self.answer_id, self.loading, self.state.sendingData),\n            5000);\n    }\n    componentWillUnmount(){\n        clearInterval(this.intervalId);\n    }\n    isFirstMessage(message, index) {\n        const self = this;\n        const previousMessage = self.state.messagesData[index - 1];\n        if (message.isTitle) return false;\n        return !previousMessage || previousMessage.type !== message.type || previousMessage.name !== message.name;\n\n    }\n    isLastMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        return !nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name;\n\n    }\n    isTailMessage(message, index) {\n        const self = this;\n        const nextMessage = self.state.messagesData[index + 1];\n        if (message.isTitle) return false;\n        return !nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name;\n\n    }\n    deleteAttachment(image) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = attachments.indexOf(image);\n        attachments.splice(index, 1);\n        self.setState({ attachments });\n    }\n    handleAttachment(e) {\n        const self = this;\n        const attachments = self.state.attachments;\n        const index = self.$$(e.target).parents('label.checkbox').index();\n        const image = self.state.images[index];\n        if (e.target.checked) {\n            // Add to attachments\n            attachments.unshift(image);\n        } else {\n            // Remove from attachments\n            attachments.splice(attachments.indexOf(image), 1);\n        }\n        self.setState({ attachments });\n    }\n\n    handleMessage() {\n        const self = this;\n        let text = self.messagebar.$textareaEl.val();\n        self.setState({messageValue: text});\n    }\n    sendMessage() {\n        const self = this;\n        const text = self.messagebar.getValue().replace(/\\n/g, '<br>').trim();\n        const messagesToSend = [];\n        self.state.attachments.forEach((attachment) => {\n            messagesToSend.push({\n                answer_id: self.answer_id,\n                user_id: self.user.id,\n                name: self.user.name,\n                message: text.trim().length ? text : \"&nbsp;\",\n                attachment: attachment,\n                date: new Date(),\n            });\n        });\n        if (text.trim().length && messagesToSend.length === 0) {\n            messagesToSend.push({\n                answer_id: self.answer_id,\n                user_id: self.user.id,\n                name: self.user.name,\n                message: text,\n                attachment: \"\",\n                date: new Date(),\n            });\n        }\n        if (messagesToSend.length === 0) {\n            return;\n        }\n\n        self.setState({\n            messageValue: '',\n            // Reset attachments\n            attachments: [],\n            // Hide sheet\n            sheetVisible: false,\n            // Send message\n            messagesData: [...self.state.messagesData, ...messagesToSend],\n        });\n\n        sendMessage(this.props, messagesToSend, this.notificationOffline, this.handleSendingData).then(() => {\n            self.messagebar.clear();\n        });\n\n        // Focus area\n        if (text.length) self.messagebar.focus();\n        /*\n                // Mock response\n                if (self.state.responseInProgress) return;\n                self.setState({\n                    responseInProgress: true,\n                });\n                */\n    }\n\n    handleSendingData = (value) => {\n        this.setState({sendingData: value});\n    }\n}\n\n\n\nconst mapStateToProps = store => {\n    return {\n        response: store.response[0],\n        shops: store.stores.shops,\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleResponse: request => dispatch(handleResponse(request)),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(respMessages)","import React from 'react';\nimport { connect } from \"react-redux\";\nimport {\n    Page,\n    Navbar,\n    List,\n    Subnavbar,\n    Searchbar,\n    Block,\n    ListItem,\n    Link,\n    NavRight\n} from 'framework7-react';\n\nclass ShopsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            vlData: {\n                items: [],\n            },\n            selectedShops: [],\n        };\n    }\n\n    searchAll = (query, items) => {\n        const found = [];\n        for (let i = 0; i < items.length; i += 1) {\n            if (items[i].name.toLowerCase().indexOf(query.toLowerCase()) >= 0 || query.trim() === '') found.push(i);\n        }\n        return found; // return array with mathced indexes\n    };\n\n    renderExternal(vl, vlData) {\n        this.setState({ vlData });\n    }\n\n    handleToggle = (item) => {\n        this.setState({selectedShops: [item.id]});\n        /*\n        let selectedShops = this.state.selectedShops;\n        item.checked = (item.hasOwnProperty('checked')) ? !item.checked : true;\n        if (item.checked) {\n            selectedShops.push(item.id);\n        } else {\n            selectedShops = selectedShops.filter(x => x !== item.id);\n        }\n        this.setState({selectedShops: selectedShops});\n        */\n    };\n\n    setShops = () => {\n        this.props.handleShops(this.state.selectedShops);\n        this.$f7router.back();\n    };\n\n    componentDidMount() {\n        const {shops, selected_shops} = this.props;\n        this.setState({selectedShops: [...selected_shops]});\n        shops.forEach((item) => {\n            item.checked = [...selected_shops].indexOf(item.id) !== -1;\n        })\n    }\n\n    render() {\n        const {shops} = this.props;\n        const {vlData, selectedShops} = this.state;\n        return (\n            <Page\n                className=\"stores-list\">\n                <Navbar title=\"Список магазинов\"\n                        backLink=\"Back\"\n                        bgColor=\"main\"\n                        textColor=\"white\"\n                        color=\"white\"\n                >\n                    <NavRight>\n                        <Link iconMd=\"material:done\" onClick={() => this.setShops()}/>\n                    </NavRight>\n                    <Subnavbar inner={false} className={\"search-bar\"}>\n                        <Searchbar\n                            searchContainer=\".virtual-list\"\n                            searchItem=\"li\"\n                            searchIn=\".item-title\"\n                            placeholder=\"Поиск\"\n                        />\n                    </Subnavbar>\n                </Navbar>\n                <Block>\n                    <p>Здесь вы можете выбрать в какой магазин хотите отправить запрос</p>\n                </Block>\n                <List className=\"searchbar-not-found\">\n                    <ListItem title=\"Магазины не найдены...\"/>\n                </List>\n                <List\n                    className=\"searchbar-found\"\n                    medialList\n                    virtualList\n                    virtualListParams={\n                        {\n                            items: shops,\n                            searchAll: this.searchAll,\n                            renderExternal: this.renderExternal.bind(this),\n                            height: this.$theme.ios ? 63 : 73\n                        }\n                    }\n                >\n                    <ul>\n                        {vlData.items.map((item, index) => (\n                            <ListItem\n                                key={index}\n                                mediaItem\n                                radio\n                                checked={selectedShops.indexOf(item.id) !== -1 /*item.checked*/}\n                                onClick={() => this.handleToggle(item)}\n                                title={item.name}\n                                subtitle={item.address}\n                                after={item.phone}\n                                style={{top: `${vlData.topPosition}px`}}\n                            />\n                        ))}\n                    </ul>\n                </List>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        shops: store.stores.shops,\n    }\n};\n\nexport default connect(mapStateToProps)(ShopsList)","import { set, get } from 'idb-keyval';\nimport { axios } from './init'\n\n\nexport class authorisation {\n\n    login = async (...args) => {\n        const url = '/login';\n        const payload = {\n            email: args[0],\n            password: args[1],\n            application: 'marshal'\n        };\n        let res = 'test';\n        await get('AUTH_TOKEN').then( async value => {\n            if (value === undefined) {\n                try {\n                    let response = await axios.post(url, payload);\n                    let AUTH_TOKEN = response.data.access_token;\n                    axios.defaults.headers.common['Authorization'] = 'Bearer ' + AUTH_TOKEN;\n                    set('AUTH_TOKEN', AUTH_TOKEN).then();\n                    res = await this.user_details();\n\n                } catch (error) {\n                    res = error.response;\n                }\n            }else{\n                res = await this.user_details();\n                console.log(res);\n            }\n        });\n        return res;\n    };\n\n    user_details = async () => {\n        const url = '/details';\n        const payload = {};\n        try {\n            return await axios.get(url, payload);\n        } catch (error) {\n            return error.response;\n        }\n    }\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    Page,\n    List,\n    ListInput,\n    Button,\n    BlockFooter,\n    Link,\n    LoginScreenTitle\n} from 'framework7-react';\n\nimport { authorisation } from '../../axios/login'\nimport { handleLogin } from '../../actions/UserActions'\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputLogin: '',\n            inputPassword: '',\n        };\n    }\n\n    authError = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Ошибка авторизации',\n        text: 'Проверьте имя пользователя и пароль.',\n        closeButton: true,\n    });\n\n    authSuccess = (name) => this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Добро пожаловать ' + name + '!',\n        closeTimeout: 3000,\n    });\n\n    handleOnChange = prop => event => {\n      this.setState({[prop]: event.target.value});\n    };\n\n    async authentication() {\n        const self = this;\n        self.$f7.dialog.preloader();\n\n        const auth = new authorisation();\n        const { inputLogin, inputPassword} = this.state;\n        const response = await auth.login(inputLogin, inputPassword);\n        if (response.status === 401) {\n            this.authError.open();\n        } else if (response.status === 200) {\n            this.authSuccess(response.data.success.name).open();\n            this.$f7.views.main.router.navigate('/');\n        }\n        self.$f7.dialog.close();\n        this.props.handleLogin(response.data.success);\n    }\n    render() {\n\n        const { inputLogin, inputPassword} = this.state;\n\n        return (\n            <Page loginScreen>\n                <LoginScreenTitle>Войти</LoginScreenTitle>\n                <List form>\n                    <ListInput\n                        label=\"Email\"\n                        name=\"username\"\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        value={inputLogin}\n                        onChange={this.handleOnChange('inputLogin')}\n                    />\n                    <ListInput\n                        label=\"Password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        value={inputPassword}\n                        onChange={this.handleOnChange('inputPassword')}\n                    />\n\n                    <BlockFooter>\n                        <Button fill onClick={()=>this.authentication()}>Войти</Button>\n                    </BlockFooter>\n                </List>\n\n                <List>\n                    <BlockFooter>\n                        <p><Link href={'/register_user/'}>Зарегистрироваться</Link></p>\n                        {/*<p>Для восстановления пароля нажмите <Link>ссылку</Link></p>*/}\n                    </BlockFooter>\n                </List>\n            </Page>\n        )\n    }\n}\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleLogin} from \"../../actions/UserActions\";\n\nimport {setData} from \"../../axios/setData\";\n\nclass EditUserPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            name: '',\n            password: '',\n        }\n    }\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    updateUser = async () => {\n        if (this.state.name === '') {\n            this.$f7.toast.create({ text: 'Введите ваше имя',closeTimeout: 2000 }).open();\n            return;\n        }\n        if (this.state.email === '') {\n            this.$f7.toast.create({ text: 'Введите почтовый адрес',closeTimeout: 2000 }).open();\n            return;\n        }\n        if (this.props.user.initial === 1 && this.state.password === '') {\n            this.$f7.toast.create({ text: 'Введите пароль', closeTimeout: 2000 }).open();\n            return;\n        }\n\n        this.$f7.dialog.preloader('Пожалуйста подождите...');\n        const set_data = new setData();\n        const user = this.props.user;\n        user.name = this.state.name;\n        user.email = this.state.email;\n        const new_data = {email: user.email, name: user.name};\n        if (this.state.password !== '') {\n            new_data.password = this.state.password;\n        }\n        if (this.props.user.initial === 1) {\n            new_data.initial = 0;\n            user.initial = 0;\n        }\n        await set_data.dataPut(`user-update/${user.id}`, new_data).then(() => {\n            this.props.handleLogin(user);\n            this.$f7.views.main.router.navigate('/');\n            this.$f7.dialog.close();\n        });\n    };\n\n    async componentDidMount() {\n        const {email, name, initial} = this.props.user;\n        if (initial !== 1) {\n            this.$f7.dialog.preloader('Пожалуйста подождите...');\n            this.setState({email: email, name: name});\n            this.$f7.dialog.close();\n        }\n    }\n\n    render() {\n        const {email, name, password} = this.state;\n        const {initial} = this.props.user;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={initial === 1 ? \"Регистрация\" : \"Редактировать пользователя\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >{initial === 1\n                    ? \"После регистрации станут доступны дополнительные возможности.\"\n                    : \"Здесь вы можете отредактировать параметры своего профиля.\"}</BlockTitle>\n                <List>\n                    <ListInput\n                        label=\"Имя пользователя\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Ваше имя\"\n                        value={name}\n                        onChange={(event) => this.handleData('name', event.target.value)}\n                    />\n                    <ListInput\n                        label=\"Почта / Логин\"\n                        floatingLabel\n                        type=\"email\"\n                        placeholder=\"Ваша почта\"\n                        value={email}\n                        onChange={(event) => this.handleData('email', event.target.value)}\n                    />\n                    <ListInput\n                        label=\"Пароль\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder={initial === 1 ? \"Введите пароль\" : \"Введите новый, если хотите сменить\"}\n                        value={password}\n                        onChange={(event) => this.handleData('password', event.target.value)}\n                    />\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.updateUser()}\n                    >{initial === 1 ? \"Зарегистрироваться\" : \"Изменить\"}</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUserPage)","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleLogin} from \"../../actions/UserActions\";\n\nimport {setData} from \"../../axios/setData\";\nimport {authorisation} from \"../../axios/login\";\n\nclass RegisterUserPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            name: '',\n            password: '',\n        }\n    }\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    registerUser = async () => {\n        if (this.state.name === '') {\n            this.$f7.toast.create({ text: 'Введите ваше имя',closeTimeout: 2000 }).open();\n            return;\n        }\n        if (this.state.email === '') {\n            this.$f7.toast.create({ text: 'Введите почтовый адрес',closeTimeout: 2000 }).open();\n            return;\n        }\n        if (this.props.user.initial === 1 && this.state.password === '') {\n            this.$f7.toast.create({ text: 'Введите пароль', closeTimeout: 2000 }).open();\n            return;\n        }\n\n        this.$f7.dialog.preloader('Пожалуйста подождите...');\n        const set_data = new setData();\n        const user = this.props.user;\n        user.name = this.state.name;\n        user.email = this.state.email;\n        user.initial = 0;\n\n        const new_data = {email: user.email, name: user.name};\n        new_data.password = this.state.password;\n        new_data.c_password = this.state.password;\n        new_data.initial = 0;\n        new_data.role_id = 3;\n        await set_data.dataPut(`register/`, new_data).then(() => {\n            this.props.handleLogin(user);\n            this.$f7.views.main.router.navigate('/');\n            this.$f7.dialog.close();\n        });\n\n        await set_data.data('register', new_data).then(async data => {\n            console.log(data);\n            // auth user\n            const auth = new authorisation();\n            await auth.login(user.email, new_data.password).then( async response => {\n                // записываем токен\n                const user = response.data.success;\n                await this.props.handleLogin(user);\n\n                // restart page\n                document.location.href='/';\n            });\n        });\n    };\n\n    render() {\n        const {email, name, password} = this.state;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={\"Регистрация\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >После регистрации станут доступны дополнительные возможности.</BlockTitle>\n                <List>\n                    <ListInput\n                        label=\"Имя пользователя\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Ваше имя\"\n                        value={name}\n                        onChange={(event) => this.handleData('name', event.target.value)}\n                    />\n                    <ListInput\n                        label=\"Почта / Логин\"\n                        floatingLabel\n                        type=\"email\"\n                        placeholder=\"Ваша почта\"\n                        autocomplete=\"username\"\n                        value={email}\n                        onChange={(event) => this.handleData('email', event.target.value)}\n                    />\n                    <ListInput\n                        label=\"Пароль\"\n                        floatingLabel\n                        type=\"password\"\n                        placeholder=\"Введите пароль\"\n                        autocomplete=\"new-password\"\n                        value={password}\n                        onChange={(event) => this.handleData('password', event.target.value)}\n                    />\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.registerUser()}\n                    >Зарегистрироваться</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterUserPage)","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleLogin} from \"../../actions/UserActions\";\n\nimport {setData} from \"../../axios/setData\";\n\n\nclass EditStorePage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            description: '',\n            address: '',\n            phone: '',\n            comment: '',\n            store_id: 0,\n        }\n    }\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    addStore = async () => {\n        if (this.state.name === '') {\n            this.$f7.toast.create({ text: 'Введите название',closeTimeout: 2000 }).open();\n            return;\n        }\n\n        this.$f7.dialog.preloader('Пожалуйста подождите...');\n        const payload = {...this.state};\n        delete payload.store_id;\n        const set_data = new setData();\n        await set_data.data(`shop-add`, payload).then(() => {\n            this.$f7.dialog.close();\n        });\n    };\n    updateStore = async () => {\n        if (this.state.name === '') {\n            this.$f7.toast.create({ text: 'Введите название',closeTimeout: 2000 }).open();\n            return;\n        }\n\n        this.$f7.dialog.preloader('Пожалуйста подождите...');\n        const payload = {...this.state};\n        delete payload.store_id;\n        const set_data = new setData();\n        await set_data.data(`shop-update/${this.state.store_id}`, payload).then(() => {\n            this.$f7.dialog.close();\n        });\n    };\n\n    async componentDidMount() {\n        const {email, name } = this.props.user;\n        const store_id = Number(this.$f7route.params.storeId);\n\n        if (store_id !== 0) {\n            this.$f7.dialog.preloader('Пожалуйста подождите...');\n            this.setState({email, name, store_id});\n            this.$f7.dialog.close();\n        } else {\n            this.setState({store_id});\n        }\n    }\n\n    render() {\n        const { name, description, address, phone, comment, store_id} = this.state;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={store_id === 0 ? \"Новый магазин\" : \"Редактировать магазин\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >{store_id === 0\n                    ? \"После регистрации станут доступны дополнительные возможности.\"\n                    : \"Здесь вы можете отредактировать параметры своего профиля.\"}</BlockTitle>\n                <List>\n                    <ListInput\n                        label=\"Название магазина\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Запчасти для...\"\n                        value={name}\n                        onChange={(event) => this.handleData('name', event.target.value)}\n                    />\n                    <ListInput\n                        label=\"Описание\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Описание вашего магазина\"\n                        value={description}\n                        onChange={(event) => this.handleData('description', event.target.value)}\n                    />\n                    <ListInput\n                        label=\"Адрес\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Точка продаж\"\n                        value={address}\n                        onChange={(event) => this.handleData('address', event.target.value)}\n                    />\n                    <ListInput\n                        label=\"Телефон\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Контактные телефоны\"\n                        value={phone}\n                        onChange={(event) => this.handleData('phone', event.target.value)}\n                    />\n                    <ListInput\n                        label=\"Комментарий\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Дополнительный комментарий (для себя)\"\n                        value={comment}\n                        onChange={(event) => this.handleData('comment', event.target.value)}\n                    />\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => store_id === 0 ? this.addStore() :  this.updateStore()}\n                    >{store_id === 0 ? \"Добавить\" : \"Изменить\"}</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditStorePage)","import HomePage from './components/pages/HomePage';\nimport AboutPage from './components/pages/AboutPage';\nimport DynamicRoutePage from './components/pages/DynamicRoutePage';\nimport NotFoundPage from './components/pages/NotFoundPage';\nimport NewCarPage from \"./components/pages/NewCarPage\";\nimport NewResponsePage from \"./components/pages/NewResponsePage\";\nimport ResponsesPage from \"./components/pages/ResponsesPage\";\nimport ResponsePage from \"./components/pages/ResponsePage\";\nimport StoresList from \"./components/pages/StoresList\";\nimport LoginPage from \"./components/pages/LoginPage\";\nimport EditUserPage from \"./components/pages/EditUserPage\";\nimport RegisterUserPage from \"./components/pages/RegisterUserPage\";\nimport EditStorePage from \"./components/pages/EditStorePage\";\n\nexport default [\n    {\n        path: '/',\n        component: HomePage,\n    },\n    {\n        path: '/about/',\n        component: AboutPage,\n    },\n    {\n        path: '/login/',\n        component: LoginPage,\n    },\n    {\n        path: '/dynamic-route/blog/:blogId/post/:postId/',\n        component: DynamicRoutePage,\n    },\n    {\n        path: '/response_to_request/:reqId/',\n        component: NewResponsePage,\n    },\n    {\n        path: '/open_car/:carId/',\n        component: NewCarPage,\n    },\n    {\n        path: '/requests/:reqId/',\n        component: ResponsesPage,\n    },\n    {\n        path: '/requests/response/:reqId/',\n        component: ResponsePage,\n    },\n    {\n        path: '/stores_list/',\n        component: StoresList,\n    },\n    {\n        path: '/edit_user/',\n        component: EditUserPage,\n    },\n    {\n        path: '/register_user/',\n        component: RegisterUserPage,\n    },\n    {\n        path: '/edit_store/:storeId/',\n        component: EditStorePage,\n    },\n    {\n        path: '(.*)',\n        component: NotFoundPage,\n    },\n];\n","import React from 'react';\nimport { Page, Navbar, Link, Block, BlockTitle } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"About\" backLink=\"Back\"></Navbar>\n    <BlockTitle>About My App</BlockTitle>\n    <Block strong>\n      <p>Here is About page!</p>\n      <p>You can go <Link back>back</Link>.</p>\n      <p>Mauris posuere sit amet metus id venenatis. Ut ante dolor, tempor nec commodo rutrum, varius at sem. Nullam ac nisi non neque ornare pretium. Nulla mauris mauris, consequat et elementum sit amet, egestas sed orci. In hac habitasse platea dictumst.</p>\n      <p>Fusce eros lectus, accumsan eget mi vel, iaculis tincidunt felis. Nulla tincidunt pharetra sagittis. Fusce in felis eros. Nulla sit amet aliquam lorem, et gravida ipsum. Mauris consectetur nisl non sollicitudin tristique. Praesent vitae metus ac quam rhoncus mattis vel et nisi. Aenean aliquet, felis quis dignissim iaculis, lectus quam tincidunt ligula, et venenatis turpis risus sed lorem. Morbi eu metus elit. Ut vel diam dolor.</p>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar\n        title=\"Ошибка\"\n        backLink=\"Back\"\n        color=\"white\"\n        textColor=\"white\"\n        bgColor=\"main\"\n    />\n    <Block strong>\n      <p>Как вы сюда попали?..</p>\n      <p>Страница не найдена.</p>\n    </Block>\n  </Page>\n);\n","// Import React and ReactDOM\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport './css/app.css';\nimport 'framework7/css/framework7.bundle.css';\nimport './css/icons.css';\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(\n  React.createElement(App),\n  document.getElementById('app'),\n);\n\n","import React from 'react';\n\nimport {Provider} from 'react-redux';\nimport {store} from '../store/configureStore';\n\nimport {\n    App,\n    Panel,\n    View,\n    Statusbar,\n    Popup,\n    Page,\n    Navbar,\n    NavRight,\n    Link,\n    Block,\n} from 'framework7-react';\n\n\nimport routes from '../routes';\n\nexport default function (props) {\n\n    const params = {\n        themeDark: false,\n        mainColor: 'red'\n    };\n\n    // Framework7 parameters here\n    const f7params = {\n        id: 'ru.bhapp.marshal', // App bundle ID\n        name: 'marshal', // App name\n        theme: 'md', // Automatic theme detection\n        // App routes\n        routes,\n    };\n\n    return (\n        <Provider store={store}>\n            <App params={f7params} themeDark={params.themeDark} color={params.mainColor}>\n                {/* Statusbar */}\n                <Statusbar/>\n\n                {/* Left Panel */}\n                <Panel left cover themeDark>\n                    <View url=\"/panel-left/\"/>\n                </Panel>\n\n                {/* Right Panel */}\n                <Panel right reveal themeDark>\n                    <View url=\"/panel-right/\"/>\n                </Panel>\n\n                {/* Main View */}\n                <View id=\"main-view\" url=\"/\" main className=\"safe-areas\"/>\n\n                {/* Popup */}\n                <Popup id=\"popup\">\n                    <View>\n                        <Page>\n                            <Navbar title=\"Popup\">\n                                <NavRight>\n                                    <Link popupClose>Close</Link>\n                                </NavRight>\n                            </Navbar>\n                            <Block>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neque, architecto.\n                                Cupiditate laudantium rem nesciunt numquam, ipsam. Voluptates omnis, a inventore atque\n                                ratione aliquam. Omnis iusto nemo quos ullam obcaecati, quod.</Block>\n                        </Page>\n                    </View>\n                </Popup>\n\n            </App>\n        </Provider>\n    );\n};\n"],"sourceRoot":""}