{"version":3,"sources":["actions/UserActions.js","reducers/user.js","actions/DataActions.js","reducers/stores.js","reducers/requests.js","reducers/request.js","reducers/cars.js","reducers/carmodels.js","reducers/carbrands.js","reducers/response.js","reducers/orders.js","reducers/sto.js","reducers/index.js","store/configureStore.js","axios/init.js","axios/getData.js","components/initApp.js","components/pages/RequestsPage.jsx","components/pages/OrdersPage.jsx","components/pages/SettingsPage.jsx","components/pages/HomePage.jsx","components/pages/DynamicRoutePage.jsx","axios/setData.js","components/pages/NewCarPage.jsx","components/pages/NewResponsePage.jsx","components/pages/ResponsesPage.jsx","components/pages/ResponsePage.jsx","components/pages/StoresList.jsx","axios/login.js","components/pages/LoginPage.jsx","components/pages/EditUserPage.jsx","components/pages/RegisterUserPage.jsx","components/pages/EditStorePage.jsx","routes.js","components/pages/AboutPage.jsx","components/pages/NotFoundPage.jsx","index.js","components/App.jsx"],"names":["LOGIN_SUCCESS","handleLogin","callback","dispatch","type","payload","initialState","id","name","email","role_id","shop_id","SHOP_REQUEST","SHOPS_FAVORITE","SHOPS_ADD_FAVORITE","SHOPS_DELETE_FAVORITE","CATEGORIES_REQUEST","REQUESTS","REQUEST","ADD_REQUEST","UPDATE_REQUEST","DELETE_REQUEST","RESPONSE","ORDERS","CARS","ADD_CAR","UPDATE_CAR","DELETE_CAR","CAR_BRANDS","CAR_MODELS","handleShop","handleRequests","handleResponse","newState","shopIndex","shop","favorite_shops","categories","reqIndex","carIndex","orders","description","address","phone","comment","updated_at","Date","rootReducer","combineReducers","user","state","arguments","length","undefined","action","set","then","Object","objectSpread","stores","toConsumableArray","push","findIndex","splice","sto","requests","edited_req","req","req_id","request","response","cars","edited_car","car","car_id","carbrands","carmodels","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","axios","require","defaults","baseURL","headers","post","get","AUTH_TOKEN","common","getData","classCallCheck","this","data","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","url","res","_args","wrap","_context","prev","next","sent","status","abrupt","t0","console","log","stop","_x","apply","initApplication","_this","init","props","value","Detector","online","getDataFromDB","getDataFromLS","_ref2","_callee2","get_data","userDetails","_context2","success","handleCategories","handleCarBrands","handleCarModels","params","handleOrders","Promise","all","values","_x2","_ref3","_callee3","_context3","_x3","getRequest","reqId","detect","handleRequest","getRequests","dateFrom","dateTo","moment","format","_x4","_x5","RequestsPage","possibleConstructorReturn","getPrototypeOf","call","handleDateChange","date","$f7","dialog","preloader","setState","close","views","main","router","navigate","_this2","cat_id","cat","find","x","category","_this3","react_default","createElement","Fragment","framework7_react_esm","style","whiteSpace","noHairlinesMd","placeholder","readonly","onCalendarChange","calendarParams","dateFormat","rangePicker","mediaList","className","map","item","key","swipeout","onClick","open_request","after","created_at","toLocaleString","text","subtitle","concat","answers_count","slot","get_category","category_id","left","color","answer_to_request","material","React","Component","connect","getResponse","resp_id","OrdersPage","order","open_response","in_stock","original","price","SettingsPage","document","location","href","right","logout","edit_user","button","link","HomePage","chgTitle","title","loaded","initApp","hideToolbarOnScroll","pageContent","textColor","bgColor","dist","iconMd","bottom","tabbar","labels","tabLink","tabLinkActive","animated","tabActive","pages_RequestsPage","pages_OrdersPage","pages_SettingsPage","brands","models","RequestPage","backLink","strong","keys","$f7route","$f7router","back","setData","dataPut","put","dataDelete","delete","NewCarPage","handleBrand","brand_id","filter","car_brand_id","Number","modelSelectComponent","f7SmartSelect","setValue","handleModel","model_id","car_model_id","handleYear","year","handleData","defineProperty","sendCar","req_data","years","set_data","handleUpdateCar","updCarSuccess","open","handleAddCar","result","addCarSuccess","notification","create","icon","closeTimeout","vin","i","initData","carId","brandSelectComponent","yearSelectComponent","_this$props","_this$state","self","smartSelect","ref","el","smartSelectParams","openIn","searchbar","searchbarPlaceholder","closeOnSelect","on","closed","getValue","brand","car_brand","model","car_model","label","floatingLabel","onChange","event","target","fill","NewResponsePage","sendAnswer","addRequestSuccess","request_id","status_id","user_id","is_new","defaultChecked","outline","shops","ResponsesPage","position","newResponse","answers","_","getMessages","answer_id","loading","sendingData","show","setTimeout","hide","sendMessage","notificationOffline","handleSendingData","forEach","_x9","_x6","_x7","_x8","respMessages","closeButton","progressbar","messageValue","attachments","sheetVisible","typingMessage","messages","messagesData","message","images","responseInProgress","pictureFiles","pictureDataURLs","inner","messagebarComponent","attachmentsVisible","change","onInput","handleMessage","bind","iconIos","image","index","onAttachmentDelete","deleteAttachment","checked","indexOf","handleAttachment","compiled_default","withIcon","onDrop","imgExtension","maxFileSize","buttonText","messagesComponent","scrollMessages","attachment","avatar","footer","first","isFirstMessage","last","isLastMessage","tail","isTailMessage","dangerouslySetInnerHTML","__html","typing","header","oldData","newData","isEqual","updateMessages","$f7ready","messagebar","f7Messagebar","f7Messages","intervalId","setInterval","clearInterval","previousMessage","isTitle","nextMessage","e","$$","parents","unshift","$textareaEl","val","replace","trim","messagesToSend","clear","focus","nextProps","prevState","ShopsList","searchAll","query","items","found","toLowerCase","handleToggle","selectedShops","setShops","handleShops","vlData","vl","selected_shops","searchContainer","searchItem","searchIn","medialList","virtualList","virtualListParams","renderExternal","height","$theme","ios","mediaItem","radio","top","topPosition","authorisation","login","_args2","password","application","access_token","user_details","LoginPage","authError","authSuccess","handleOnChange","prop","inputLogin","inputPassword","auth","_this$state2","loginScreen","form","authentication","EditUserPage","updateUser","new_data","toast","initial","RegisterUserPage","registerUser","c_password","autocomplete","EditStorePage","categoryHandler","options","o","selected","carBrandsHandler","carBrands","addStore","store_id","updateStore","area","section","car_brands","v","pivot","multiple","routes","path","component","DynamicRoutePage","ResponsePage","StoresList","Framework7","use","Framework7React","ReactDOM","render","f7params","theme","es","themeDark","cover","reveal","popupClose","getElementById"],"mappings":"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","file":"static/js/main.b463b8dc.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport function handleLogin(callback) {\n    return function(dispatch) {\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: callback,\n        })\n    }\n}","import {\n    LOGIN_SUCCESS,\n} from '../actions/UserActions'\n\nimport { set } from 'idb-keyval';\n\nconst initialState = {\n    id: 0,\n    name: '',\n    email: '',\n    role_id: 0,\n    shop_id: null,\n};\n\nexport function userReducer(state = initialState, action) {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n            set('user', action.payload).then();\n            return { ...action.payload };\n        default:\n            return state\n    }\n}","export const SHOP_REQUEST = \"SHOP_REQUEST\";\nexport const SHOPS_FAVORITE = \"SHOPS_FAVORITE\";\nexport const SHOPS_ADD_FAVORITE = \"SHOPS_ADD_FAVORITE\";\nexport const SHOPS_DELETE_FAVORITE = \"SHOPS_DELETE_FAVORITE\";\nexport const CATEGORIES_REQUEST = \"CATEGORIES_REQUEST\";\nexport const REQUESTS = \"REQUESTS\";\nexport const REQUEST = \"REQUEST\";\nexport const ADD_REQUEST = \"ADD_REQUEST\";\nexport const UPDATE_REQUEST = \"UPDATE_REQUEST\";\nexport const DELETE_REQUEST = \"DELETE_REQUEST\";\nexport const RESPONSE = \"RESPONSE\";\nexport const ORDERS = \"ORDERS\";\nexport const CARS = \"CARS\";\nexport const ADD_CAR = \"ADD_CAR\";\nexport const UPDATE_CAR = \"UPDATE_CAR\";\nexport const DELETE_CAR = \"DELETE_CAR\";\nexport const CAR_BRANDS = \"CAR_BRANDS\";\nexport const CAR_MODELS = \"CAR_MODELS\";\n\nexport function handleShop(callback) {\n  return function(dispatch) {\n    dispatch({\n      type: SHOP_REQUEST,\n      payload: callback\n    });\n  };\n}\nexport function handleFavoriteShops(callback) {\n  return function(dispatch) {\n    dispatch({\n      type: SHOPS_FAVORITE,\n      payload: callback\n    });\n  };\n}\nexport function handleFavoriteShopAdd(callback) {\n  return function(dispatch) {\n    dispatch({\n      type: SHOPS_ADD_FAVORITE,\n      payload: callback\n    });\n  };\n}\nexport function handleFavoriteShopDelete(callback) {\n  return function(dispatch) {\n    dispatch({\n      type: SHOPS_DELETE_FAVORITE,\n      payload: callback\n    });\n  };\n}\nexport function handleCategories(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: CATEGORIES_REQUEST,\n      payload: payload\n    });\n  };\n}\nexport function handleRequests(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: REQUESTS,\n      payload: payload\n    });\n  };\n}\nexport function handleRequest(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: REQUEST,\n      payload: payload\n    });\n  };\n}\nexport function handleResponse(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: RESPONSE,\n      payload: payload\n    });\n  };\n}\nexport function handleOrders(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: ORDERS,\n      payload: payload\n    });\n  };\n}\nexport function handleAddRequests(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: ADD_REQUEST,\n      payload: payload\n    });\n  };\n}\nexport function handleUpdateRequest(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: UPDATE_REQUEST,\n      payload: payload\n    });\n  };\n}\nexport function handleDeleteRequest(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: DELETE_REQUEST,\n      payload: payload\n    });\n  };\n}\nexport function handleAddCar(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: ADD_CAR,\n      payload: payload\n    });\n  };\n}\nexport function handleUpdateCar(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: UPDATE_CAR,\n      payload: payload\n    });\n  };\n}\nexport function handleDeleteCar(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: DELETE_CAR,\n      payload: payload\n    });\n  };\n}\nexport function handleCars(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: CARS,\n      payload: payload\n    });\n  };\n}\nexport function handleCarBrands(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: CAR_BRANDS,\n      payload: payload\n    });\n  };\n}\nexport function handleCarModels(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: CAR_MODELS,\n      payload: payload\n    });\n  };\n}\n","import {\n  SHOP_REQUEST,\n  SHOPS_FAVORITE,\n  SHOPS_ADD_FAVORITE,\n  SHOPS_DELETE_FAVORITE,\n  CATEGORIES_REQUEST\n} from \"../actions/DataActions\";\n\nconst initialState = {\n  shop: [],\n  favorite_shops: [],\n  categories: []\n};\n\nlet newState;\nlet shopIndex;\n\nexport function storesReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOP_REQUEST:\n      return { ...state, shop: action.payload };\n    case SHOPS_FAVORITE:\n      return { ...state, favorite_shops: action.payload };\n    case SHOPS_ADD_FAVORITE:\n      newState = [...state.favorite_shops];\n      newState.push(action.payload);\n      return { ...state, favorite_shops: newState };\n    case SHOPS_DELETE_FAVORITE:\n      const shop_id = action.payload;\n      newState = [...state.favorite_shops];\n      shopIndex = newState.findIndex(shop => shop.id === shop_id);\n      newState.splice(shopIndex, 1);\n      return { ...state, favorite_shops: newState };\n    case CATEGORIES_REQUEST:\n      return { ...state, categories: action.payload };\n\n    default:\n      return state;\n  }\n}\n","import {ADD_REQUEST, DELETE_REQUEST, REQUESTS, UPDATE_REQUEST} from \"../actions/DataActions\";\n\nconst initialState = [];\nlet newState = [];\nlet reqIndex;\n\nexport function requestsReducer(state = initialState, action) {\n    switch (action.type) {\n        case REQUESTS:\n            return action.payload;\n        case ADD_REQUEST:\n            newState = [...state];\n            newState.push(action.payload);\n            return newState;\n        case UPDATE_REQUEST:\n            const edited_req = action.payload;\n            newState = [...state];\n            reqIndex = newState.findIndex((req => req.id === edited_req.id));\n            newState[reqIndex] = edited_req;\n            return newState;\n        case DELETE_REQUEST:\n            const req_id = action.payload;\n            newState = [...state];\n            reqIndex = newState.findIndex((req => req.id === req_id));\n            newState.splice(reqIndex, 1);\n            return newState;\n        default:\n            return state\n    }\n}","import {REQUEST} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function requestReducer(state = initialState, action) {\n    switch (action.type) {\n        case REQUEST:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {ADD_CAR, CARS, UPDATE_CAR, DELETE_CAR} from \"../actions/DataActions\";\n\nconst initialState = [];\nlet newState = [];\nlet carIndex = 0;\n\nexport function carsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CARS:\n            return action.payload;\n        case ADD_CAR:\n            newState = [...state];\n            newState.push(action.payload);\n            return newState;\n        case UPDATE_CAR:\n            const edited_car = action.payload;\n            newState = [...state];\n            carIndex = newState.findIndex((car => car.id === edited_car.id));\n            newState[carIndex] = edited_car;\n            return newState;\n        case DELETE_CAR:\n            const car_id = action.payload;\n            newState = [...state];\n            carIndex = newState.findIndex((car => car.id === car_id));\n            newState.splice(carIndex, 1);\n            return newState;\n        default:\n            return state\n    }\n}","import {CAR_MODELS} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function carModelsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CAR_MODELS:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {CAR_BRANDS} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function carBrandsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CAR_BRANDS:\n            return action.payload;\n        default:\n            return state\n    }\n}","import {RESPONSE} from \"../actions/DataActions\";\n\nconst initialState = [];\n\nexport function responseReducer(state = initialState, action) {\n    switch (action.type) {\n        case RESPONSE:\n            return action.payload;\n        default:\n            return state\n    }\n}","import { ORDERS } from \"../actions/DataActions\";\n\nconst initialState = {\n  orders: []\n};\n\nexport function ordersReducer(state = initialState, action) {\n  switch (action.type) {\n    case ORDERS:\n      return { ...state, orders: action.payload };\n    default:\n      return state;\n  }\n}\n","const initialState = [\n    {\n        id: 1,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n    {\n        id: 2,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n    {\n        id: 3,\n        name: 'Title',\n        description: 'Description',\n        address: 'address',\n        phone: 'phone',\n        comment: 'comment',\n        updated_at: new Date()\n    },\n];\n\nexport function stoReducer(state = initialState, action) {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\";\nimport { userReducer } from \"./user\";\nimport { storesReducer } from \"./stores\";\nimport { requestsReducer } from \"./requests\";\nimport { requestReducer } from \"./request\";\nimport { carsReducer } from \"./cars\";\nimport { carModelsReducer } from \"./carmodels\";\nimport { carBrandsReducer } from \"./carbrands\";\nimport { responseReducer } from \"./response\";\nimport { ordersReducer } from \"./orders\";\nimport { stoReducer } from \"./sto\";\n\nexport const rootReducer = combineReducers({\n  user: userReducer,\n  stores: storesReducer,\n  sto: stoReducer,\n  requests: requestsReducer,\n  request: requestReducer,\n  response: responseReducer,\n  orders: ordersReducer,\n  cars: carsReducer,\n  carbrands: carBrandsReducer,\n  carmodels: carModelsReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { rootReducer } from \"../reducers\";\n//import logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk /*, logger*/))\n);\n","import { get } from 'idb-keyval';\nexport const axios = require('axios');\n\naxios.defaults.baseURL = 'https://marshal.bh-app.ru/api';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nget('AUTH_TOKEN').then(AUTH_TOKEN => {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + AUTH_TOKEN;\n});\n\n\n","import { set } from \"idb-keyval\";\nimport { axios } from \"./init\";\n\nexport class getData {\n  data = async (type, payload = {}) => {\n    const url = \"/\" + type;\n    try {\n      let res = await axios.get(url, payload);\n      if (res.status === 200) {\n        set(type, res.data).then();\n        return res.data;\n      }\n      return undefined;\n    } catch (error) {\n      console.log(error.response);\n      return undefined;\n    }\n  };\n}\n","import { get } from \"idb-keyval\";\nimport { Detector } from \"react-detect-offline\";\nimport { getData } from \"../axios/getData\";\n\n// Load data from indexedDB to Store\nexport class initApplication {\n  init = async props => {\n    await get(\"user\").then(\n      value => value !== undefined && props.handleLogin(value)\n    );\n    // from internet\n    let detect = new Detector();\n    if (detect.state.online) {\n      await this.getDataFromDB(props);\n    } else {\n      await this.getDataFromLS();\n    }\n  };\n  getDataFromDB = async props => {\n    let get_data = new getData();\n    const userDetails = await get_data\n      .data(\"details\")\n      .then(value => value.success || {});\n    const shop = get_data\n      .data(\"user-shop\")\n      .then(value => value !== undefined && props.handleShop(value));\n    const categories = get_data\n      .data(\"categories\")\n      .then(value => value !== undefined && props.handleCategories(value));\n    const requests = get_data\n      .data(\"requests\")\n      .then(value => value !== undefined && props.handleRequests(value));\n    const carbrands = get_data\n      .data(\"carbrands\")\n      .then(value => value !== undefined && props.handleCarBrands(value));\n    const carmodels = get_data\n      .data(\"carmodels\")\n      .then(value => value !== undefined && props.handleCarModels(value));\n    const orders = get_data\n      .data(\"answers\", { params: { shop_id: userDetails.shop_id || 0 } })\n      .then(value => value !== undefined && props.handleOrders(value));\n\n    // wait all requests\n    await Promise.all([\n      shop,\n      categories,\n      requests,\n      carbrands,\n      carmodels,\n      orders\n    ]).then(function(values) {\n      console.log(values);\n    });\n  };\n  getDataFromLS = async props => {\n    const shop = get(\"shop\").then(\n      value => value !== undefined && props.handleShop(value)\n    );\n    const categories = get(\"categories\").then(\n      value => value !== undefined && props.handleCategories(value)\n    );\n    const requests = get(\"requests\").then(\n      value => value !== undefined && props.handleRequests(value)\n    );\n    const carbrands = get(\"carbrands\").then(\n      value => value !== undefined && props.handleCarBrands(value)\n    );\n    const carmodels = get(\"carmodels\").then(\n      value => value !== undefined && props.handleCarModels(value)\n    );\n    const orders = get(\"orders\").then(\n      value => value !== undefined && props.handleOrders(value)\n    );\n\n    // wait all requests\n    await Promise.all([\n      shop,\n      categories,\n      requests,\n      carbrands,\n      carmodels,\n      orders\n    ]).then(function(values) {\n      console.log(values);\n    });\n  };\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getData } from \"../../axios/getData\";\nimport { handleRequest, handleRequests } from \"../../actions/DataActions\";\n\nimport moment from \"moment\";\n\nimport { Detector } from \"react-detect-offline\";\nimport { get } from \"idb-keyval\";\nimport {\n  List,\n  ListItem,\n  SwipeoutActions,\n  SwipeoutButton,\n  Icon,\n  Block,\n  BlockTitle,\n  ListInput\n} from \"framework7-react\";\n\nconst getRequest = async (props, reqId) => {\n  let detect = new Detector();\n  if (await detect.state.online) {\n    let get_data = new getData();\n    await get_data\n      .data(\"request/\" + reqId)\n      .then(value => value !== undefined && props.handleRequest(value));\n  } else {\n    await get(\"request/\" + reqId).then(\n      value => value !== undefined && props.handleRequest(value)\n    );\n  }\n};\n\nconst getRequests = async (props, dateFrom, dateTo) => {\n  dateFrom = moment(dateFrom).format(\"YYYY-MM-DD\");\n  dateTo = moment(dateTo).format(\"YYYY-MM-DD\");\n  let get_data = new getData();\n  await get_data\n    .data(\"requests\", { params: { dateFrom, dateTo } })\n    .then(value => value !== undefined && props.handleRequests(value));\n};\n\nclass RequestsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateFrom: \"\",\n      dateTo: \"\"\n    };\n  }\n\n  answer_to_request(reqId) {\n    const app = this.$f7;\n    app.views.main.router.navigate(\"answer_to_request/\" + reqId + \"/\");\n  }\n\n  open_request(reqId) {\n    this.$f7.dialog.preloader(\"Получаем предложения...\");\n    getRequest(this.props, reqId).then(() => {\n      this.$f7.views.main.router.navigate(\"requests/\" + reqId + \"/\");\n      this.$f7.dialog.close();\n    });\n  }\n\n  get_category(cat_id) {\n    const cat = this.props.categories.find(x => x.id === cat_id);\n    return cat !== undefined ? cat.category : \"Без категории\";\n  }\n\n  handleDateChange = date => {\n    this.$f7.dialog.preloader(\"Получаем заявки...\");\n    this.setState({\n      dateFrom: date[0],\n      dateTo: date[1] || date[0]\n    });\n    getRequests(this.props, this.state.dateFrom, this.state.dateTo).then(() => {\n      this.$f7.dialog.close();\n    });\n  };\n\n  render() {\n    const { requests } = this.props;\n    return (\n      <React.Fragment>\n        <BlockTitle style={{ whiteSpace: \"initial\" }}>\n          Здесь отображаются заявки от покупателей на подбор автотоваров или\n          запчастей.\n        </BlockTitle>\n\n        <List noHairlinesMd>\n          <ListInput\n            type=\"datepicker\"\n            placeholder=\"Выберите диапазон\"\n            id=\"date-range\"\n            readonly\n            onCalendarChange={this.handleDateChange}\n            calendarParams={{ dateFormat: \"dd.mm.yyyy\", rangePicker: true }}\n          />\n        </List>\n\n        <List mediaList className={\"no-margin\"}>\n          {requests.length === 0 ? (\n            <Block>Нет открытых заявок...</Block>\n          ) : (\n            requests.map(item => {\n              return (\n                <ListItem\n                  key={item.id}\n                  swipeout\n                  onClick={() => this.open_request(item.id)}\n                  after={item.created_at.toLocaleString()}\n                  text={item.text}\n                  subtitle={`Ответов: ${item.answers_count}`}\n                >\n                  <span slot=\"title\">\n                    {/*<Icon\n                                        className={\"status-icon\"}\n                                        material={item.answers > 0 ? 'check_circle_outline' : 'access_time'}\n                                        color=\"blue\"\n                                    />*/}\n                    [{item.status.status}] {this.get_category(item.category_id)}\n                  </span>\n                  <SwipeoutActions left>\n                    <SwipeoutButton\n                      color=\"blue\"\n                      onClick={() => this.answer_to_request(item.id)}\n                    >\n                      <Icon material=\"reply\" /> Ответить\n                    </SwipeoutButton>\n                  </SwipeoutActions>\n                </ListItem>\n              );\n            })\n          )}\n        </List>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    requests: store.requests,\n    categories: store.stores.categories\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleRequest: request => dispatch(handleRequest(request)),\n    handleRequests: requests => dispatch(handleRequests(requests))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RequestsPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { List, BlockTitle, ListItem } from \"framework7-react\";\nimport { Detector } from \"react-detect-offline\";\nimport { getData } from \"../../axios/getData\";\nimport { handleResponse } from \"../../actions/DataActions\";\nimport { get } from \"idb-keyval\";\nimport moment from \"moment\";\n\nconst getResponse = async (props, resp_id) => {\n  let detect = new Detector();\n  if (await detect.state.online) {\n    let get_data = new getData();\n    await get_data\n      .data(\"answer/\" + resp_id)\n      .then(value => value !== undefined && props.handleResponse(value));\n  } else {\n    await get(\"answer/\" + resp_id).then(\n      value => value !== undefined && props.handleResponse(value)\n    );\n  }\n};\n\nclass OrdersPage extends React.Component {\n  open_response(resp_id) {\n    this.$f7.dialog.preloader(\"Загружаем предложение...\");\n    getResponse(this.props, resp_id).then(() => {\n      this.$f7.views.main.router.navigate(\n        \"/requests/response/\" + resp_id + \"/\"\n      );\n      this.$f7.dialog.close();\n    });\n  }\n\n  render() {\n    const { orders } = this.props;\n    return (\n      <React.Fragment>\n        <BlockTitle>Здесь будут запросы на которые вы ответили.</BlockTitle>\n        <List mediaList className={\"list-title\"}>\n          {orders.length > 0\n            ? orders.map(order => (\n                <ListItem\n                  key={\"order-\" + order.id}\n                  onClick={() => this.open_response(order.id)}\n                  swipeout\n                  after={moment(order.created_at).format(\"DD.MM.YYYY HH:mm\")}\n                  subtitle={order.user.name}\n                  text={\n                    (order.in_stock ? \"В наличии \" : \"\") +\n                    (order.original ? \"Оригинал\" : \"\")\n                  }\n                >\n                  <span slot=\"title\">\n                    <b>{order.price} Р.</b>\n                  </span>\n                </ListItem>\n              ))\n            : \"\"}\n        </List>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    orders: store.orders.orders\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleResponse: request => dispatch(handleResponse(request))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OrdersPage);\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport { set } from 'idb-keyval';\nimport {\n    List,\n    ListItem,\n    Icon,\n    SwipeoutActions,\n    SwipeoutButton,\n} from 'framework7-react';\n\nclass SettingsPage extends React.Component {\n\n    logout() {\n        set('user', undefined).then();\n        set('AUTH_TOKEN', undefined).then(() => {\n            // restart page\n            document.location.href='/';\n            //this.$f7.views.main.router.navigate('/');\n        });\n    }\n    //edit_user\n    edit_user() {\n        this.$f7.views.main.router.navigate('/edit_user/');\n    }\n\n    render() {\n        const {user} = this.props;\n        return (\n            <>\n                    {(user.id > 0)\n                        ?\n                        <List\n                            mediaList\n                            className={\"no-margin\"}\n                        >\n                            <ListItem\n                                subtitle={user.email}\n                                swipeout\n                            >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"account_circle\" color=\"main\"/> {user.name}\n                                </span>\n                                <SwipeoutActions right>\n                                    <SwipeoutButton color=\"orange\" onClick={() => this.logout()}>\n                                        <Icon material=\"exit_to_app\"/> Выйти\n                                    </SwipeoutButton>\n                                </SwipeoutActions>\n                                <SwipeoutActions left>\n                                    <SwipeoutButton color=\"blue\" onClick={() => this.edit_user()}>\n                                        <Icon material=\"edit\"/> Редактировать\n                                    </SwipeoutButton>\n                                </SwipeoutActions>\n                            </ListItem>\n                            <ListItem\n                                button\n                                link=\"edit_store/0/\"\n                                subtitle=\"Ваш магазин\"\n                            >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"store\" color=\"main\"/> Магазин\n                                </span>\n                            </ListItem>\n                        </List>\n                        :\n                        <List\n                            mediaList\n                            className={\"no-margin\"}\n                        >\n                            <ListItem\n                                button\n                                link=\"login/\"\n                                subtitle=\"После регистрации станут доступны дополнительные возможности\"\n                            >\n                                <span slot=\"title\">\n                                    <Icon className={\"status-icon\"} material=\"account_circle\" color=\"main\"/> Вход\n                                </span>\n                            </ListItem>\n                        </List>\n                    }\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nexport default connect(mapStateToProps)(SettingsPage)","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Offline } from \"react-detect-offline\";\nimport { initApplication } from \"../initApp\";\n\nimport {\n  Page,\n  Navbar,\n  NavRight,\n  Link,\n  Toolbar,\n  Tabs,\n  Tab\n} from \"framework7-react\";\n\nimport { handleLogin } from \"../../actions/UserActions\";\nimport {\n  handleCategories,\n  handleShop,\n  handleRequests,\n  handleCarBrands,\n  handleCarModels,\n  handleOrders\n} from \"../../actions/DataActions\";\n\nimport RequestsPage from \"./RequestsPage\";\nimport OrdersPage from \"./OrdersPage\";\nimport SettingsPage from \"./SettingsPage\";\n\nclass HomePage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"Заявки\",\n      loaded: false\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.state.loaded) {\n      this.$f7.dialog.preloader(\"Загрузка...\");\n      const initApp = new initApplication();\n      await initApp.init(this.props);\n      this.setState({ loaded: true });\n      this.$f7.dialog.close();\n    }\n  }\n\n  chgTitle = title => {\n    this.setState({ title: title });\n  };\n\n  render() {\n    const { title } = this.state;\n    return (\n      <Page hideToolbarOnScroll pageContent={false}>\n        <Navbar\n          color=\"white\"\n          textColor=\"white\"\n          bgColor=\"main\"\n          title={\"МС\" + (title !== \"\" ? \" / \" + title : \"\")}\n        >\n          <NavRight>\n            <Offline>\n              <Link iconMd=\"material:signal_wifi_off\" />\n            </Offline>\n          </NavRight>\n        </Navbar>\n        <Toolbar bottom tabbar labels color=\"main\">\n          <Link\n            tabLink=\"#requests\"\n            onClick={() => this.chgTitle(\"Заявки\")}\n            tabLinkActive\n            text=\"Заявки\"\n            iconMd=\"material:important_devices\"\n          />\n          <Link\n            tabLink=\"#orders\"\n            onClick={() => this.chgTitle(\"Заказы\")}\n            text=\"Заказы\"\n            iconMd=\"material:list\"\n          />\n          <Link\n            tabLink=\"#person\"\n            onClick={() => this.chgTitle(\"Личный Кабинет\")}\n            text=\"Кабинет\"\n            iconMd=\"material:person\"\n          />\n        </Toolbar>\n\n        <Tabs animated>\n          <Tab id=\"requests\" className=\"page-content\" tabActive>\n            <RequestsPage />\n          </Tab>\n          <Tab id=\"orders\" className=\"page-content\">\n            <OrdersPage />\n          </Tab>\n          <Tab id=\"person\" className=\"page-content\">\n            <SettingsPage />\n          </Tab>\n        </Tabs>\n      </Page>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    user: store.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLogin: user => dispatch(handleLogin(user)),\n    handleShop: shop => dispatch(handleShop(shop)),\n    handleCategories: categories => dispatch(handleCategories(categories)),\n    handleRequests: requests => dispatch(handleRequests(requests)),\n    handleCarBrands: brands => dispatch(handleCarBrands(brands)),\n    handleCarModels: models => dispatch(handleCarModels(models)),\n    handleOrders: orders => dispatch(handleOrders(orders))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomePage);\n","import React, {Component} from 'react';\nimport {Page, Navbar, Block, Link} from 'framework7-react';\n\nexport default class RequestPage extends Component {\n    render() {\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"red\"\n                    title=\"Заявка\"\n                    backLink=\"Back\"\n                />\n                <Block strong>\n                    <ul>\n                        {Object.keys(this.$f7route.params).map(key => (\n                            <li key={key}><b>{key}:</b> {this.$f7route.params[key]}</li>\n                        ))}\n                    </ul>\n                </Block>\n                <Block strong>\n                    <Link onClick={() => this.$f7router.back()}>Назад</Link>\n                </Block>\n            </Page>\n        );\n    }\n}","import {axios} from './init'\n\n\nexport class setData {\n    data = async (type, payload) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.post(url, payload);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n    dataPut = async (type, payload) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.put(url, payload);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n    dataDelete = async (type) => {\n        const url = '/' + type;\n        try {\n            let res = await axios.delete(url);\n            if (res.status === 200) {\n                return res.data;\n            }\n            return undefined;\n        } catch (error) {\n            console.log(error.response);\n            return undefined;\n        }\n    };\n}","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n    ListItem,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\n\nimport {setData} from \"../../axios/setData\";\nimport {handleAddCar, handleUpdateCar} from \"../../actions/DataActions\";\n\nclass NewCarPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            car_brand_id: 1,\n            car_model_id: 1,\n            car_id: 0,\n            vin: '',\n            years: [],\n            year: 2019,\n        }\n    }\n\n    handleBrand = (brand_id) => {\n        // find and set first available model\n        const models = this.props.models.filter(x => x.car_brand_id === Number(brand_id));\n        this.setState({ car_brand_id: Number(brand_id) }, () => {\n            this.modelSelectComponent.f7SmartSelect.setValue(models[0].id);\n            this.handleModel(models[0].id);\n        });\n    };\n    handleModel = (model_id) => {\n        this.setState({ car_model_id: Number(model_id) });\n    };\n    handleYear = (year) => {\n        this.setState({ year: Number(year) });\n    };\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    sendCar = (car_id) => {\n        // prepare payload\n        let req_data = {...this.state};\n        delete req_data.years;\n        delete req_data.car_id;\n        req_data[\"user_id\"] = this.props.user.id;\n\n        const set_data = new setData();\n\n        if (car_id > 0) {\n            set_data.dataPut('car-update/'+car_id, req_data).then(() => {\n                req_data[\"id\"] = car_id;\n                this.props.handleUpdateCar(req_data);\n                this.updCarSuccess.open();\n            });\n        }else {\n            set_data.data('car-add', req_data).then(data => {\n                this.props.handleAddCar(data.result);\n                this.addCarSuccess.open();\n            });\n        }\n\n        this.$f7.views.main.router.navigate('/cars/');\n    };\n\n\n    addCarSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Автомобиль добавлен',\n        text: 'Теперь вы можете использовать его в запросах.',\n        closeTimeout: 3000,\n    });\n\n    updCarSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Автомобиль отредактирован',\n        text: 'Теперь вы можете использовать новые данные.',\n        closeTimeout: 3000,\n    });\n\n    componentDidMount() {\n        let years = [];\n        for (let i = 2019; i > 1900; i--) {\n            years.push(i)\n        }\n        let year = years[0];\n\n        const initData = {years: years};\n        const car_id = Number(this.$f7route.params.carId);\n\n        if (car_id > 0) {\n            const car = this.props.cars.find(car => car.id === car_id);\n\n            // Set data to local state\n            initData.car_id = car.id;\n            initData.car_brand_id = car.car_brand_id;\n            initData.car_model_id = car.car_model_id;\n            initData.vin = car.vin;\n            initData.year = car.year;\n\n            this.setState(initData, () => {\n                // Set data to fields\n                this.brandSelectComponent.f7SmartSelect.setValue(car.car_brand_id);\n                this.modelSelectComponent.f7SmartSelect.setValue(car.car_model_id);\n                this.yearSelectComponent.f7SmartSelect.setValue(car.year);\n            });\n\n        } else{\n            this.setState(initData, () => {\n                this.yearSelectComponent.f7SmartSelect.setValue(year);\n            });\n        }\n    }\n\n    render() {\n        const {brands, models} = this.props;\n        const {car_id, car_brand_id, years, vin} = this.state;\n        const self = this;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={car_id > 0 ? \"Редактировать машину\" : \"Добавление машины\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >Здесь вы можете добавить ваш автомобиль(и) для более быстрого подбора услуг.</BlockTitle>\n                <List>\n                    <ListItem\n                        title=\"Марка автомобиля\"\n                        smartSelect\n                        ref={(el) => {this.brandSelectComponent = el}}\n                        smartSelectParams={{\n                            openIn: 'popup',\n                            searchbar: true,\n                            searchbarPlaceholder: 'Найти марку',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleBrand(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {brands.map(brand => (\n                                <option\n                                    key={'brand_' + brand.id}\n                                    value={brand.id}\n                                >{brand.car_brand}</option>\n                            ))}\n                        </select>\n                    </ListItem>\n                    <ListItem\n                        title=\"Модель\"\n                        smartSelect\n                        ref={(el) => {this.modelSelectComponent = el}}\n                        smartSelectParams={{\n                            openIn: 'popup',\n                            searchbar: true,\n                            searchbarPlaceholder: 'Найти модель',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleModel(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {models.filter(x => x.car_brand_id === car_brand_id).map(model => (\n                                <option\n                                    key={'model_' + model.id}\n                                    value={model.id}\n                                >{model.car_model}</option>\n                            ))}\n                        </select>\n                    </ListItem>\n                    <ListItem\n                        title=\"Год выпуска\"\n                        ref={(el) => {this.yearSelectComponent = el}}\n                        smartSelect\n                        smartSelectParams={{\n                            openIn: 'sheet',\n                            closeOnSelect: true,\n                            on: {\n                                closed: function () {\n                                    self.handleYear(this.getValue())\n                                }\n                            }\n                        }}\n                    >\n                        <select>\n                            {years.map(year => (<option key={'year_' + year} value={year}>{year}</option>))}\n                        </select>\n                    </ListItem>\n                    <ListInput\n                        label=\"VIN\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Введите VIN номер автомобиля\"\n                        value={vin}\n                        onChange={(event) => this.handleData('vin', event.target.value)}\n                    />\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.sendCar(car_id)}\n                    >{car_id > 0 ? 'Изменить' : 'Добавить'}</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n        cars: store.cars,\n        brands: store.carbrands,\n        models: store.carmodels,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleAddCar: data => dispatch(handleAddCar(data)),\n        handleUpdateCar: data => dispatch(handleUpdateCar(data)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCarPage)","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n    ListItem,\n    Toggle,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\n\nimport {setData} from \"../../axios/setData\";\n\n/*import {\n    handleAddRequests,\n    handleUpdateRequest,\n   // handleDeleteRequest\n} from \"../../actions/DataActions\";*/\n\n/*\n        'request_id',\n        'status_id',\n        'shop_id',\n        'user_id',\n        'price',\n        'is_new',\n        'description'\n */\nclass NewResponsePage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            request_id: 0,\n            status_id: 1,\n            shop_id: 0,\n            user_id: 0,\n            price: '',\n            is_new: true,\n            description: '',\n            request: {created_at: new Date(), answers_count: 0, status: ''},\n        }\n    }\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    sendAnswer = () => {\n        let req_data = {...this.state};\n        delete req_data.request;\n        const set_data = new setData();\n        set_data.data('answer-add', req_data).then(data => {\n            console.log(data.result);\n            //this.props.handleAddRequests(data.result);\n            this.addRequestSuccess.open();\n        });\n        this.$f7.views.main.router.navigate('/');\n    };\n\n    addRequestSuccess = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Заявка добавлена',\n        text: 'В ближайшее время вам ответят.',\n        closeTimeout: 3000,\n    });\n\n    get_category(cat_id) {\n        const cat = this.props.categories.find(x => x.id === cat_id);\n        return cat !== undefined ? cat.category : \"Без категории\"\n    }\n\n    componentDidMount() {\n        const initData = {};\n        const req_id = Number(this.$f7route.params.reqId);\n        if (req_id > 0) {\n            const request = this.props.requests.find(request => request.id === req_id);\n            // Set data to local state\n            initData.request_id = req_id;\n            initData.shop_id = this.props.user.shop_id;\n            initData.user_id = this.props.user.id;\n            initData.request = request;\n            this.setState(initData);\n        }\n    }\n\n    render() {\n        const {price, description, is_new, request} = this.state;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={\"Ответ на запрос\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <List\n                    mediaList\n                    className={\"no-margin list-title\"}\n                >\n                    <ListItem\n                        swipeout\n                        after={request.created_at.toLocaleString()}\n                        subtitle={`Ответов: ${request.answers_count || 0}`}\n                        text={request.text}\n                    >\n                        <span slot=\"title\">\n                            {/*<Icon className={\"status-icon\"} material=\"access_time\" color=\"blue\"/>*/}\n                            [{request.status.status}] {this.get_category(request.category_id)}\n                        </span>\n                    </ListItem>\n                </List>\n                <List\n                    className={\"list-with-header\"}>\n                    <ListItem>\n                        <BlockTitle\n                            style={{whiteSpace: 'initial'}}\n                        >Здесь вы можете ответить на заявку покупателя.</BlockTitle>\n                    </ListItem>\n                    <ListItem>\n                        <span>Товар новый</span>\n                        <Toggle defaultChecked={is_new}\n                                onChange={() => this.handleData('is_new', !is_new)}\n                        />\n                    </ListItem>\n                    <ListInput\n                        outline\n                        label=\"Цена\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Стоимость товара/услуги\"\n                        value={price}\n                        onChange={(event) => this.handleData('price', event.target.value)}\n                    />\n                    <ListInput\n                        outline\n                        label=\"Описание\"\n                        floatingLabel\n                        type=\"textarea\"\n                        placeholder=\"Дополнительная информация о товаре/предложении...\"\n                        value={description}\n                        onChange={(event) => this.handleData('description', event.target.value)}\n                    />\n\n\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.sendAnswer()}\n                    >Отправить ответ</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n        cars: store.cars,\n        models: store.carmodels,\n        brands: store.carbrands,\n        requests: store.requests,\n        shops: store.stores.shops,\n        categories: store.stores.categories,\n    }\n};\n/*\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleAddRequests: data => dispatch(handleAddRequests(data)),\n        handleUpdateRequest: data => dispatch(handleUpdateRequest(data)),\n    }\n};\n*/\n\nexport default connect(mapStateToProps/*, mapDispatchToProps*/)(NewResponsePage)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Detector } from \"react-detect-offline\";\nimport { getData } from \"../../axios/getData\";\nimport { handleResponse } from \"../../actions/DataActions\";\nimport { get } from \"idb-keyval\";\n\nimport {\n  Page,\n  Navbar,\n  List,\n  Icon,\n  ListItem,\n  Block,\n  Toolbar,\n  Button\n} from \"framework7-react\";\n\nconst getResponse = async (props, resp_id) => {\n  let detect = new Detector();\n  if (await detect.state.online) {\n    let get_data = new getData();\n    await get_data\n      .data(\"answer/\" + resp_id)\n      .then(value => value !== undefined && props.handleResponse(value));\n  } else {\n    await get(\"answer/\" + resp_id).then(\n      value => value !== undefined && props.handleResponse(value)\n    );\n  }\n};\n\nclass ResponsesPage extends Component {\n  get_category(cat_id) {\n    const cat = this.props.categories.find(x => x.id === cat_id);\n    return cat !== undefined ? cat.category : \"Без категории\";\n  }\n\n  get_shop(shop_id) {\n    const shop = this.props.shops.find(x => x.id === shop_id);\n    return shop !== undefined ? shop.name : \"Без категории\";\n  }\n\n  open_response(resp_id) {\n    this.$f7.dialog.preloader(\"Загружаем предложение...\");\n    getResponse(this.props, resp_id).then(() => {\n      this.$f7.views.main.router.navigate(\n        \"/requests/response/\" + resp_id + \"/\"\n      );\n      this.$f7.dialog.close();\n    });\n  }\n\n  newResponse() {\n    const reqId = this.props.request.id;\n    const app = this.$f7;\n    app.views.main.router.navigate(`/response_to_request/${reqId}/`);\n  }\n\n  render() {\n    const { request } = this.props;\n    return (\n      <Page>\n        <Navbar\n          color=\"white\"\n          textColor=\"white\"\n          bgColor=\"main\"\n          title=\"Предложения\"\n          backLink=\"Back\"\n        />\n        <Toolbar position={\"bottom\"}>\n          <Button\n            fill\n            onClick={() => this.newResponse()}\n            className={\"btn-new-response\"}\n          >\n            Ответить на заявку\n          </Button>\n        </Toolbar>\n        <List mediaList className={\"no-margin list-title\"}>\n          <ListItem\n            swipeout\n            after={request.created_at.toLocaleString()}\n            subtitle={`Ответов: ${request.answers.length || 0}`}\n            text={request.text}\n          >\n            <span slot=\"title\">\n              {/*<Icon className={\"status-icon\"} material=\"access_time\" color=\"blue\"/>*/}\n              [{request.status.status}] {this.get_category(request.category_id)}\n            </span>\n          </ListItem>\n        </List>\n\n        <List mediaList noHairlinesMd className={\"list-with-header\"}>\n          {/*\ncreated_at: \"2019-04-09 00:00:00\"\ndescription: \"We have something \"\nid: 1\nis_new: true\nprice: 200\nrequest_id: 1\nshop_id: 7\nstatus_id: 1\nupdated_at: \"2019-04-09 00:00:00\"\nupdated_by: 1\nuser_id: 1\n*/}\n          {request.answers.length === 0 ? (\n            <Block>На запрос пока нет ответов...</Block>\n          ) : (\n            request.answers.map(item => {\n              return (\n                <ListItem\n                  key={item.id}\n                  onClick={() => this.open_response(item.id)}\n                  after={item.created_at.toLocaleString()}\n                  subtitle={item.user.name}\n                  text={item.description}\n                >\n                  <b slot=\"title\">\n                    {item.is_new ? (\n                      <Icon\n                        className={\"status-icon\"}\n                        material=\"fiber_new\"\n                        color=\"green\"\n                      />\n                    ) : null}\n                    {item.price} Р.\n                  </b>\n                </ListItem>\n              );\n            })\n          )}\n        </List>\n      </Page>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    request: store.request[0],\n    categories: store.stores.categories,\n    shop: store.stores.shop\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleResponse: request => dispatch(handleResponse(request))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResponsesPage);\n","import React from \"react\";\nimport ImageUploader from \"react-images-upload\";\nimport { connect } from \"react-redux\";\nimport {\n  Page,\n  Messages,\n  // MessagesTitle,\n  Messagebar,\n  Link,\n  Message,\n  MessagebarAttachment,\n  MessagebarAttachments,\n  MessagebarSheet,\n  MessagebarSheetImage,\n  Icon,\n  List,\n  ListItem,\n  Navbar,\n  Subnavbar\n  // NavRight\n} from \"framework7-react\";\nimport { Detector } from \"react-detect-offline\";\nimport { getData } from \"../../axios/getData\";\nimport { setData } from \"../../axios/setData\";\nimport { get } from \"idb-keyval\";\nimport { handleResponse } from \"../../actions/DataActions\";\n\nconst _ = require(\"lodash/core\");\n\nconst getMessages = async (props, answer_id, loading, sendingData) => {\n  if (!sendingData) {\n    let detect = new Detector();\n    loading.show(\"yellow\");\n    if (await detect.state.online) {\n      let get_data = new getData();\n      await get_data\n        .data(\"answer/\" + answer_id)\n        .then(value => value !== undefined && props.handleResponse(value));\n    } else {\n      await get(\"answer/\" + answer_id).then(\n        value => value !== undefined && props.handleResponse(value)\n      );\n    }\n    setTimeout(() => {\n      loading.hide();\n    }, 500);\n  }\n};\n\nconst sendMessage = async (\n  props,\n  payload,\n  notificationOffline,\n  handleSendingData\n) => {\n  handleSendingData(true);\n  let detect = new Detector();\n  if (await detect.state.online) {\n    let set_data = new setData();\n    await payload.forEach(async data => {\n      await set_data.data(\"message-add\", data);\n    });\n  } else {\n    notificationOffline.open();\n  }\n  handleSendingData(false);\n};\n\nclass respMessages extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      messageValue: \"\",\n      attachments: [],\n      sheetVisible: false,\n      typingMessage: null,\n      messages: this.props.response.messages,\n      messagesData: [\n        {\n          type: \"received\",\n          message:\n            \"Здравствуйте! 👋<br/>Здесь вы можете уточнить детали заказа.\",\n          date: new Date()\n        }\n      ],\n      images: [],\n      responseInProgress: false,\n      sendingData: false\n    };\n  }\n\n  answer_id = this.props.response.id;\n  user = this.props.user;\n\n  notificationOffline = this.$f7.notification.create({\n    icon: '<i class=\"icon marshal-icon\"> </i>',\n    title: \"Маршал Сервис\",\n    subtitle: \"Ошибка подключения\",\n    text: \"Попробуйте повторить запрос позже.\",\n    closeButton: true\n  });\n\n  loading = this.$f7.progressbar;\n\n  onDrop(pictureFiles, pictureDataURLs) {\n    this.setState({\n      images: pictureDataURLs\n      // images: this.state.images.concat(pictureDataURLs),\n    });\n  }\n\n  render() {\n    const { response } = this.props;\n    return (\n      <Page className={\"messages-block\"}>\n        <Navbar\n          color=\"white\"\n          textColor=\"white\"\n          bgColor=\"main\"\n          title=\"Предложение\"\n          backLink=\"Back\"\n        >\n          <Subnavbar inner={false} className={\"no-margin\"}>\n            <List mediaList className={\"no-margin list-title\"}>\n              <ListItem\n                key={response.id}\n                //onClick={() => this.open_response(response.id)}\n                after={response.created_at.toLocaleString()}\n                subtitle={response.user.name}\n                text={response.description}\n              >\n                <b slot=\"title\">\n                  {response.is_new ? (\n                    <Icon\n                      className={\"status-icon\"}\n                      material=\"fiber_new\"\n                      color=\"green\"\n                    />\n                  ) : null}\n                  {response.price}\n                </b>\n              </ListItem>\n            </List>\n          </Subnavbar>\n        </Navbar>\n        <Messagebar\n          placeholder={this.placeholder}\n          ref={el => {\n            this.messagebarComponent = el;\n          }}\n          attachmentsVisible={this.attachmentsVisible}\n          sheetVisible={this.state.sheetVisible}\n          change={() => {\n            this.setState({ sheetVisible: !this.state.sheetVisible });\n          }}\n          value={this.state.messageValue}\n          onInput={this.handleMessage.bind(this)}\n        >\n          <Link\n            iconIos=\"f7:camera_fill\"\n            iconMd=\"material:camera_alt\"\n            slot=\"inner-start\"\n            onClick={() => {\n              this.setState({ sheetVisible: !this.state.sheetVisible });\n            }}\n          />\n          <Link\n            iconIos=\"f7:arrow_up_fill\"\n            iconMd=\"material:send\"\n            slot=\"inner-end\"\n            onClick={this.sendMessage.bind(this)}\n          />\n          <MessagebarAttachments>\n            {this.state.attachments.map((image, index) => (\n              <MessagebarAttachment\n                key={index}\n                image={image}\n                onAttachmentDelete={() => this.deleteAttachment(image)}\n              />\n            ))}\n          </MessagebarAttachments>\n          <MessagebarSheet>\n            {this.state.images.map((image, index) => (\n              <MessagebarSheetImage\n                key={index}\n                image={image}\n                checked={this.state.attachments.indexOf(image) >= 0}\n                onChange={this.handleAttachment.bind(this)}\n              />\n            ))}\n            <>\n              <ImageUploader\n                slot=\"inner-start\"\n                withIcon={false}\n                onChange={this.onDrop.bind(this)}\n                imgExtension={[\".jpg\", \".jpeg\", \".gif\", \".png\", \".gif\"]}\n                maxFileSize={5242880}\n                buttonText={\"Добавить фото\"}\n                onClick={() => {\n                  this.setState({ sheetVisible: true });\n                }}\n              />\n            </>\n          </MessagebarSheet>\n        </Messagebar>\n\n        <Messages\n          className={\"list-with-header\"}\n          ref={el => {\n            this.messagesComponent = el;\n          }}\n          scrollMessages={false}\n        >\n          {/*<MessagesTitle><b>Sunday, Feb 9,</b> 12:58</MessagesTitle>*/}\n\n          {this.state.messagesData.map((message, index) => (\n            <Message\n              key={index}\n              type={message.type}\n              image={message.attachment}\n              name={message.name}\n              avatar={message.avatar}\n              footer={message.date.toLocaleString()}\n              first={this.isFirstMessage(message, index)}\n              last={this.isLastMessage(message, index)}\n              tail={this.isTailMessage(message, index)}\n            >\n              {message.message && (\n                <span\n                  slot=\"text\"\n                  dangerouslySetInnerHTML={{ __html: message.message }}\n                />\n              )}\n              {/*{message.attachment && (\n                                <span slot=\"image\">\n                                    <img src={message.attachment} className={'lazy'}/>\n                                </span>\n                            )}*/}\n            </Message>\n          ))}\n          {this.state.typingMessage && (\n            <Message\n              type=\"received\"\n              typing={true}\n              first={true}\n              last={true}\n              tail={true}\n              header={`${this.state.typingMessage.name} is typing`}\n              avatar={this.state.typingMessage.avatar}\n            />\n          )}\n        </Messages>\n      </Page>\n    );\n  }\n\n  get attachmentsVisible() {\n    const self = this;\n    return self.state.attachments.length > 0;\n  }\n  get placeholder() {\n    const self = this;\n    return self.state.attachments.length > 0\n      ? \"Добавьте сообщение или отправьте\"\n      : \"Сообщение\";\n  }\n  get_shop(shop_id) {\n    const shop = this.props.shops.find(x => x.id === shop_id);\n    return shop !== undefined ? shop.name : \"Без категории\";\n  }\n  updateMessages() {\n    const self = this;\n    const messages = self.props.response.messages;\n    if (self.props.response.messages.length) {\n      const messagesData = messages.map(item => {\n        return {\n          name: item.user.name,\n          type: item.user_id === self.props.user.id ? \"sent\" : \"received\",\n          message: item.message,\n          attachment: item.attachment,\n          date: item.updated_at\n        };\n      });\n      self.setState({ messages: messages, messagesData: messagesData });\n    }\n  }\n\n  // Обновляем сообщения, только если что-то изменилось\n  componentDidUpdate() {\n    const oldData = this.state.messages;\n    const newData = this.props.response.messages;\n    if (!_.isEqual(newData, oldData)) {\n      this.updateMessages();\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!_.isEqual(nextProps.response.messages, prevState.messages)) {\n      return { response: nextProps.response };\n    } else return null;\n  }\n\n  componentDidMount() {\n    const self = this;\n    this.updateMessages();\n    self.$f7ready(() => {\n      self.messagebar = self.messagebarComponent.f7Messagebar;\n      self.messages = self.messagesComponent.f7Messages;\n    });\n\n    this.intervalId = setInterval(\n      () =>\n        getMessages(\n          self.props,\n          self.answer_id,\n          self.loading,\n          self.state.sendingData\n        ),\n      5000\n    );\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n  isFirstMessage(message, index) {\n    const self = this;\n    const previousMessage = self.state.messagesData[index - 1];\n    if (message.isTitle) return false;\n    return (\n      !previousMessage ||\n      previousMessage.type !== message.type ||\n      previousMessage.name !== message.name\n    );\n  }\n  isLastMessage(message, index) {\n    const self = this;\n    const nextMessage = self.state.messagesData[index + 1];\n    if (message.isTitle) return false;\n    return (\n      !nextMessage ||\n      nextMessage.type !== message.type ||\n      nextMessage.name !== message.name\n    );\n  }\n  isTailMessage(message, index) {\n    const self = this;\n    const nextMessage = self.state.messagesData[index + 1];\n    if (message.isTitle) return false;\n    return (\n      !nextMessage ||\n      nextMessage.type !== message.type ||\n      nextMessage.name !== message.name\n    );\n  }\n  deleteAttachment(image) {\n    const self = this;\n    const attachments = self.state.attachments;\n    const index = attachments.indexOf(image);\n    attachments.splice(index, 1);\n    self.setState({ attachments });\n  }\n  handleAttachment(e) {\n    const self = this;\n    const attachments = self.state.attachments;\n    const index = self\n      .$$(e.target)\n      .parents(\"label.checkbox\")\n      .index();\n    const image = self.state.images[index];\n    if (e.target.checked) {\n      // Add to attachments\n      attachments.unshift(image);\n    } else {\n      // Remove from attachments\n      attachments.splice(attachments.indexOf(image), 1);\n    }\n    self.setState({ attachments });\n  }\n\n  handleMessage() {\n    const self = this;\n    let text = self.messagebar.$textareaEl.val();\n    self.setState({ messageValue: text });\n  }\n  sendMessage() {\n    const self = this;\n    const text = self.messagebar\n      .getValue()\n      .replace(/\\n/g, \"<br>\")\n      .trim();\n    const messagesToSend = [];\n    self.state.attachments.forEach(attachment => {\n      messagesToSend.push({\n        answer_id: self.answer_id,\n        user_id: self.user.id,\n        name: self.user.name,\n        message: text.trim().length ? text : \"&nbsp;\",\n        attachment: attachment,\n        date: new Date()\n      });\n    });\n    if (text.trim().length && messagesToSend.length === 0) {\n      messagesToSend.push({\n        answer_id: self.answer_id,\n        user_id: self.user.id,\n        name: self.user.name,\n        message: text,\n        attachment: \"\",\n        date: new Date()\n      });\n    }\n    if (messagesToSend.length === 0) {\n      return;\n    }\n\n    self.setState({\n      messageValue: \"\",\n      // Reset attachments\n      attachments: [],\n      // Hide sheet\n      sheetVisible: false,\n      // Send message\n      messagesData: [...self.state.messagesData, ...messagesToSend]\n    });\n\n    sendMessage(\n      this.props,\n      messagesToSend,\n      this.notificationOffline,\n      this.handleSendingData\n    ).then(() => {\n      self.messagebar.clear();\n    });\n\n    // Focus area\n    if (text.length) self.messagebar.focus();\n    /*\n                // Mock response\n                if (self.state.responseInProgress) return;\n                self.setState({\n                    responseInProgress: true,\n                });\n                */\n  }\n\n  handleSendingData = value => {\n    this.setState({ sendingData: value });\n  };\n}\n\nconst mapStateToProps = store => {\n  return {\n    response: store.response[0],\n    shop: store.stores.shop,\n    user: store.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleResponse: request => dispatch(handleResponse(request))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(respMessages);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport {\n    Page,\n    Navbar,\n    List,\n    Subnavbar,\n    Searchbar,\n    Block,\n    ListItem,\n    Link,\n    NavRight\n} from 'framework7-react';\n\nclass ShopsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            vlData: {\n                items: [],\n            },\n            selectedShops: [],\n        };\n    }\n\n    searchAll = (query, items) => {\n        const found = [];\n        for (let i = 0; i < items.length; i += 1) {\n            if (items[i].name.toLowerCase().indexOf(query.toLowerCase()) >= 0 || query.trim() === '') found.push(i);\n        }\n        return found; // return array with mathced indexes\n    };\n\n    renderExternal(vl, vlData) {\n        this.setState({ vlData });\n    }\n\n    handleToggle = (item) => {\n        this.setState({selectedShops: [item.id]});\n        /*\n        let selectedShops = this.state.selectedShops;\n        item.checked = (item.hasOwnProperty('checked')) ? !item.checked : true;\n        if (item.checked) {\n            selectedShops.push(item.id);\n        } else {\n            selectedShops = selectedShops.filter(x => x !== item.id);\n        }\n        this.setState({selectedShops: selectedShops});\n        */\n    };\n\n    setShops = () => {\n        this.props.handleShops(this.state.selectedShops);\n        this.$f7router.back();\n    };\n\n    componentDidMount() {\n        const {shops, selected_shops} = this.props;\n        this.setState({selectedShops: [...selected_shops]});\n        shops.forEach((item) => {\n            item.checked = [...selected_shops].indexOf(item.id) !== -1;\n        })\n    }\n\n    render() {\n        const {shops} = this.props;\n        const {vlData, selectedShops} = this.state;\n        return (\n            <Page\n                className=\"stores-list\">\n                <Navbar title=\"Список магазинов\"\n                        backLink=\"Back\"\n                        bgColor=\"main\"\n                        textColor=\"white\"\n                        color=\"white\"\n                >\n                    <NavRight>\n                        <Link iconMd=\"material:done\" onClick={() => this.setShops()}/>\n                    </NavRight>\n                    <Subnavbar inner={false} className={\"search-bar\"}>\n                        <Searchbar\n                            searchContainer=\".virtual-list\"\n                            searchItem=\"li\"\n                            searchIn=\".item-title\"\n                            placeholder=\"Поиск\"\n                        />\n                    </Subnavbar>\n                </Navbar>\n                <Block>\n                    <p>Здесь вы можете выбрать в какой магазин хотите отправить запрос</p>\n                </Block>\n                <List className=\"searchbar-not-found\">\n                    <ListItem title=\"Магазины не найдены...\"/>\n                </List>\n                <List\n                    className=\"searchbar-found\"\n                    medialList\n                    virtualList\n                    virtualListParams={\n                        {\n                            items: shops,\n                            searchAll: this.searchAll,\n                            renderExternal: this.renderExternal.bind(this),\n                            height: this.$theme.ios ? 63 : 73\n                        }\n                    }\n                >\n                    <ul>\n                        {vlData.items.map((item, index) => (\n                            <ListItem\n                                key={index}\n                                mediaItem\n                                radio\n                                checked={selectedShops.indexOf(item.id) !== -1 /*item.checked*/}\n                                onClick={() => this.handleToggle(item)}\n                                title={item.name}\n                                subtitle={item.address}\n                                after={item.phone}\n                                style={{top: `${vlData.topPosition}px`}}\n                            />\n                        ))}\n                    </ul>\n                </List>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        shops: store.stores.shops,\n    }\n};\n\nexport default connect(mapStateToProps)(ShopsList)","import { set, get } from 'idb-keyval';\nimport { axios } from './init'\n\n\nexport class authorisation {\n\n    login = async (...args) => {\n        const url = '/login';\n        const payload = {\n            email: args[0],\n            password: args[1],\n            application: 'marshal'\n        };\n        let res = 'test';\n        await get('AUTH_TOKEN').then( async value => {\n            if (value === undefined) {\n                try {\n                    let response = await axios.post(url, payload);\n                    let AUTH_TOKEN = response.data.access_token;\n                    axios.defaults.headers.common['Authorization'] = 'Bearer ' + AUTH_TOKEN;\n                    set('AUTH_TOKEN', AUTH_TOKEN).then();\n                    res = await this.user_details();\n\n                } catch (error) {\n                    res = error.response;\n                }\n            }else{\n                res = await this.user_details();\n                console.log(res);\n            }\n        });\n        return res;\n    };\n\n    user_details = async () => {\n        const url = '/details';\n        const payload = {};\n        try {\n            return await axios.get(url, payload);\n        } catch (error) {\n            return error.response;\n        }\n    }\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    Page,\n    List,\n    ListInput,\n    Button,\n    BlockFooter,\n    Link,\n    LoginScreenTitle, Navbar\n} from 'framework7-react';\n\nimport { authorisation } from '../../axios/login'\nimport { handleLogin } from '../../actions/UserActions'\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputLogin: '',\n            inputPassword: '',\n        };\n    }\n\n    authError = this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Ошибка авторизации',\n        text: 'Проверьте имя пользователя и пароль.',\n        closeButton: true,\n    });\n\n    authSuccess = (name) => this.$f7.notification.create({\n        icon: '<i class=\"icon marshal-icon\"> </i>',\n        title: 'Маршал Сервис',\n        subtitle: 'Добро пожаловать ' + name + '!',\n        closeTimeout: 3000,\n    });\n\n    handleOnChange = prop => event => {\n      this.setState({[prop]: event.target.value});\n    };\n\n    async authentication() {\n        const self = this;\n        self.$f7.dialog.preloader();\n\n        const auth = new authorisation();\n        const { inputLogin, inputPassword} = this.state;\n        const response = await auth.login(inputLogin, inputPassword);\n        if (response.status === 401) {\n            this.authError.open();\n        } else if (response.status === 200) {\n            this.authSuccess(response.data.success.name).open();\n            this.$f7.views.main.router.navigate('/');\n        }\n        self.$f7.dialog.close();\n        this.props.handleLogin(response.data.success);\n    }\n    render() {\n\n        const { inputLogin, inputPassword} = this.state;\n\n        return (\n            <Page loginScreen>\n                <Navbar\n                    title=\"\"\n                    backLink=\"Back\"\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                />\n                <LoginScreenTitle>Войти</LoginScreenTitle>\n                <List form>\n                    <ListInput\n                        label=\"Email\"\n                        name=\"username\"\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        value={inputLogin}\n                        onChange={this.handleOnChange('inputLogin')}\n                    />\n                    <ListInput\n                        label=\"Password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        value={inputPassword}\n                        onChange={this.handleOnChange('inputPassword')}\n                    />\n\n                    <BlockFooter>\n                        <Button fill onClick={()=>this.authentication()}>Войти</Button>\n                    </BlockFooter>\n                </List>\n\n                <List>\n                    <BlockFooter>\n                        <p><Link href={'/register_user/'}>Зарегистрироваться</Link></p>\n                        {/*<p>Для восстановления пароля нажмите <Link>ссылку</Link></p>*/}\n                    </BlockFooter>\n                </List>\n            </Page>\n        )\n    }\n}\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleLogin} from \"../../actions/UserActions\";\n\nimport {setData} from \"../../axios/setData\";\n\nclass EditUserPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            name: '',\n            password: '',\n        }\n    }\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    updateUser = async () => {\n        if (this.state.name === '') {\n            this.$f7.toast.create({ text: 'Введите ваше имя',closeTimeout: 2000 }).open();\n            return;\n        }\n        if (this.state.email === '') {\n            this.$f7.toast.create({ text: 'Введите почтовый адрес',closeTimeout: 2000 }).open();\n            return;\n        }\n        if (this.props.user.initial === 1 && this.state.password === '') {\n            this.$f7.toast.create({ text: 'Введите пароль', closeTimeout: 2000 }).open();\n            return;\n        }\n\n        this.$f7.dialog.preloader('Пожалуйста подождите...');\n        const set_data = new setData();\n        const user = this.props.user;\n        user.name = this.state.name;\n        user.email = this.state.email;\n        const new_data = {email: user.email, name: user.name};\n        if (this.state.password !== '') {\n            new_data.password = this.state.password;\n        }\n        if (this.props.user.initial === 1) {\n            new_data.initial = 0;\n            user.initial = 0;\n        }\n        await set_data.dataPut(`user-update/${user.id}`, new_data).then(() => {\n            this.props.handleLogin(user);\n            this.$f7.views.main.router.navigate('/');\n            this.$f7.dialog.close();\n        });\n    };\n\n    async componentDidMount() {\n        const {email, name, initial} = this.props.user;\n        if (initial !== 1) {\n            this.$f7.dialog.preloader('Пожалуйста подождите...');\n            this.setState({email: email, name: name});\n            this.$f7.dialog.close();\n        }\n    }\n\n    render() {\n        const {email, name, password} = this.state;\n        const {initial} = this.props.user;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={initial === 1 ? \"Регистрация\" : \"Редактировать пользователя\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >{initial === 1\n                    ? \"После регистрации станут доступны дополнительные возможности.\"\n                    : \"Здесь вы можете отредактировать параметры своего профиля.\"}</BlockTitle>\n                <List>\n                    <ListInput\n                        label=\"Имя пользователя\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Ваше имя\"\n                        value={name}\n                        onChange={(event) => this.handleData('name', event.target.value)}\n                    />\n                    <ListInput\n                        label=\"Почта / Логин\"\n                        floatingLabel\n                        type=\"email\"\n                        placeholder=\"Ваша почта\"\n                        value={email}\n                        onChange={(event) => this.handleData('email', event.target.value)}\n                    />\n                    <ListInput\n                        label=\"Пароль\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder={initial === 1 ? \"Введите пароль\" : \"Введите новый, если хотите сменить\"}\n                        value={password}\n                        onChange={(event) => this.handleData('password', event.target.value)}\n                    />\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.updateUser()}\n                    >{initial === 1 ? \"Зарегистрироваться\" : \"Изменить\"}</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUserPage)","import React, {Component} from 'react';\nimport {\n    Page,\n    Navbar,\n    List,\n    ListInput,\n    Block,\n    BlockTitle,\n    Button,\n} from 'framework7-react';\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleLogin} from \"../../actions/UserActions\";\n\nimport {setData} from \"../../axios/setData\";\nimport {authorisation} from \"../../axios/login\";\n\nclass RegisterUserPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            name: '',\n            password: '',\n        }\n    }\n\n    handleData = (name, value) => {\n        this.setState({[name]: value});\n    };\n\n    registerUser = async () => {\n        if (this.state.name === '') {\n            this.$f7.toast.create({ text: 'Введите ваше имя',closeTimeout: 2000 }).open();\n            return;\n        }\n        if (this.state.email === '') {\n            this.$f7.toast.create({ text: 'Введите почтовый адрес',closeTimeout: 2000 }).open();\n            return;\n        }\n        if (this.props.user.initial === 1 && this.state.password === '') {\n            this.$f7.toast.create({ text: 'Введите пароль', closeTimeout: 2000 }).open();\n            return;\n        }\n\n        this.$f7.dialog.preloader('Пожалуйста подождите...');\n        const set_data = new setData();\n        const user = this.props.user;\n        user.name = this.state.name;\n        user.email = this.state.email;\n        user.initial = 0;\n\n        const new_data = {email: user.email, name: user.name};\n        new_data.password = this.state.password;\n        new_data.c_password = this.state.password;\n        new_data.initial = 0;\n        new_data.role_id = 3;\n        await set_data.dataPut(`register/`, new_data).then(() => {\n            this.props.handleLogin(user);\n            this.$f7.views.main.router.navigate('/');\n            this.$f7.dialog.close();\n        });\n\n        await set_data.data('register', new_data).then(async data => {\n            console.log(data);\n            // auth user\n            const auth = new authorisation();\n            await auth.login(user.email, new_data.password).then( async response => {\n                // записываем токен\n                const user = response.data.success;\n                await this.props.handleLogin(user);\n\n                // restart page\n                document.location.href='/';\n            });\n        });\n    };\n\n    render() {\n        const {email, name, password} = this.state;\n\n        return (\n            <Page>\n                <Navbar\n                    color=\"white\"\n                    textColor=\"white\"\n                    bgColor=\"main\"\n                    title={\"Регистрация\"}\n                    backLink=\"Back\"\n                >\n                </Navbar>\n                <BlockTitle\n                    style={{whiteSpace: 'initial'}}\n                >После регистрации станут доступны дополнительные возможности.</BlockTitle>\n                <List>\n                    <ListInput\n                        label=\"Имя пользователя\"\n                        floatingLabel\n                        type=\"text\"\n                        placeholder=\"Ваше имя\"\n                        value={name}\n                        onChange={(event) => this.handleData('name', event.target.value)}\n                    />\n                    <ListInput\n                        label=\"Почта / Логин\"\n                        floatingLabel\n                        type=\"email\"\n                        placeholder=\"Ваша почта\"\n                        autocomplete=\"username\"\n                        value={email}\n                        onChange={(event) => this.handleData('email', event.target.value)}\n                    />\n                    <ListInput\n                        label=\"Пароль\"\n                        floatingLabel\n                        type=\"password\"\n                        placeholder=\"Введите пароль\"\n                        autocomplete=\"new-password\"\n                        value={password}\n                        onChange={(event) => this.handleData('password', event.target.value)}\n                    />\n                </List>\n                <Block>\n                    <Button\n                        fill\n                        onClick={() => this.registerUser()}\n                    >Зарегистрироваться</Button>\n                </Block>\n            </Page>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        user: store.user,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: user => dispatch(handleLogin(user)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterUserPage)","import React, { Component } from \"react\";\nimport {\n  Page,\n  Navbar,\n  List,\n  ListInput,\n  ListItem,\n  Block,\n  BlockTitle,\n  Button\n} from \"framework7-react\";\nimport connect from \"react-redux/es/connect/connect\";\nimport { handleLogin } from \"../../actions/UserActions\";\nimport { handleShop } from \"../../actions/DataActions\";\n\nimport { setData } from \"../../axios/setData\";\nimport { getData } from \"../../axios/getData\";\n\nclass EditStorePage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      description: \"\",\n      address: \"\",\n      phone: \"\",\n      comment: \"\",\n      area: \"\",\n      section: \"\",\n      store_id: 0,\n      categories: [],\n      carBrands: []\n    };\n  }\n\n  handleData = (name, value) => {\n    this.setState({ [name]: value });\n  };\n\n  categoryHandler = event => {\n    this.setState({\n      categories: [...event.target.options]\n        .filter(o => o.selected)\n        .map(o => o.value)\n    });\n  };\n\n  carBrandsHandler = event => {\n    this.setState({\n      carBrands: [...event.target.options]\n        .filter(o => o.selected)\n        .map(o => o.value)\n    });\n  };\n\n  addStore = async () => {\n    if (this.state.name === \"\") {\n      this.$f7.toast\n        .create({ text: \"Введите название\", closeTimeout: 2000 })\n        .open();\n      return;\n    }\n\n    this.$f7.dialog.preloader(\"Пожалуйста подождите...\");\n    const payload = { ...this.state };\n    delete payload.store_id;\n    const set_data = new setData();\n    await set_data.data(`shop-add`, payload).then(() => {\n      this.$f7.dialog.close();\n    });\n  };\n  updateStore = async () => {\n    if (this.state.name === \"\") {\n      this.$f7.toast\n        .create({ text: \"Введите название\", closeTimeout: 2000 })\n        .open();\n      return;\n    }\n\n    this.$f7.dialog.preloader(\"Пожалуйста подождите...\");\n    const payload = { ...this.state };\n    delete payload.store_id;\n    const set_data = new setData();\n    await set_data\n      .dataPut(`shop-update/${this.state.store_id}`, payload)\n      .then(() => {\n        let get_data = new getData();\n        get_data\n          .data(\"shop/\" + this.state.store_id)\n          .then(\n            value => value !== undefined && this.props.handleShop(value[0])\n          );\n        this.$f7.dialog.close();\n      });\n  };\n\n  async componentDidMount() {\n    const { shop_id } = this.props.user;\n    const {\n      name,\n      description,\n      address,\n      phone,\n      comment,\n      area,\n      section,\n      categories,\n      car_brands\n    } = this.props.shop;\n    const store_id = Number(shop_id) || 0;\n    this.setState({\n      store_id,\n      name,\n      description,\n      address,\n      phone,\n      comment,\n      area: area || \"\",\n      section: section || \"\",\n      categories: categories.map(v => v.id),\n      carBrands: car_brands.map(v => v.pivot.car_brand_id)\n    });\n  }\n\n  render() {\n    const {\n      name,\n      description,\n      address,\n      phone,\n      comment,\n      area,\n      section\n    } = this.state;\n    const { carbrands, categories } = this.props;\n    return (\n      <Page>\n        <Navbar\n          color=\"white\"\n          textColor=\"white\"\n          bgColor=\"main\"\n          title={\"Редактировать магазин\"}\n          backLink=\"Back\"\n        />\n        <BlockTitle style={{ whiteSpace: \"initial\" }}>\n          {\"Здесь вы можете отредактировать параметры своего профиля.\"}\n        </BlockTitle>\n        <List>\n          <ListItem title=\"Категория\" smartSelect>\n            <select\n              name=\"shop_categories\"\n              multiple\n              value={this.state.categories}\n              onChange={this.categoryHandler}\n            >\n              {categories.map(cat => {\n                return (\n                  <option key={\"cat-\" + cat.id} value={cat.id}>\n                    {cat.category}\n                  </option>\n                );\n              })}\n            </select>\n          </ListItem>\n\n          <ListItem\n            title=\"Автомобили\"\n            smartSelect\n            smartSelectParams={{\n              openIn: \"popup\",\n              searchbar: true,\n              searchbarPlaceholder: \"Поиск марки\"\n            }}\n          >\n            <select\n              name=\"car\"\n              multiple\n              value={this.state.carBrands}\n              onChange={this.carBrandsHandler}\n            >\n              {carbrands.map(car => {\n                return (\n                  <option key={\"cb-\" + car.id} value={car.id}>\n                    {car.car_brand}\n                  </option>\n                );\n              })}\n            </select>\n          </ListItem>\n          <ListInput\n            label=\"Название магазина\"\n            floatingLabel\n            type=\"text\"\n            placeholder=\"Запчасти для...\"\n            value={name}\n            onChange={event => this.handleData(\"name\", event.target.value)}\n          />\n          <ListInput\n            label=\"Описание\"\n            floatingLabel\n            type=\"text\"\n            placeholder=\"Описание вашего магазина\"\n            value={description}\n            onChange={event =>\n              this.handleData(\"description\", event.target.value)\n            }\n          />\n          <ListInput\n            label=\"Адрес\"\n            floatingLabel\n            type=\"text\"\n            placeholder=\"Точка продаж\"\n            value={address}\n            onChange={event => this.handleData(\"address\", event.target.value)}\n          />\n          <ListInput\n            label=\"Телефон\"\n            floatingLabel\n            type=\"text\"\n            placeholder=\"Контактные телефоны\"\n            value={phone}\n            onChange={event => this.handleData(\"phone\", event.target.value)}\n          />\n          <ListInput\n            label=\"Комментарий\"\n            floatingLabel\n            type=\"text\"\n            placeholder=\"Дополнительный комментарий (для себя)\"\n            value={comment}\n            onChange={event => this.handleData(\"comment\", event.target.value)}\n          />\n          <ListInput\n            label=\"Область\"\n            floatingLabel\n            type=\"text\"\n            placeholder=\"АЦ\"\n            value={area}\n            onChange={event => this.handleData(\"area\", event.target.value)}\n          />\n          <ListInput\n            label=\"Секция\"\n            floatingLabel\n            type=\"text\"\n            placeholder=\"№ секции\"\n            value={section}\n            onChange={event => this.handleData(\"section\", event.target.value)}\n          />\n        </List>\n        <Block>\n          <Button fill onClick={() => this.updateStore()}>\n            {\"Сохранить\"}\n          </Button>\n        </Block>\n      </Page>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    user: store.user,\n    shop: store.stores.shop,\n    carbrands: store.carbrands,\n    carmodels: store.carmodels,\n    categories: store.stores.categories\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLogin: user => dispatch(handleLogin(user)),\n    handleShop: shop => dispatch(handleShop(shop))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditStorePage);\n","import HomePage from './components/pages/HomePage';\nimport AboutPage from './components/pages/AboutPage';\nimport DynamicRoutePage from './components/pages/DynamicRoutePage';\nimport NotFoundPage from './components/pages/NotFoundPage';\nimport NewCarPage from \"./components/pages/NewCarPage\";\nimport NewResponsePage from \"./components/pages/NewResponsePage\";\nimport ResponsesPage from \"./components/pages/ResponsesPage\";\nimport ResponsePage from \"./components/pages/ResponsePage\";\nimport StoresList from \"./components/pages/StoresList\";\nimport LoginPage from \"./components/pages/LoginPage\";\nimport EditUserPage from \"./components/pages/EditUserPage\";\nimport RegisterUserPage from \"./components/pages/RegisterUserPage\";\nimport EditStorePage from \"./components/pages/EditStorePage\";\n\nexport default [\n    {\n        path: '/',\n        component: HomePage,\n    },\n    {\n        path: '/about/',\n        component: AboutPage,\n    },\n    {\n        path: '/login/',\n        component: LoginPage,\n    },\n    {\n        path: '/dynamic-route/blog/:blogId/post/:postId/',\n        component: DynamicRoutePage,\n    },\n    {\n        path: '/response_to_request/:reqId/',\n        component: NewResponsePage,\n    },\n    {\n        path: '/open_car/:carId/',\n        component: NewCarPage,\n    },\n    {\n        path: '/requests/:reqId/',\n        component: ResponsesPage,\n    },\n    {\n        path: '/requests/response/:reqId/',\n        component: ResponsePage,\n    },\n    {\n        path: '/stores_list/',\n        component: StoresList,\n    },\n    {\n        path: '/edit_user/',\n        component: EditUserPage,\n    },\n    {\n        path: '/register_user/',\n        component: RegisterUserPage,\n    },\n    {\n        path: '/edit_store/:storeId/',\n        component: EditStorePage,\n    },\n    {\n        path: '(.*)',\n        component: NotFoundPage,\n    },\n];\n","import React from 'react';\nimport { Page, Navbar, Link, Block, BlockTitle } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"About\" backLink=\"Back\"></Navbar>\n    <BlockTitle>About My App</BlockTitle>\n    <Block strong>\n      <p>Here is About page!</p>\n      <p>You can go <Link back>back</Link>.</p>\n      <p>Mauris posuere sit amet metus id venenatis. Ut ante dolor, tempor nec commodo rutrum, varius at sem. Nullam ac nisi non neque ornare pretium. Nulla mauris mauris, consequat et elementum sit amet, egestas sed orci. In hac habitasse platea dictumst.</p>\n      <p>Fusce eros lectus, accumsan eget mi vel, iaculis tincidunt felis. Nulla tincidunt pharetra sagittis. Fusce in felis eros. Nulla sit amet aliquam lorem, et gravida ipsum. Mauris consectetur nisl non sollicitudin tristique. Praesent vitae metus ac quam rhoncus mattis vel et nisi. Aenean aliquet, felis quis dignissim iaculis, lectus quam tincidunt ligula, et venenatis turpis risus sed lorem. Morbi eu metus elit. Ut vel diam dolor.</p>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar\n        title=\"Ошибка\"\n        backLink=\"Back\"\n        color=\"white\"\n        textColor=\"white\"\n        bgColor=\"main\"\n    />\n    <Block strong>\n      <p>Как вы сюда попали?..</p>\n      <p>Страница не найдена.</p>\n    </Block>\n  </Page>\n);\n","// Import React and ReactDOM\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport './css/app.css';\nimport 'framework7/css/framework7.bundle.css';\nimport './css/icons.css';\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(\n  React.createElement(App),\n  document.getElementById('app'),\n);\n\n","import React from 'react';\n\nimport {Provider} from 'react-redux';\nimport {store} from '../store/configureStore';\n\nimport {\n    App,\n    Panel,\n    View,\n    Statusbar,\n    Popup,\n    Page,\n    Navbar,\n    NavRight,\n    Link,\n    Block,\n} from 'framework7-react';\n\n\nimport routes from '../routes';\n\nexport default function (props) {\n\n    const params = {\n        themeDark: false,\n        mainColor: 'red'\n    };\n\n    // Framework7 parameters here\n    const f7params = {\n        id: 'ru.bhapp.marshal', // App bundle ID\n        name: 'marshal', // App name\n        theme: 'md', // Automatic theme detection\n        // App routes\n        routes,\n    };\n\n    return (\n        <Provider store={store}>\n            <App params={f7params} themeDark={params.themeDark} color={params.mainColor}>\n                {/* Statusbar */}\n                <Statusbar/>\n\n                {/* Left Panel */}\n                <Panel left cover themeDark>\n                    <View url=\"/panel-left/\"/>\n                </Panel>\n\n                {/* Right Panel */}\n                <Panel right reveal themeDark>\n                    <View url=\"/panel-right/\"/>\n                </Panel>\n\n                {/* Main View */}\n                <View id=\"main-view\" url=\"/\" main className=\"safe-areas\"/>\n\n                {/* Popup */}\n                <Popup id=\"popup\">\n                    <View>\n                        <Page>\n                            <Navbar title=\"Popup\">\n                                <NavRight>\n                                    <Link popupClose>Close</Link>\n                                </NavRight>\n                            </Navbar>\n                            <Block>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neque, architecto.\n                                Cupiditate laudantium rem nesciunt numquam, ipsam. Voluptates omnis, a inventore atque\n                                ratione aliquam. Omnis iusto nemo quos ullam obcaecati, quod.</Block>\n                        </Page>\n                    </View>\n                </Popup>\n\n            </App>\n        </Provider>\n    );\n};\n"],"sourceRoot":""}